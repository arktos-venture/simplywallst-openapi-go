/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedRawDataPastResultsData struct for CompanyAnalysisExtendedRawDataPastResultsData
type CompanyAnalysisExtendedRawDataPastResultsData struct {
	FfoInt                       *CompanyAnalysisExtendedRawDataResultsData `json:"ffo_int,omitempty"`
	FfoTotalDebt                 *CompanyAnalysisExtendedRawDataResultsData `json:"ffo_total_debt,omitempty"`
	FfoCalculated                *CompanyAnalysisExtendedRawDataResultsData `json:"ffo_calculated,omitempty"`
	Isaac                        *CompanyAnalysisExtendedRawDataResultsData `json:"isaac,omitempty"`
	OperatingRevenue             *CompanyAnalysisExtendedRawDataResultsData `json:"operating_revenue,omitempty"`
	EbtIncl                      *CompanyAnalysisExtendedRawDataResultsData `json:"ebt_incl,omitempty"`
	NetInterestExp               *CompanyAnalysisExtendedRawDataResultsData `json:"net_interest_exp,omitempty"`
	NiAvailExcl                  *CompanyAnalysisExtendedRawDataResultsData `json:"ni_avail_excl,omitempty"`
	Ebit                         *CompanyAnalysisExtendedRawDataResultsData `json:"ebit,omitempty"`
	TotalReceiv                  *CompanyAnalysisExtendedRawDataResultsData `json:"total_receiv,omitempty"`
	CashStInvest                 *CompanyAnalysisExtendedRawDataResultsData `json:"cash_st_invest,omitempty"`
	Nppe                         *CompanyAnalysisExtendedRawDataResultsData `json:"nppe,omitempty"`
	TotalAssets                  *CompanyAnalysisExtendedRawDataResultsData `json:"total_assets,omitempty"`
	TotalCa                      *CompanyAnalysisExtendedRawDataResultsData `json:"total_ca,omitempty"`
	TotalCl                      *CompanyAnalysisExtendedRawDataResultsData `json:"total_cl,omitempty"`
	TotalLiabEquity              *CompanyAnalysisExtendedRawDataResultsData `json:"total_liab_equity,omitempty"`
	Ap                           *CompanyAnalysisExtendedRawDataResultsData `json:"ap,omitempty"`
	Inventory                    *CompanyAnalysisExtendedRawDataResultsData `json:"inventory,omitempty"`
	LtDebt                       *CompanyAnalysisExtendedRawDataResultsData `json:"lt_debt,omitempty"`
	CurrentPortCapitalLeases     *CompanyAnalysisExtendedRawDataResultsData `json:"current_port_capital_leases,omitempty"`
	CashEquiv                    *CompanyAnalysisExtendedRawDataResultsData `json:"cash_equiv,omitempty"`
	CapitalLeases                *CompanyAnalysisExtendedRawDataResultsData `json:"capital_leases,omitempty"`
	TotalEquity                  *CompanyAnalysisExtendedRawDataResultsData `json:"total_equity,omitempty"`
	TotalLiabilities             *CompanyAnalysisExtendedRawDataResultsData `json:"total_liabilities,omitempty"`
	CashFFinancing               *CompanyAnalysisExtendedRawDataResultsData `json:"cash_f_financing,omitempty"`
	CashFInvesting               *CompanyAnalysisExtendedRawDataResultsData `json:"cash_f_investing,omitempty"`
	CashOper                     *CompanyAnalysisExtendedRawDataResultsData `json:"cash_oper,omitempty"`
	Capex                        *CompanyAnalysisExtendedRawDataResultsData `json:"capex,omitempty"`
	Ebt                          *CompanyAnalysisExtendedRawDataResultsData `json:"ebt,omitempty"`
	EarningCo                    *CompanyAnalysisExtendedRawDataResultsData `json:"earning_co,omitempty"`
	GrossProfit                  *CompanyAnalysisExtendedRawDataResultsData `json:"gross_profit,omitempty"`
	Ni                           *CompanyAnalysisExtendedRawDataResultsData `json:"ni,omitempty"`
	OperInc                      *CompanyAnalysisExtendedRawDataResultsData `json:"oper_inc,omitempty"`
	GAExpense                    *CompanyAnalysisExtendedRawDataResultsData `json:"g_a_expense,omitempty"`
	TotalRev                     *CompanyAnalysisExtendedRawDataResultsData `json:"total_rev,omitempty"`
	IncomeTax                    *CompanyAnalysisExtendedRawDataResultsData `json:"income_tax,omitempty"`
	InterestExp                  *CompanyAnalysisExtendedRawDataResultsData `json:"interest_exp,omitempty"`
	RDExpense                    *CompanyAnalysisExtendedRawDataResultsData `json:"r_d_expense,omitempty"`
	Beta5yr                      *CompanyAnalysisExtendedRawDataResultsData `json:"beta_5yr,omitempty"`
	BvShare                      *CompanyAnalysisExtendedRawDataResultsData `json:"bv_share,omitempty"`
	TotalDebtEquity              *CompanyAnalysisExtendedRawDataResultsData `json:"total_debt_equity,omitempty"`
	Ebitda                       *CompanyAnalysisExtendedRawDataResultsData `json:"ebitda,omitempty"`
	TotalRevEmployee             *CompanyAnalysisExtendedRawDataResultsData `json:"total_rev_employee,omitempty"`
	ReturnEquity                 *CompanyAnalysisExtendedRawDataResultsData `json:"return_equity,omitempty"`
	TotalDebt                    *CompanyAnalysisExtendedRawDataResultsData `json:"total_debt,omitempty"`
	ReturnAssets                 *CompanyAnalysisExtendedRawDataResultsData `json:"return_assets,omitempty"`
	CashConversion               *CompanyAnalysisExtendedRawDataResultsData `json:"cash_conversion,omitempty"`
	NetDebt                      *CompanyAnalysisExtendedRawDataResultsData `json:"net_debt,omitempty"`
	TotalEmployees               *CompanyAnalysisExtendedRawDataResultsData `json:"total_employees,omitempty"`
	PayoutRatio                  *CompanyAnalysisExtendedRawDataResultsData `json:"payout_ratio,omitempty"`
	NormEps                      *CompanyAnalysisExtendedRawDataResultsData `json:"norm_eps,omitempty"`
	TotalRevShare                *CompanyAnalysisExtendedRawDataResultsData `json:"total_rev_share,omitempty"`
	LeveredFcf                   *CompanyAnalysisExtendedRawDataResultsData `json:"levered_fcf,omitempty"`
	MgmtRateReturn               *CompanyAnalysisExtendedRawDataResultsData `json:"mgmt_rate_return,omitempty"`
	FfoGrossProfit               *CompanyAnalysisExtendedRawDataResultsData `json:"ffo_gross_profit,omitempty"`
	TotalDivPaidCf               *CompanyAnalysisExtendedRawDataResultsData `json:"total_div_paid_cf,omitempty"`
	NetBuybacks                  *CompanyAnalysisExtendedRawDataResultsData `json:"net_buybacks,omitempty"`
	CashPurchaseIntangibleAssets *CompanyAnalysisExtendedRawDataResultsData `json:"cash_purchase_intangible_assets,omitempty"`
	DivShare                     *CompanyAnalysisExtendedRawDataResultsData `json:"div_share,omitempty"`
	BasicEps                     *CompanyAnalysisExtendedRawDataResultsData `json:"basic_eps,omitempty"`
	BasicWeight                  *CompanyAnalysisExtendedRawDataResultsData `json:"basic_weight,omitempty"`
	SharesPerDr                  *CompanyAnalysisExtendedRawDataResultsData `json:"shares_per_dr,omitempty"`
}

// NewCompanyAnalysisExtendedRawDataPastResultsData instantiates a new CompanyAnalysisExtendedRawDataPastResultsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedRawDataPastResultsData() *CompanyAnalysisExtendedRawDataPastResultsData {
	this := CompanyAnalysisExtendedRawDataPastResultsData{}
	return &this
}

// NewCompanyAnalysisExtendedRawDataPastResultsDataWithDefaults instantiates a new CompanyAnalysisExtendedRawDataPastResultsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedRawDataPastResultsDataWithDefaults() *CompanyAnalysisExtendedRawDataPastResultsData {
	this := CompanyAnalysisExtendedRawDataPastResultsData{}
	return &this
}

// GetFfoInt returns the FfoInt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoInt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.FfoInt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.FfoInt
}

// GetFfoIntOk returns a tuple with the FfoInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoIntOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.FfoInt == nil {
		return nil, false
	}
	return o.FfoInt, true
}

// HasFfoInt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasFfoInt() bool {
	if o != nil && o.FfoInt != nil {
		return true
	}

	return false
}

// SetFfoInt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the FfoInt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetFfoInt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.FfoInt = &v
}

// GetFfoTotalDebt returns the FfoTotalDebt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoTotalDebt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.FfoTotalDebt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.FfoTotalDebt
}

// GetFfoTotalDebtOk returns a tuple with the FfoTotalDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoTotalDebtOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.FfoTotalDebt == nil {
		return nil, false
	}
	return o.FfoTotalDebt, true
}

// HasFfoTotalDebt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasFfoTotalDebt() bool {
	if o != nil && o.FfoTotalDebt != nil {
		return true
	}

	return false
}

// SetFfoTotalDebt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the FfoTotalDebt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetFfoTotalDebt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.FfoTotalDebt = &v
}

// GetFfoCalculated returns the FfoCalculated field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoCalculated() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.FfoCalculated == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.FfoCalculated
}

// GetFfoCalculatedOk returns a tuple with the FfoCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoCalculatedOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.FfoCalculated == nil {
		return nil, false
	}
	return o.FfoCalculated, true
}

// HasFfoCalculated returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasFfoCalculated() bool {
	if o != nil && o.FfoCalculated != nil {
		return true
	}

	return false
}

// SetFfoCalculated gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the FfoCalculated field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetFfoCalculated(v CompanyAnalysisExtendedRawDataResultsData) {
	o.FfoCalculated = &v
}

// GetIsaac returns the Isaac field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetIsaac() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Isaac == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Isaac
}

// GetIsaacOk returns a tuple with the Isaac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetIsaacOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Isaac == nil {
		return nil, false
	}
	return o.Isaac, true
}

// HasIsaac returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasIsaac() bool {
	if o != nil && o.Isaac != nil {
		return true
	}

	return false
}

// SetIsaac gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Isaac field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetIsaac(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Isaac = &v
}

// GetOperatingRevenue returns the OperatingRevenue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetOperatingRevenue() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.OperatingRevenue == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.OperatingRevenue
}

// GetOperatingRevenueOk returns a tuple with the OperatingRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetOperatingRevenueOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.OperatingRevenue == nil {
		return nil, false
	}
	return o.OperatingRevenue, true
}

// HasOperatingRevenue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasOperatingRevenue() bool {
	if o != nil && o.OperatingRevenue != nil {
		return true
	}

	return false
}

// SetOperatingRevenue gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the OperatingRevenue field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetOperatingRevenue(v CompanyAnalysisExtendedRawDataResultsData) {
	o.OperatingRevenue = &v
}

// GetEbtIncl returns the EbtIncl field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbtIncl() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.EbtIncl == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.EbtIncl
}

// GetEbtInclOk returns a tuple with the EbtIncl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbtInclOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.EbtIncl == nil {
		return nil, false
	}
	return o.EbtIncl, true
}

// HasEbtIncl returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasEbtIncl() bool {
	if o != nil && o.EbtIncl != nil {
		return true
	}

	return false
}

// SetEbtIncl gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the EbtIncl field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetEbtIncl(v CompanyAnalysisExtendedRawDataResultsData) {
	o.EbtIncl = &v
}

// GetNetInterestExp returns the NetInterestExp field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetInterestExp() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.NetInterestExp == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.NetInterestExp
}

// GetNetInterestExpOk returns a tuple with the NetInterestExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetInterestExpOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.NetInterestExp == nil {
		return nil, false
	}
	return o.NetInterestExp, true
}

// HasNetInterestExp returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNetInterestExp() bool {
	if o != nil && o.NetInterestExp != nil {
		return true
	}

	return false
}

// SetNetInterestExp gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the NetInterestExp field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNetInterestExp(v CompanyAnalysisExtendedRawDataResultsData) {
	o.NetInterestExp = &v
}

// GetNiAvailExcl returns the NiAvailExcl field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNiAvailExcl() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.NiAvailExcl == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.NiAvailExcl
}

// GetNiAvailExclOk returns a tuple with the NiAvailExcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNiAvailExclOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.NiAvailExcl == nil {
		return nil, false
	}
	return o.NiAvailExcl, true
}

// HasNiAvailExcl returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNiAvailExcl() bool {
	if o != nil && o.NiAvailExcl != nil {
		return true
	}

	return false
}

// SetNiAvailExcl gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the NiAvailExcl field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNiAvailExcl(v CompanyAnalysisExtendedRawDataResultsData) {
	o.NiAvailExcl = &v
}

// GetEbit returns the Ebit field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbit() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Ebit == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Ebit
}

// GetEbitOk returns a tuple with the Ebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbitOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Ebit == nil {
		return nil, false
	}
	return o.Ebit, true
}

// HasEbit returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasEbit() bool {
	if o != nil && o.Ebit != nil {
		return true
	}

	return false
}

// SetEbit gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Ebit field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetEbit(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Ebit = &v
}

// GetTotalReceiv returns the TotalReceiv field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalReceiv() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalReceiv == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalReceiv
}

// GetTotalReceivOk returns a tuple with the TotalReceiv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalReceivOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalReceiv == nil {
		return nil, false
	}
	return o.TotalReceiv, true
}

// HasTotalReceiv returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalReceiv() bool {
	if o != nil && o.TotalReceiv != nil {
		return true
	}

	return false
}

// SetTotalReceiv gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalReceiv field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalReceiv(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalReceiv = &v
}

// GetCashStInvest returns the CashStInvest field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashStInvest() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashStInvest == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashStInvest
}

// GetCashStInvestOk returns a tuple with the CashStInvest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashStInvestOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashStInvest == nil {
		return nil, false
	}
	return o.CashStInvest, true
}

// HasCashStInvest returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashStInvest() bool {
	if o != nil && o.CashStInvest != nil {
		return true
	}

	return false
}

// SetCashStInvest gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashStInvest field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashStInvest(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashStInvest = &v
}

// GetNppe returns the Nppe field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNppe() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Nppe == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Nppe
}

// GetNppeOk returns a tuple with the Nppe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNppeOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Nppe == nil {
		return nil, false
	}
	return o.Nppe, true
}

// HasNppe returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNppe() bool {
	if o != nil && o.Nppe != nil {
		return true
	}

	return false
}

// SetNppe gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Nppe field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNppe(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Nppe = &v
}

// GetTotalAssets returns the TotalAssets field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalAssets() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalAssets == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalAssets
}

// GetTotalAssetsOk returns a tuple with the TotalAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalAssetsOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalAssets == nil {
		return nil, false
	}
	return o.TotalAssets, true
}

// HasTotalAssets returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalAssets() bool {
	if o != nil && o.TotalAssets != nil {
		return true
	}

	return false
}

// SetTotalAssets gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalAssets field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalAssets(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalAssets = &v
}

// GetTotalCa returns the TotalCa field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalCa() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalCa == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalCa
}

// GetTotalCaOk returns a tuple with the TotalCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalCaOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalCa == nil {
		return nil, false
	}
	return o.TotalCa, true
}

// HasTotalCa returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalCa() bool {
	if o != nil && o.TotalCa != nil {
		return true
	}

	return false
}

// SetTotalCa gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalCa field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalCa(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalCa = &v
}

// GetTotalCl returns the TotalCl field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalCl() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalCl == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalCl
}

// GetTotalClOk returns a tuple with the TotalCl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalClOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalCl == nil {
		return nil, false
	}
	return o.TotalCl, true
}

// HasTotalCl returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalCl() bool {
	if o != nil && o.TotalCl != nil {
		return true
	}

	return false
}

// SetTotalCl gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalCl field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalCl(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalCl = &v
}

// GetTotalLiabEquity returns the TotalLiabEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalLiabEquity() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalLiabEquity == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalLiabEquity
}

// GetTotalLiabEquityOk returns a tuple with the TotalLiabEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalLiabEquityOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalLiabEquity == nil {
		return nil, false
	}
	return o.TotalLiabEquity, true
}

// HasTotalLiabEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalLiabEquity() bool {
	if o != nil && o.TotalLiabEquity != nil {
		return true
	}

	return false
}

// SetTotalLiabEquity gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalLiabEquity field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalLiabEquity(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalLiabEquity = &v
}

// GetAp returns the Ap field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetAp() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Ap == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Ap
}

// GetApOk returns a tuple with the Ap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetApOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Ap == nil {
		return nil, false
	}
	return o.Ap, true
}

// HasAp returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasAp() bool {
	if o != nil && o.Ap != nil {
		return true
	}

	return false
}

// SetAp gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Ap field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetAp(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Ap = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetInventory() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Inventory == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetInventoryOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Inventory == nil {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasInventory() bool {
	if o != nil && o.Inventory != nil {
		return true
	}

	return false
}

// SetInventory gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Inventory field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetInventory(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Inventory = &v
}

// GetLtDebt returns the LtDebt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetLtDebt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.LtDebt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.LtDebt
}

// GetLtDebtOk returns a tuple with the LtDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetLtDebtOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.LtDebt == nil {
		return nil, false
	}
	return o.LtDebt, true
}

// HasLtDebt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasLtDebt() bool {
	if o != nil && o.LtDebt != nil {
		return true
	}

	return false
}

// SetLtDebt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the LtDebt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetLtDebt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.LtDebt = &v
}

// GetCurrentPortCapitalLeases returns the CurrentPortCapitalLeases field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCurrentPortCapitalLeases() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CurrentPortCapitalLeases == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CurrentPortCapitalLeases
}

// GetCurrentPortCapitalLeasesOk returns a tuple with the CurrentPortCapitalLeases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCurrentPortCapitalLeasesOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CurrentPortCapitalLeases == nil {
		return nil, false
	}
	return o.CurrentPortCapitalLeases, true
}

// HasCurrentPortCapitalLeases returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCurrentPortCapitalLeases() bool {
	if o != nil && o.CurrentPortCapitalLeases != nil {
		return true
	}

	return false
}

// SetCurrentPortCapitalLeases gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CurrentPortCapitalLeases field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCurrentPortCapitalLeases(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CurrentPortCapitalLeases = &v
}

// GetCashEquiv returns the CashEquiv field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashEquiv() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashEquiv == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashEquiv
}

// GetCashEquivOk returns a tuple with the CashEquiv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashEquivOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashEquiv == nil {
		return nil, false
	}
	return o.CashEquiv, true
}

// HasCashEquiv returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashEquiv() bool {
	if o != nil && o.CashEquiv != nil {
		return true
	}

	return false
}

// SetCashEquiv gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashEquiv field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashEquiv(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashEquiv = &v
}

// GetCapitalLeases returns the CapitalLeases field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCapitalLeases() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CapitalLeases == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CapitalLeases
}

// GetCapitalLeasesOk returns a tuple with the CapitalLeases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCapitalLeasesOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CapitalLeases == nil {
		return nil, false
	}
	return o.CapitalLeases, true
}

// HasCapitalLeases returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCapitalLeases() bool {
	if o != nil && o.CapitalLeases != nil {
		return true
	}

	return false
}

// SetCapitalLeases gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CapitalLeases field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCapitalLeases(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CapitalLeases = &v
}

// GetTotalEquity returns the TotalEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalEquity() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalEquity == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalEquity
}

// GetTotalEquityOk returns a tuple with the TotalEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalEquityOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalEquity == nil {
		return nil, false
	}
	return o.TotalEquity, true
}

// HasTotalEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalEquity() bool {
	if o != nil && o.TotalEquity != nil {
		return true
	}

	return false
}

// SetTotalEquity gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalEquity field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalEquity(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalEquity = &v
}

// GetTotalLiabilities returns the TotalLiabilities field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalLiabilities() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalLiabilities == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalLiabilities
}

// GetTotalLiabilitiesOk returns a tuple with the TotalLiabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalLiabilitiesOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalLiabilities == nil {
		return nil, false
	}
	return o.TotalLiabilities, true
}

// HasTotalLiabilities returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalLiabilities() bool {
	if o != nil && o.TotalLiabilities != nil {
		return true
	}

	return false
}

// SetTotalLiabilities gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalLiabilities field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalLiabilities(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalLiabilities = &v
}

// GetCashFFinancing returns the CashFFinancing field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashFFinancing() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashFFinancing == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashFFinancing
}

// GetCashFFinancingOk returns a tuple with the CashFFinancing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashFFinancingOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashFFinancing == nil {
		return nil, false
	}
	return o.CashFFinancing, true
}

// HasCashFFinancing returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashFFinancing() bool {
	if o != nil && o.CashFFinancing != nil {
		return true
	}

	return false
}

// SetCashFFinancing gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashFFinancing field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashFFinancing(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashFFinancing = &v
}

// GetCashFInvesting returns the CashFInvesting field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashFInvesting() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashFInvesting == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashFInvesting
}

// GetCashFInvestingOk returns a tuple with the CashFInvesting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashFInvestingOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashFInvesting == nil {
		return nil, false
	}
	return o.CashFInvesting, true
}

// HasCashFInvesting returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashFInvesting() bool {
	if o != nil && o.CashFInvesting != nil {
		return true
	}

	return false
}

// SetCashFInvesting gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashFInvesting field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashFInvesting(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashFInvesting = &v
}

// GetCashOper returns the CashOper field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashOper() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashOper == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashOper
}

// GetCashOperOk returns a tuple with the CashOper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashOperOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashOper == nil {
		return nil, false
	}
	return o.CashOper, true
}

// HasCashOper returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashOper() bool {
	if o != nil && o.CashOper != nil {
		return true
	}

	return false
}

// SetCashOper gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashOper field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashOper(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashOper = &v
}

// GetCapex returns the Capex field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCapex() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Capex == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Capex
}

// GetCapexOk returns a tuple with the Capex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCapexOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Capex == nil {
		return nil, false
	}
	return o.Capex, true
}

// HasCapex returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCapex() bool {
	if o != nil && o.Capex != nil {
		return true
	}

	return false
}

// SetCapex gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Capex field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCapex(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Capex = &v
}

// GetEbt returns the Ebt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Ebt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Ebt
}

// GetEbtOk returns a tuple with the Ebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbtOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Ebt == nil {
		return nil, false
	}
	return o.Ebt, true
}

// HasEbt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasEbt() bool {
	if o != nil && o.Ebt != nil {
		return true
	}

	return false
}

// SetEbt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Ebt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetEbt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Ebt = &v
}

// GetEarningCo returns the EarningCo field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEarningCo() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.EarningCo == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.EarningCo
}

// GetEarningCoOk returns a tuple with the EarningCo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEarningCoOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.EarningCo == nil {
		return nil, false
	}
	return o.EarningCo, true
}

// HasEarningCo returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasEarningCo() bool {
	if o != nil && o.EarningCo != nil {
		return true
	}

	return false
}

// SetEarningCo gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the EarningCo field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetEarningCo(v CompanyAnalysisExtendedRawDataResultsData) {
	o.EarningCo = &v
}

// GetGrossProfit returns the GrossProfit field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetGrossProfit() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.GrossProfit == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.GrossProfit
}

// GetGrossProfitOk returns a tuple with the GrossProfit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetGrossProfitOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.GrossProfit == nil {
		return nil, false
	}
	return o.GrossProfit, true
}

// HasGrossProfit returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasGrossProfit() bool {
	if o != nil && o.GrossProfit != nil {
		return true
	}

	return false
}

// SetGrossProfit gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the GrossProfit field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetGrossProfit(v CompanyAnalysisExtendedRawDataResultsData) {
	o.GrossProfit = &v
}

// GetNi returns the Ni field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNi() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Ni == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Ni
}

// GetNiOk returns a tuple with the Ni field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNiOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Ni == nil {
		return nil, false
	}
	return o.Ni, true
}

// HasNi returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNi() bool {
	if o != nil && o.Ni != nil {
		return true
	}

	return false
}

// SetNi gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Ni field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNi(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Ni = &v
}

// GetOperInc returns the OperInc field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetOperInc() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.OperInc == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.OperInc
}

// GetOperIncOk returns a tuple with the OperInc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetOperIncOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.OperInc == nil {
		return nil, false
	}
	return o.OperInc, true
}

// HasOperInc returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasOperInc() bool {
	if o != nil && o.OperInc != nil {
		return true
	}

	return false
}

// SetOperInc gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the OperInc field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetOperInc(v CompanyAnalysisExtendedRawDataResultsData) {
	o.OperInc = &v
}

// GetGAExpense returns the GAExpense field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetGAExpense() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.GAExpense == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.GAExpense
}

// GetGAExpenseOk returns a tuple with the GAExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetGAExpenseOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.GAExpense == nil {
		return nil, false
	}
	return o.GAExpense, true
}

// HasGAExpense returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasGAExpense() bool {
	if o != nil && o.GAExpense != nil {
		return true
	}

	return false
}

// SetGAExpense gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the GAExpense field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetGAExpense(v CompanyAnalysisExtendedRawDataResultsData) {
	o.GAExpense = &v
}

// GetTotalRev returns the TotalRev field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRev() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalRev == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalRev
}

// GetTotalRevOk returns a tuple with the TotalRev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRevOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalRev == nil {
		return nil, false
	}
	return o.TotalRev, true
}

// HasTotalRev returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalRev() bool {
	if o != nil && o.TotalRev != nil {
		return true
	}

	return false
}

// SetTotalRev gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalRev field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalRev(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalRev = &v
}

// GetIncomeTax returns the IncomeTax field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetIncomeTax() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.IncomeTax == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.IncomeTax
}

// GetIncomeTaxOk returns a tuple with the IncomeTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetIncomeTaxOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.IncomeTax == nil {
		return nil, false
	}
	return o.IncomeTax, true
}

// HasIncomeTax returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasIncomeTax() bool {
	if o != nil && o.IncomeTax != nil {
		return true
	}

	return false
}

// SetIncomeTax gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the IncomeTax field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetIncomeTax(v CompanyAnalysisExtendedRawDataResultsData) {
	o.IncomeTax = &v
}

// GetInterestExp returns the InterestExp field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetInterestExp() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.InterestExp == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.InterestExp
}

// GetInterestExpOk returns a tuple with the InterestExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetInterestExpOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.InterestExp == nil {
		return nil, false
	}
	return o.InterestExp, true
}

// HasInterestExp returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasInterestExp() bool {
	if o != nil && o.InterestExp != nil {
		return true
	}

	return false
}

// SetInterestExp gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the InterestExp field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetInterestExp(v CompanyAnalysisExtendedRawDataResultsData) {
	o.InterestExp = &v
}

// GetRDExpense returns the RDExpense field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetRDExpense() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.RDExpense == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.RDExpense
}

// GetRDExpenseOk returns a tuple with the RDExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetRDExpenseOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.RDExpense == nil {
		return nil, false
	}
	return o.RDExpense, true
}

// HasRDExpense returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasRDExpense() bool {
	if o != nil && o.RDExpense != nil {
		return true
	}

	return false
}

// SetRDExpense gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the RDExpense field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetRDExpense(v CompanyAnalysisExtendedRawDataResultsData) {
	o.RDExpense = &v
}

// GetBeta5yr returns the Beta5yr field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBeta5yr() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Beta5yr == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Beta5yr
}

// GetBeta5yrOk returns a tuple with the Beta5yr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBeta5yrOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Beta5yr == nil {
		return nil, false
	}
	return o.Beta5yr, true
}

// HasBeta5yr returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasBeta5yr() bool {
	if o != nil && o.Beta5yr != nil {
		return true
	}

	return false
}

// SetBeta5yr gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Beta5yr field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetBeta5yr(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Beta5yr = &v
}

// GetBvShare returns the BvShare field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBvShare() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.BvShare == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.BvShare
}

// GetBvShareOk returns a tuple with the BvShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBvShareOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.BvShare == nil {
		return nil, false
	}
	return o.BvShare, true
}

// HasBvShare returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasBvShare() bool {
	if o != nil && o.BvShare != nil {
		return true
	}

	return false
}

// SetBvShare gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the BvShare field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetBvShare(v CompanyAnalysisExtendedRawDataResultsData) {
	o.BvShare = &v
}

// GetTotalDebtEquity returns the TotalDebtEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDebtEquity() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalDebtEquity == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalDebtEquity
}

// GetTotalDebtEquityOk returns a tuple with the TotalDebtEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDebtEquityOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalDebtEquity == nil {
		return nil, false
	}
	return o.TotalDebtEquity, true
}

// HasTotalDebtEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalDebtEquity() bool {
	if o != nil && o.TotalDebtEquity != nil {
		return true
	}

	return false
}

// SetTotalDebtEquity gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalDebtEquity field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalDebtEquity(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalDebtEquity = &v
}

// GetEbitda returns the Ebitda field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbitda() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.Ebitda == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.Ebitda
}

// GetEbitdaOk returns a tuple with the Ebitda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetEbitdaOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.Ebitda == nil {
		return nil, false
	}
	return o.Ebitda, true
}

// HasEbitda returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasEbitda() bool {
	if o != nil && o.Ebitda != nil {
		return true
	}

	return false
}

// SetEbitda gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the Ebitda field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetEbitda(v CompanyAnalysisExtendedRawDataResultsData) {
	o.Ebitda = &v
}

// GetTotalRevEmployee returns the TotalRevEmployee field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRevEmployee() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalRevEmployee == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalRevEmployee
}

// GetTotalRevEmployeeOk returns a tuple with the TotalRevEmployee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRevEmployeeOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalRevEmployee == nil {
		return nil, false
	}
	return o.TotalRevEmployee, true
}

// HasTotalRevEmployee returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalRevEmployee() bool {
	if o != nil && o.TotalRevEmployee != nil {
		return true
	}

	return false
}

// SetTotalRevEmployee gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalRevEmployee field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalRevEmployee(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalRevEmployee = &v
}

// GetReturnEquity returns the ReturnEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetReturnEquity() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.ReturnEquity == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.ReturnEquity
}

// GetReturnEquityOk returns a tuple with the ReturnEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetReturnEquityOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.ReturnEquity == nil {
		return nil, false
	}
	return o.ReturnEquity, true
}

// HasReturnEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasReturnEquity() bool {
	if o != nil && o.ReturnEquity != nil {
		return true
	}

	return false
}

// SetReturnEquity gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the ReturnEquity field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetReturnEquity(v CompanyAnalysisExtendedRawDataResultsData) {
	o.ReturnEquity = &v
}

// GetTotalDebt returns the TotalDebt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDebt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalDebt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalDebt
}

// GetTotalDebtOk returns a tuple with the TotalDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDebtOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalDebt == nil {
		return nil, false
	}
	return o.TotalDebt, true
}

// HasTotalDebt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalDebt() bool {
	if o != nil && o.TotalDebt != nil {
		return true
	}

	return false
}

// SetTotalDebt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalDebt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalDebt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalDebt = &v
}

// GetReturnAssets returns the ReturnAssets field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetReturnAssets() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.ReturnAssets == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.ReturnAssets
}

// GetReturnAssetsOk returns a tuple with the ReturnAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetReturnAssetsOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.ReturnAssets == nil {
		return nil, false
	}
	return o.ReturnAssets, true
}

// HasReturnAssets returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasReturnAssets() bool {
	if o != nil && o.ReturnAssets != nil {
		return true
	}

	return false
}

// SetReturnAssets gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the ReturnAssets field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetReturnAssets(v CompanyAnalysisExtendedRawDataResultsData) {
	o.ReturnAssets = &v
}

// GetCashConversion returns the CashConversion field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashConversion() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashConversion == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashConversion
}

// GetCashConversionOk returns a tuple with the CashConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashConversionOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashConversion == nil {
		return nil, false
	}
	return o.CashConversion, true
}

// HasCashConversion returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashConversion() bool {
	if o != nil && o.CashConversion != nil {
		return true
	}

	return false
}

// SetCashConversion gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashConversion field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashConversion(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashConversion = &v
}

// GetNetDebt returns the NetDebt field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetDebt() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.NetDebt == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.NetDebt
}

// GetNetDebtOk returns a tuple with the NetDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetDebtOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.NetDebt == nil {
		return nil, false
	}
	return o.NetDebt, true
}

// HasNetDebt returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNetDebt() bool {
	if o != nil && o.NetDebt != nil {
		return true
	}

	return false
}

// SetNetDebt gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the NetDebt field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNetDebt(v CompanyAnalysisExtendedRawDataResultsData) {
	o.NetDebt = &v
}

// GetTotalEmployees returns the TotalEmployees field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalEmployees() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalEmployees == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalEmployees
}

// GetTotalEmployeesOk returns a tuple with the TotalEmployees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalEmployeesOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalEmployees == nil {
		return nil, false
	}
	return o.TotalEmployees, true
}

// HasTotalEmployees returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalEmployees() bool {
	if o != nil && o.TotalEmployees != nil {
		return true
	}

	return false
}

// SetTotalEmployees gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalEmployees field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalEmployees(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalEmployees = &v
}

// GetPayoutRatio returns the PayoutRatio field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetPayoutRatio() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.PayoutRatio == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.PayoutRatio
}

// GetPayoutRatioOk returns a tuple with the PayoutRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetPayoutRatioOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.PayoutRatio == nil {
		return nil, false
	}
	return o.PayoutRatio, true
}

// HasPayoutRatio returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasPayoutRatio() bool {
	if o != nil && o.PayoutRatio != nil {
		return true
	}

	return false
}

// SetPayoutRatio gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the PayoutRatio field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetPayoutRatio(v CompanyAnalysisExtendedRawDataResultsData) {
	o.PayoutRatio = &v
}

// GetNormEps returns the NormEps field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNormEps() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.NormEps == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.NormEps
}

// GetNormEpsOk returns a tuple with the NormEps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNormEpsOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.NormEps == nil {
		return nil, false
	}
	return o.NormEps, true
}

// HasNormEps returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNormEps() bool {
	if o != nil && o.NormEps != nil {
		return true
	}

	return false
}

// SetNormEps gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the NormEps field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNormEps(v CompanyAnalysisExtendedRawDataResultsData) {
	o.NormEps = &v
}

// GetTotalRevShare returns the TotalRevShare field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRevShare() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalRevShare == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalRevShare
}

// GetTotalRevShareOk returns a tuple with the TotalRevShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalRevShareOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalRevShare == nil {
		return nil, false
	}
	return o.TotalRevShare, true
}

// HasTotalRevShare returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalRevShare() bool {
	if o != nil && o.TotalRevShare != nil {
		return true
	}

	return false
}

// SetTotalRevShare gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalRevShare field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalRevShare(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalRevShare = &v
}

// GetLeveredFcf returns the LeveredFcf field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetLeveredFcf() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.LeveredFcf == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.LeveredFcf
}

// GetLeveredFcfOk returns a tuple with the LeveredFcf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetLeveredFcfOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.LeveredFcf == nil {
		return nil, false
	}
	return o.LeveredFcf, true
}

// HasLeveredFcf returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasLeveredFcf() bool {
	if o != nil && o.LeveredFcf != nil {
		return true
	}

	return false
}

// SetLeveredFcf gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the LeveredFcf field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetLeveredFcf(v CompanyAnalysisExtendedRawDataResultsData) {
	o.LeveredFcf = &v
}

// GetMgmtRateReturn returns the MgmtRateReturn field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetMgmtRateReturn() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.MgmtRateReturn == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.MgmtRateReturn
}

// GetMgmtRateReturnOk returns a tuple with the MgmtRateReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetMgmtRateReturnOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.MgmtRateReturn == nil {
		return nil, false
	}
	return o.MgmtRateReturn, true
}

// HasMgmtRateReturn returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasMgmtRateReturn() bool {
	if o != nil && o.MgmtRateReturn != nil {
		return true
	}

	return false
}

// SetMgmtRateReturn gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the MgmtRateReturn field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetMgmtRateReturn(v CompanyAnalysisExtendedRawDataResultsData) {
	o.MgmtRateReturn = &v
}

// GetFfoGrossProfit returns the FfoGrossProfit field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoGrossProfit() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.FfoGrossProfit == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.FfoGrossProfit
}

// GetFfoGrossProfitOk returns a tuple with the FfoGrossProfit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetFfoGrossProfitOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.FfoGrossProfit == nil {
		return nil, false
	}
	return o.FfoGrossProfit, true
}

// HasFfoGrossProfit returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasFfoGrossProfit() bool {
	if o != nil && o.FfoGrossProfit != nil {
		return true
	}

	return false
}

// SetFfoGrossProfit gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the FfoGrossProfit field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetFfoGrossProfit(v CompanyAnalysisExtendedRawDataResultsData) {
	o.FfoGrossProfit = &v
}

// GetTotalDivPaidCf returns the TotalDivPaidCf field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDivPaidCf() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.TotalDivPaidCf == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.TotalDivPaidCf
}

// GetTotalDivPaidCfOk returns a tuple with the TotalDivPaidCf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetTotalDivPaidCfOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.TotalDivPaidCf == nil {
		return nil, false
	}
	return o.TotalDivPaidCf, true
}

// HasTotalDivPaidCf returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasTotalDivPaidCf() bool {
	if o != nil && o.TotalDivPaidCf != nil {
		return true
	}

	return false
}

// SetTotalDivPaidCf gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the TotalDivPaidCf field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetTotalDivPaidCf(v CompanyAnalysisExtendedRawDataResultsData) {
	o.TotalDivPaidCf = &v
}

// GetNetBuybacks returns the NetBuybacks field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetBuybacks() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.NetBuybacks == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.NetBuybacks
}

// GetNetBuybacksOk returns a tuple with the NetBuybacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetNetBuybacksOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.NetBuybacks == nil {
		return nil, false
	}
	return o.NetBuybacks, true
}

// HasNetBuybacks returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasNetBuybacks() bool {
	if o != nil && o.NetBuybacks != nil {
		return true
	}

	return false
}

// SetNetBuybacks gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the NetBuybacks field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetNetBuybacks(v CompanyAnalysisExtendedRawDataResultsData) {
	o.NetBuybacks = &v
}

// GetCashPurchaseIntangibleAssets returns the CashPurchaseIntangibleAssets field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashPurchaseIntangibleAssets() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.CashPurchaseIntangibleAssets == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.CashPurchaseIntangibleAssets
}

// GetCashPurchaseIntangibleAssetsOk returns a tuple with the CashPurchaseIntangibleAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetCashPurchaseIntangibleAssetsOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.CashPurchaseIntangibleAssets == nil {
		return nil, false
	}
	return o.CashPurchaseIntangibleAssets, true
}

// HasCashPurchaseIntangibleAssets returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasCashPurchaseIntangibleAssets() bool {
	if o != nil && o.CashPurchaseIntangibleAssets != nil {
		return true
	}

	return false
}

// SetCashPurchaseIntangibleAssets gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the CashPurchaseIntangibleAssets field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetCashPurchaseIntangibleAssets(v CompanyAnalysisExtendedRawDataResultsData) {
	o.CashPurchaseIntangibleAssets = &v
}

// GetDivShare returns the DivShare field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetDivShare() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.DivShare == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.DivShare
}

// GetDivShareOk returns a tuple with the DivShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetDivShareOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.DivShare == nil {
		return nil, false
	}
	return o.DivShare, true
}

// HasDivShare returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasDivShare() bool {
	if o != nil && o.DivShare != nil {
		return true
	}

	return false
}

// SetDivShare gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the DivShare field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetDivShare(v CompanyAnalysisExtendedRawDataResultsData) {
	o.DivShare = &v
}

// GetBasicEps returns the BasicEps field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBasicEps() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.BasicEps == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.BasicEps
}

// GetBasicEpsOk returns a tuple with the BasicEps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBasicEpsOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.BasicEps == nil {
		return nil, false
	}
	return o.BasicEps, true
}

// HasBasicEps returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasBasicEps() bool {
	if o != nil && o.BasicEps != nil {
		return true
	}

	return false
}

// SetBasicEps gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the BasicEps field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetBasicEps(v CompanyAnalysisExtendedRawDataResultsData) {
	o.BasicEps = &v
}

// GetBasicWeight returns the BasicWeight field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBasicWeight() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.BasicWeight == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.BasicWeight
}

// GetBasicWeightOk returns a tuple with the BasicWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetBasicWeightOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.BasicWeight == nil {
		return nil, false
	}
	return o.BasicWeight, true
}

// HasBasicWeight returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasBasicWeight() bool {
	if o != nil && o.BasicWeight != nil {
		return true
	}

	return false
}

// SetBasicWeight gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the BasicWeight field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetBasicWeight(v CompanyAnalysisExtendedRawDataResultsData) {
	o.BasicWeight = &v
}

// GetSharesPerDr returns the SharesPerDr field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetSharesPerDr() CompanyAnalysisExtendedRawDataResultsData {
	if o == nil || o.SharesPerDr == nil {
		var ret CompanyAnalysisExtendedRawDataResultsData
		return ret
	}
	return *o.SharesPerDr
}

// GetSharesPerDrOk returns a tuple with the SharesPerDr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) GetSharesPerDrOk() (*CompanyAnalysisExtendedRawDataResultsData, bool) {
	if o == nil || o.SharesPerDr == nil {
		return nil, false
	}
	return o.SharesPerDr, true
}

// HasSharesPerDr returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) HasSharesPerDr() bool {
	if o != nil && o.SharesPerDr != nil {
		return true
	}

	return false
}

// SetSharesPerDr gets a reference to the given CompanyAnalysisExtendedRawDataResultsData and assigns it to the SharesPerDr field.
func (o *CompanyAnalysisExtendedRawDataPastResultsData) SetSharesPerDr(v CompanyAnalysisExtendedRawDataResultsData) {
	o.SharesPerDr = &v
}

func (o CompanyAnalysisExtendedRawDataPastResultsData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FfoInt != nil {
		toSerialize["ffo_int"] = o.FfoInt
	}
	if o.FfoTotalDebt != nil {
		toSerialize["ffo_total_debt"] = o.FfoTotalDebt
	}
	if o.FfoCalculated != nil {
		toSerialize["ffo_calculated"] = o.FfoCalculated
	}
	if o.Isaac != nil {
		toSerialize["isaac"] = o.Isaac
	}
	if o.OperatingRevenue != nil {
		toSerialize["operating_revenue"] = o.OperatingRevenue
	}
	if o.EbtIncl != nil {
		toSerialize["ebt_incl"] = o.EbtIncl
	}
	if o.NetInterestExp != nil {
		toSerialize["net_interest_exp"] = o.NetInterestExp
	}
	if o.NiAvailExcl != nil {
		toSerialize["ni_avail_excl"] = o.NiAvailExcl
	}
	if o.Ebit != nil {
		toSerialize["ebit"] = o.Ebit
	}
	if o.TotalReceiv != nil {
		toSerialize["total_receiv"] = o.TotalReceiv
	}
	if o.CashStInvest != nil {
		toSerialize["cash_st_invest"] = o.CashStInvest
	}
	if o.Nppe != nil {
		toSerialize["nppe"] = o.Nppe
	}
	if o.TotalAssets != nil {
		toSerialize["total_assets"] = o.TotalAssets
	}
	if o.TotalCa != nil {
		toSerialize["total_ca"] = o.TotalCa
	}
	if o.TotalCl != nil {
		toSerialize["total_cl"] = o.TotalCl
	}
	if o.TotalLiabEquity != nil {
		toSerialize["total_liab_equity"] = o.TotalLiabEquity
	}
	if o.Ap != nil {
		toSerialize["ap"] = o.Ap
	}
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.LtDebt != nil {
		toSerialize["lt_debt"] = o.LtDebt
	}
	if o.CurrentPortCapitalLeases != nil {
		toSerialize["current_port_capital_leases"] = o.CurrentPortCapitalLeases
	}
	if o.CashEquiv != nil {
		toSerialize["cash_equiv"] = o.CashEquiv
	}
	if o.CapitalLeases != nil {
		toSerialize["capital_leases"] = o.CapitalLeases
	}
	if o.TotalEquity != nil {
		toSerialize["total_equity"] = o.TotalEquity
	}
	if o.TotalLiabilities != nil {
		toSerialize["total_liabilities"] = o.TotalLiabilities
	}
	if o.CashFFinancing != nil {
		toSerialize["cash_f_financing"] = o.CashFFinancing
	}
	if o.CashFInvesting != nil {
		toSerialize["cash_f_investing"] = o.CashFInvesting
	}
	if o.CashOper != nil {
		toSerialize["cash_oper"] = o.CashOper
	}
	if o.Capex != nil {
		toSerialize["capex"] = o.Capex
	}
	if o.Ebt != nil {
		toSerialize["ebt"] = o.Ebt
	}
	if o.EarningCo != nil {
		toSerialize["earning_co"] = o.EarningCo
	}
	if o.GrossProfit != nil {
		toSerialize["gross_profit"] = o.GrossProfit
	}
	if o.Ni != nil {
		toSerialize["ni"] = o.Ni
	}
	if o.OperInc != nil {
		toSerialize["oper_inc"] = o.OperInc
	}
	if o.GAExpense != nil {
		toSerialize["g_a_expense"] = o.GAExpense
	}
	if o.TotalRev != nil {
		toSerialize["total_rev"] = o.TotalRev
	}
	if o.IncomeTax != nil {
		toSerialize["income_tax"] = o.IncomeTax
	}
	if o.InterestExp != nil {
		toSerialize["interest_exp"] = o.InterestExp
	}
	if o.RDExpense != nil {
		toSerialize["r_d_expense"] = o.RDExpense
	}
	if o.Beta5yr != nil {
		toSerialize["beta_5yr"] = o.Beta5yr
	}
	if o.BvShare != nil {
		toSerialize["bv_share"] = o.BvShare
	}
	if o.TotalDebtEquity != nil {
		toSerialize["total_debt_equity"] = o.TotalDebtEquity
	}
	if o.Ebitda != nil {
		toSerialize["ebitda"] = o.Ebitda
	}
	if o.TotalRevEmployee != nil {
		toSerialize["total_rev_employee"] = o.TotalRevEmployee
	}
	if o.ReturnEquity != nil {
		toSerialize["return_equity"] = o.ReturnEquity
	}
	if o.TotalDebt != nil {
		toSerialize["total_debt"] = o.TotalDebt
	}
	if o.ReturnAssets != nil {
		toSerialize["return_assets"] = o.ReturnAssets
	}
	if o.CashConversion != nil {
		toSerialize["cash_conversion"] = o.CashConversion
	}
	if o.NetDebt != nil {
		toSerialize["net_debt"] = o.NetDebt
	}
	if o.TotalEmployees != nil {
		toSerialize["total_employees"] = o.TotalEmployees
	}
	if o.PayoutRatio != nil {
		toSerialize["payout_ratio"] = o.PayoutRatio
	}
	if o.NormEps != nil {
		toSerialize["norm_eps"] = o.NormEps
	}
	if o.TotalRevShare != nil {
		toSerialize["total_rev_share"] = o.TotalRevShare
	}
	if o.LeveredFcf != nil {
		toSerialize["levered_fcf"] = o.LeveredFcf
	}
	if o.MgmtRateReturn != nil {
		toSerialize["mgmt_rate_return"] = o.MgmtRateReturn
	}
	if o.FfoGrossProfit != nil {
		toSerialize["ffo_gross_profit"] = o.FfoGrossProfit
	}
	if o.TotalDivPaidCf != nil {
		toSerialize["total_div_paid_cf"] = o.TotalDivPaidCf
	}
	if o.NetBuybacks != nil {
		toSerialize["net_buybacks"] = o.NetBuybacks
	}
	if o.CashPurchaseIntangibleAssets != nil {
		toSerialize["cash_purchase_intangible_assets"] = o.CashPurchaseIntangibleAssets
	}
	if o.DivShare != nil {
		toSerialize["div_share"] = o.DivShare
	}
	if o.BasicEps != nil {
		toSerialize["basic_eps"] = o.BasicEps
	}
	if o.BasicWeight != nil {
		toSerialize["basic_weight"] = o.BasicWeight
	}
	if o.SharesPerDr != nil {
		toSerialize["shares_per_dr"] = o.SharesPerDr
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedRawDataPastResultsData struct {
	value *CompanyAnalysisExtendedRawDataPastResultsData
	isSet bool
}

func (v NullableCompanyAnalysisExtendedRawDataPastResultsData) Get() *CompanyAnalysisExtendedRawDataPastResultsData {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedRawDataPastResultsData) Set(val *CompanyAnalysisExtendedRawDataPastResultsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedRawDataPastResultsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedRawDataPastResultsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedRawDataPastResultsData(val *CompanyAnalysisExtendedRawDataPastResultsData) *NullableCompanyAnalysisExtendedRawDataPastResultsData {
	return &NullableCompanyAnalysisExtendedRawDataPastResultsData{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedRawDataPastResultsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedRawDataPastResultsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
