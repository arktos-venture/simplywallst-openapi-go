/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyMeta struct for CompanyMeta
type CompanyMeta struct {
	PlanRestricted *bool `json:"plan_restricted,omitempty"`
}

// NewCompanyMeta instantiates a new CompanyMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyMeta() *CompanyMeta {
	this := CompanyMeta{}
	return &this
}

// NewCompanyMetaWithDefaults instantiates a new CompanyMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyMetaWithDefaults() *CompanyMeta {
	this := CompanyMeta{}
	return &this
}

// GetPlanRestricted returns the PlanRestricted field value if set, zero value otherwise.
func (o *CompanyMeta) GetPlanRestricted() bool {
	if o == nil || o.PlanRestricted == nil {
		var ret bool
		return ret
	}
	return *o.PlanRestricted
}

// GetPlanRestrictedOk returns a tuple with the PlanRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyMeta) GetPlanRestrictedOk() (*bool, bool) {
	if o == nil || o.PlanRestricted == nil {
		return nil, false
	}
	return o.PlanRestricted, true
}

// HasPlanRestricted returns a boolean if a field has been set.
func (o *CompanyMeta) HasPlanRestricted() bool {
	if o != nil && o.PlanRestricted != nil {
		return true
	}

	return false
}

// SetPlanRestricted gets a reference to the given bool and assigns it to the PlanRestricted field.
func (o *CompanyMeta) SetPlanRestricted(v bool) {
	o.PlanRestricted = &v
}

func (o CompanyMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PlanRestricted != nil {
		toSerialize["plan_restricted"] = o.PlanRestricted
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyMeta struct {
	value *CompanyMeta
	isSet bool
}

func (v NullableCompanyMeta) Get() *CompanyMeta {
	return v.value
}

func (v *NullableCompanyMeta) Set(val *CompanyMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyMeta(val *CompanyMeta) *NullableCompanyMeta {
	return &NullableCompanyMeta{value: val, isSet: true}
}

func (v NullableCompanyMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
