/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// New struct for New
type New struct {
	CompanyId        *string `json:"company_id,omitempty"`
	CiqCompanyId     *int64  `json:"ciq_company_id,omitempty"`
	CompanySymbol    *string `json:"company_symbol,omitempty"`
	Content          *string `json:"content,omitempty"`
	Description      *string `json:"description,omitempty"`
	Headline         *string `json:"headline,omitempty"`
	OriginalUrl      *string `json:"original_url,omitempty"`
	ProviderName     *string `json:"provider_name,omitempty"`
	Url              *string `json:"url,omitempty"`
	Date             *int64  `json:"date,omitempty"`
	DateDiffFriendly *string `json:"date_diff_friendly,omitempty"`
}

// NewNew instantiates a new New object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNew() *New {
	this := New{}
	return &this
}

// NewNewWithDefaults instantiates a new New object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewWithDefaults() *New {
	this := New{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *New) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *New) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *New) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCiqCompanyId returns the CiqCompanyId field value if set, zero value otherwise.
func (o *New) GetCiqCompanyId() int64 {
	if o == nil || o.CiqCompanyId == nil {
		var ret int64
		return ret
	}
	return *o.CiqCompanyId
}

// GetCiqCompanyIdOk returns a tuple with the CiqCompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetCiqCompanyIdOk() (*int64, bool) {
	if o == nil || o.CiqCompanyId == nil {
		return nil, false
	}
	return o.CiqCompanyId, true
}

// HasCiqCompanyId returns a boolean if a field has been set.
func (o *New) HasCiqCompanyId() bool {
	if o != nil && o.CiqCompanyId != nil {
		return true
	}

	return false
}

// SetCiqCompanyId gets a reference to the given int64 and assigns it to the CiqCompanyId field.
func (o *New) SetCiqCompanyId(v int64) {
	o.CiqCompanyId = &v
}

// GetCompanySymbol returns the CompanySymbol field value if set, zero value otherwise.
func (o *New) GetCompanySymbol() string {
	if o == nil || o.CompanySymbol == nil {
		var ret string
		return ret
	}
	return *o.CompanySymbol
}

// GetCompanySymbolOk returns a tuple with the CompanySymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetCompanySymbolOk() (*string, bool) {
	if o == nil || o.CompanySymbol == nil {
		return nil, false
	}
	return o.CompanySymbol, true
}

// HasCompanySymbol returns a boolean if a field has been set.
func (o *New) HasCompanySymbol() bool {
	if o != nil && o.CompanySymbol != nil {
		return true
	}

	return false
}

// SetCompanySymbol gets a reference to the given string and assigns it to the CompanySymbol field.
func (o *New) SetCompanySymbol(v string) {
	o.CompanySymbol = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *New) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *New) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *New) SetContent(v string) {
	o.Content = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *New) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *New) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *New) SetDescription(v string) {
	o.Description = &v
}

// GetHeadline returns the Headline field value if set, zero value otherwise.
func (o *New) GetHeadline() string {
	if o == nil || o.Headline == nil {
		var ret string
		return ret
	}
	return *o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetHeadlineOk() (*string, bool) {
	if o == nil || o.Headline == nil {
		return nil, false
	}
	return o.Headline, true
}

// HasHeadline returns a boolean if a field has been set.
func (o *New) HasHeadline() bool {
	if o != nil && o.Headline != nil {
		return true
	}

	return false
}

// SetHeadline gets a reference to the given string and assigns it to the Headline field.
func (o *New) SetHeadline(v string) {
	o.Headline = &v
}

// GetOriginalUrl returns the OriginalUrl field value if set, zero value otherwise.
func (o *New) GetOriginalUrl() string {
	if o == nil || o.OriginalUrl == nil {
		var ret string
		return ret
	}
	return *o.OriginalUrl
}

// GetOriginalUrlOk returns a tuple with the OriginalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetOriginalUrlOk() (*string, bool) {
	if o == nil || o.OriginalUrl == nil {
		return nil, false
	}
	return o.OriginalUrl, true
}

// HasOriginalUrl returns a boolean if a field has been set.
func (o *New) HasOriginalUrl() bool {
	if o != nil && o.OriginalUrl != nil {
		return true
	}

	return false
}

// SetOriginalUrl gets a reference to the given string and assigns it to the OriginalUrl field.
func (o *New) SetOriginalUrl(v string) {
	o.OriginalUrl = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *New) GetProviderName() string {
	if o == nil || o.ProviderName == nil {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetProviderNameOk() (*string, bool) {
	if o == nil || o.ProviderName == nil {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *New) HasProviderName() bool {
	if o != nil && o.ProviderName != nil {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *New) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *New) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *New) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *New) SetUrl(v string) {
	o.Url = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *New) GetDate() int64 {
	if o == nil || o.Date == nil {
		var ret int64
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetDateOk() (*int64, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *New) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given int64 and assigns it to the Date field.
func (o *New) SetDate(v int64) {
	o.Date = &v
}

// GetDateDiffFriendly returns the DateDiffFriendly field value if set, zero value otherwise.
func (o *New) GetDateDiffFriendly() string {
	if o == nil || o.DateDiffFriendly == nil {
		var ret string
		return ret
	}
	return *o.DateDiffFriendly
}

// GetDateDiffFriendlyOk returns a tuple with the DateDiffFriendly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetDateDiffFriendlyOk() (*string, bool) {
	if o == nil || o.DateDiffFriendly == nil {
		return nil, false
	}
	return o.DateDiffFriendly, true
}

// HasDateDiffFriendly returns a boolean if a field has been set.
func (o *New) HasDateDiffFriendly() bool {
	if o != nil && o.DateDiffFriendly != nil {
		return true
	}

	return false
}

// SetDateDiffFriendly gets a reference to the given string and assigns it to the DateDiffFriendly field.
func (o *New) SetDateDiffFriendly(v string) {
	o.DateDiffFriendly = &v
}

func (o New) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompanyId != nil {
		toSerialize["company_id"] = o.CompanyId
	}
	if o.CiqCompanyId != nil {
		toSerialize["ciq_company_id"] = o.CiqCompanyId
	}
	if o.CompanySymbol != nil {
		toSerialize["company_symbol"] = o.CompanySymbol
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Headline != nil {
		toSerialize["headline"] = o.Headline
	}
	if o.OriginalUrl != nil {
		toSerialize["original_url"] = o.OriginalUrl
	}
	if o.ProviderName != nil {
		toSerialize["provider_name"] = o.ProviderName
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.DateDiffFriendly != nil {
		toSerialize["date_diff_friendly"] = o.DateDiffFriendly
	}
	return json.Marshal(toSerialize)
}

type NullableNew struct {
	value *New
	isSet bool
}

func (v NullableNew) Get() *New {
	return v.value
}

func (v *NullableNew) Set(val *New) {
	v.value = val
	v.isSet = true
}

func (v NullableNew) IsSet() bool {
	return v.isSet
}

func (v *NullableNew) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNew(val *New) *NullableNew {
	return &NullableNew{value: val, isSet: true}
}

func (v NullableNew) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNew) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
