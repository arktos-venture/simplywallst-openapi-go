/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedRawDataInsiderTransactionsData struct for CompanyAnalysisExtendedRawDataInsiderTransactionsData
type CompanyAnalysisExtendedRawDataInsiderTransactionsData struct {
	TransactionId               *int64   `json:"transaction_id,omitempty"`
	TransactionType             *string  `json:"transaction_type,omitempty"`
	TransactionTypeId           *int32   `json:"transaction_type_id,omitempty"`
	TransactionTypeDescription  *string  `json:"transaction_type_description,omitempty"`
	OwnerObjectId               *int64   `json:"owner_object_id,omitempty"`
	OwnerName                   *string  `json:"owner_name,omitempty"`
	OwnerType                   *string  `json:"owner_type,omitempty"`
	ManagementInsider           *bool    `json:"management_insider,omitempty"`
	TradeDateMin                *int64   `json:"trade_date_min,omitempty"`
	TradeDateMax                *int64   `json:"trade_date_max,omitempty"`
	Shares                      *float32 `json:"shares,omitempty"`
	PriceMin                    *float32 `json:"price_min,omitempty"`
	PriceMax                    *float32 `json:"price_max,omitempty"`
	TransactionValue            *float32 `json:"transaction_value,omitempty"`
	PercentageSharesTraded      *float32 `json:"percentage_shares_traded,omitempty"`
	PercentageChangeTransShares *float32 `json:"percentage_change_trans_shares,omitempty"`
	FilingEndShares             *float32 `json:"filing_end_shares,omitempty"`
	FilingDate                  *int64   `json:"filing_date,omitempty"`
	MonthDiff                   *int32   `json:"month_diff,omitempty"`
}

// NewCompanyAnalysisExtendedRawDataInsiderTransactionsData instantiates a new CompanyAnalysisExtendedRawDataInsiderTransactionsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedRawDataInsiderTransactionsData() *CompanyAnalysisExtendedRawDataInsiderTransactionsData {
	this := CompanyAnalysisExtendedRawDataInsiderTransactionsData{}
	return &this
}

// NewCompanyAnalysisExtendedRawDataInsiderTransactionsDataWithDefaults instantiates a new CompanyAnalysisExtendedRawDataInsiderTransactionsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedRawDataInsiderTransactionsDataWithDefaults() *CompanyAnalysisExtendedRawDataInsiderTransactionsData {
	this := CompanyAnalysisExtendedRawDataInsiderTransactionsData{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionId() int64 {
	if o == nil || o.TransactionId == nil {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionIdOk() (*int64, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionType() string {
	if o == nil || o.TransactionType == nil {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionTypeOk() (*string, bool) {
	if o == nil || o.TransactionType == nil {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTransactionType() bool {
	if o != nil && o.TransactionType != nil {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetTransactionTypeId returns the TransactionTypeId field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionTypeId() int32 {
	if o == nil || o.TransactionTypeId == nil {
		var ret int32
		return ret
	}
	return *o.TransactionTypeId
}

// GetTransactionTypeIdOk returns a tuple with the TransactionTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionTypeIdOk() (*int32, bool) {
	if o == nil || o.TransactionTypeId == nil {
		return nil, false
	}
	return o.TransactionTypeId, true
}

// HasTransactionTypeId returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTransactionTypeId() bool {
	if o != nil && o.TransactionTypeId != nil {
		return true
	}

	return false
}

// SetTransactionTypeId gets a reference to the given int32 and assigns it to the TransactionTypeId field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTransactionTypeId(v int32) {
	o.TransactionTypeId = &v
}

// GetTransactionTypeDescription returns the TransactionTypeDescription field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionTypeDescription() string {
	if o == nil || o.TransactionTypeDescription == nil {
		var ret string
		return ret
	}
	return *o.TransactionTypeDescription
}

// GetTransactionTypeDescriptionOk returns a tuple with the TransactionTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionTypeDescriptionOk() (*string, bool) {
	if o == nil || o.TransactionTypeDescription == nil {
		return nil, false
	}
	return o.TransactionTypeDescription, true
}

// HasTransactionTypeDescription returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTransactionTypeDescription() bool {
	if o != nil && o.TransactionTypeDescription != nil {
		return true
	}

	return false
}

// SetTransactionTypeDescription gets a reference to the given string and assigns it to the TransactionTypeDescription field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTransactionTypeDescription(v string) {
	o.TransactionTypeDescription = &v
}

// GetOwnerObjectId returns the OwnerObjectId field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerObjectId() int64 {
	if o == nil || o.OwnerObjectId == nil {
		var ret int64
		return ret
	}
	return *o.OwnerObjectId
}

// GetOwnerObjectIdOk returns a tuple with the OwnerObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerObjectIdOk() (*int64, bool) {
	if o == nil || o.OwnerObjectId == nil {
		return nil, false
	}
	return o.OwnerObjectId, true
}

// HasOwnerObjectId returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasOwnerObjectId() bool {
	if o != nil && o.OwnerObjectId != nil {
		return true
	}

	return false
}

// SetOwnerObjectId gets a reference to the given int64 and assigns it to the OwnerObjectId field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetOwnerObjectId(v int64) {
	o.OwnerObjectId = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerName() string {
	if o == nil || o.OwnerName == nil {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerNameOk() (*string, bool) {
	if o == nil || o.OwnerName == nil {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasOwnerName() bool {
	if o != nil && o.OwnerName != nil {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerType() string {
	if o == nil || o.OwnerType == nil {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetOwnerTypeOk() (*string, bool) {
	if o == nil || o.OwnerType == nil {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasOwnerType() bool {
	if o != nil && o.OwnerType != nil {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetManagementInsider returns the ManagementInsider field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetManagementInsider() bool {
	if o == nil || o.ManagementInsider == nil {
		var ret bool
		return ret
	}
	return *o.ManagementInsider
}

// GetManagementInsiderOk returns a tuple with the ManagementInsider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetManagementInsiderOk() (*bool, bool) {
	if o == nil || o.ManagementInsider == nil {
		return nil, false
	}
	return o.ManagementInsider, true
}

// HasManagementInsider returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasManagementInsider() bool {
	if o != nil && o.ManagementInsider != nil {
		return true
	}

	return false
}

// SetManagementInsider gets a reference to the given bool and assigns it to the ManagementInsider field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetManagementInsider(v bool) {
	o.ManagementInsider = &v
}

// GetTradeDateMin returns the TradeDateMin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTradeDateMin() int64 {
	if o == nil || o.TradeDateMin == nil {
		var ret int64
		return ret
	}
	return *o.TradeDateMin
}

// GetTradeDateMinOk returns a tuple with the TradeDateMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTradeDateMinOk() (*int64, bool) {
	if o == nil || o.TradeDateMin == nil {
		return nil, false
	}
	return o.TradeDateMin, true
}

// HasTradeDateMin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTradeDateMin() bool {
	if o != nil && o.TradeDateMin != nil {
		return true
	}

	return false
}

// SetTradeDateMin gets a reference to the given int64 and assigns it to the TradeDateMin field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTradeDateMin(v int64) {
	o.TradeDateMin = &v
}

// GetTradeDateMax returns the TradeDateMax field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTradeDateMax() int64 {
	if o == nil || o.TradeDateMax == nil {
		var ret int64
		return ret
	}
	return *o.TradeDateMax
}

// GetTradeDateMaxOk returns a tuple with the TradeDateMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTradeDateMaxOk() (*int64, bool) {
	if o == nil || o.TradeDateMax == nil {
		return nil, false
	}
	return o.TradeDateMax, true
}

// HasTradeDateMax returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTradeDateMax() bool {
	if o != nil && o.TradeDateMax != nil {
		return true
	}

	return false
}

// SetTradeDateMax gets a reference to the given int64 and assigns it to the TradeDateMax field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTradeDateMax(v int64) {
	o.TradeDateMax = &v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetShares() float32 {
	if o == nil || o.Shares == nil {
		var ret float32
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetSharesOk() (*float32, bool) {
	if o == nil || o.Shares == nil {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasShares() bool {
	if o != nil && o.Shares != nil {
		return true
	}

	return false
}

// SetShares gets a reference to the given float32 and assigns it to the Shares field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetShares(v float32) {
	o.Shares = &v
}

// GetPriceMin returns the PriceMin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPriceMin() float32 {
	if o == nil || o.PriceMin == nil {
		var ret float32
		return ret
	}
	return *o.PriceMin
}

// GetPriceMinOk returns a tuple with the PriceMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPriceMinOk() (*float32, bool) {
	if o == nil || o.PriceMin == nil {
		return nil, false
	}
	return o.PriceMin, true
}

// HasPriceMin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasPriceMin() bool {
	if o != nil && o.PriceMin != nil {
		return true
	}

	return false
}

// SetPriceMin gets a reference to the given float32 and assigns it to the PriceMin field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetPriceMin(v float32) {
	o.PriceMin = &v
}

// GetPriceMax returns the PriceMax field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPriceMax() float32 {
	if o == nil || o.PriceMax == nil {
		var ret float32
		return ret
	}
	return *o.PriceMax
}

// GetPriceMaxOk returns a tuple with the PriceMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPriceMaxOk() (*float32, bool) {
	if o == nil || o.PriceMax == nil {
		return nil, false
	}
	return o.PriceMax, true
}

// HasPriceMax returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasPriceMax() bool {
	if o != nil && o.PriceMax != nil {
		return true
	}

	return false
}

// SetPriceMax gets a reference to the given float32 and assigns it to the PriceMax field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetPriceMax(v float32) {
	o.PriceMax = &v
}

// GetTransactionValue returns the TransactionValue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionValue() float32 {
	if o == nil || o.TransactionValue == nil {
		var ret float32
		return ret
	}
	return *o.TransactionValue
}

// GetTransactionValueOk returns a tuple with the TransactionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetTransactionValueOk() (*float32, bool) {
	if o == nil || o.TransactionValue == nil {
		return nil, false
	}
	return o.TransactionValue, true
}

// HasTransactionValue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasTransactionValue() bool {
	if o != nil && o.TransactionValue != nil {
		return true
	}

	return false
}

// SetTransactionValue gets a reference to the given float32 and assigns it to the TransactionValue field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetTransactionValue(v float32) {
	o.TransactionValue = &v
}

// GetPercentageSharesTraded returns the PercentageSharesTraded field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPercentageSharesTraded() float32 {
	if o == nil || o.PercentageSharesTraded == nil {
		var ret float32
		return ret
	}
	return *o.PercentageSharesTraded
}

// GetPercentageSharesTradedOk returns a tuple with the PercentageSharesTraded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPercentageSharesTradedOk() (*float32, bool) {
	if o == nil || o.PercentageSharesTraded == nil {
		return nil, false
	}
	return o.PercentageSharesTraded, true
}

// HasPercentageSharesTraded returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasPercentageSharesTraded() bool {
	if o != nil && o.PercentageSharesTraded != nil {
		return true
	}

	return false
}

// SetPercentageSharesTraded gets a reference to the given float32 and assigns it to the PercentageSharesTraded field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetPercentageSharesTraded(v float32) {
	o.PercentageSharesTraded = &v
}

// GetPercentageChangeTransShares returns the PercentageChangeTransShares field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPercentageChangeTransShares() float32 {
	if o == nil || o.PercentageChangeTransShares == nil {
		var ret float32
		return ret
	}
	return *o.PercentageChangeTransShares
}

// GetPercentageChangeTransSharesOk returns a tuple with the PercentageChangeTransShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetPercentageChangeTransSharesOk() (*float32, bool) {
	if o == nil || o.PercentageChangeTransShares == nil {
		return nil, false
	}
	return o.PercentageChangeTransShares, true
}

// HasPercentageChangeTransShares returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasPercentageChangeTransShares() bool {
	if o != nil && o.PercentageChangeTransShares != nil {
		return true
	}

	return false
}

// SetPercentageChangeTransShares gets a reference to the given float32 and assigns it to the PercentageChangeTransShares field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetPercentageChangeTransShares(v float32) {
	o.PercentageChangeTransShares = &v
}

// GetFilingEndShares returns the FilingEndShares field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetFilingEndShares() float32 {
	if o == nil || o.FilingEndShares == nil {
		var ret float32
		return ret
	}
	return *o.FilingEndShares
}

// GetFilingEndSharesOk returns a tuple with the FilingEndShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetFilingEndSharesOk() (*float32, bool) {
	if o == nil || o.FilingEndShares == nil {
		return nil, false
	}
	return o.FilingEndShares, true
}

// HasFilingEndShares returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasFilingEndShares() bool {
	if o != nil && o.FilingEndShares != nil {
		return true
	}

	return false
}

// SetFilingEndShares gets a reference to the given float32 and assigns it to the FilingEndShares field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetFilingEndShares(v float32) {
	o.FilingEndShares = &v
}

// GetFilingDate returns the FilingDate field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetFilingDate() int64 {
	if o == nil || o.FilingDate == nil {
		var ret int64
		return ret
	}
	return *o.FilingDate
}

// GetFilingDateOk returns a tuple with the FilingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetFilingDateOk() (*int64, bool) {
	if o == nil || o.FilingDate == nil {
		return nil, false
	}
	return o.FilingDate, true
}

// HasFilingDate returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasFilingDate() bool {
	if o != nil && o.FilingDate != nil {
		return true
	}

	return false
}

// SetFilingDate gets a reference to the given int64 and assigns it to the FilingDate field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetFilingDate(v int64) {
	o.FilingDate = &v
}

// GetMonthDiff returns the MonthDiff field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetMonthDiff() int32 {
	if o == nil || o.MonthDiff == nil {
		var ret int32
		return ret
	}
	return *o.MonthDiff
}

// GetMonthDiffOk returns a tuple with the MonthDiff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) GetMonthDiffOk() (*int32, bool) {
	if o == nil || o.MonthDiff == nil {
		return nil, false
	}
	return o.MonthDiff, true
}

// HasMonthDiff returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) HasMonthDiff() bool {
	if o != nil && o.MonthDiff != nil {
		return true
	}

	return false
}

// SetMonthDiff gets a reference to the given int32 and assigns it to the MonthDiff field.
func (o *CompanyAnalysisExtendedRawDataInsiderTransactionsData) SetMonthDiff(v int32) {
	o.MonthDiff = &v
}

func (o CompanyAnalysisExtendedRawDataInsiderTransactionsData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionId != nil {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if o.TransactionType != nil {
		toSerialize["transaction_type"] = o.TransactionType
	}
	if o.TransactionTypeId != nil {
		toSerialize["transaction_type_id"] = o.TransactionTypeId
	}
	if o.TransactionTypeDescription != nil {
		toSerialize["transaction_type_description"] = o.TransactionTypeDescription
	}
	if o.OwnerObjectId != nil {
		toSerialize["owner_object_id"] = o.OwnerObjectId
	}
	if o.OwnerName != nil {
		toSerialize["owner_name"] = o.OwnerName
	}
	if o.OwnerType != nil {
		toSerialize["owner_type"] = o.OwnerType
	}
	if o.ManagementInsider != nil {
		toSerialize["management_insider"] = o.ManagementInsider
	}
	if o.TradeDateMin != nil {
		toSerialize["trade_date_min"] = o.TradeDateMin
	}
	if o.TradeDateMax != nil {
		toSerialize["trade_date_max"] = o.TradeDateMax
	}
	if o.Shares != nil {
		toSerialize["shares"] = o.Shares
	}
	if o.PriceMin != nil {
		toSerialize["price_min"] = o.PriceMin
	}
	if o.PriceMax != nil {
		toSerialize["price_max"] = o.PriceMax
	}
	if o.TransactionValue != nil {
		toSerialize["transaction_value"] = o.TransactionValue
	}
	if o.PercentageSharesTraded != nil {
		toSerialize["percentage_shares_traded"] = o.PercentageSharesTraded
	}
	if o.PercentageChangeTransShares != nil {
		toSerialize["percentage_change_trans_shares"] = o.PercentageChangeTransShares
	}
	if o.FilingEndShares != nil {
		toSerialize["filing_end_shares"] = o.FilingEndShares
	}
	if o.FilingDate != nil {
		toSerialize["filing_date"] = o.FilingDate
	}
	if o.MonthDiff != nil {
		toSerialize["month_diff"] = o.MonthDiff
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData struct {
	value *CompanyAnalysisExtendedRawDataInsiderTransactionsData
	isSet bool
}

func (v NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) Get() *CompanyAnalysisExtendedRawDataInsiderTransactionsData {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) Set(val *CompanyAnalysisExtendedRawDataInsiderTransactionsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedRawDataInsiderTransactionsData(val *CompanyAnalysisExtendedRawDataInsiderTransactionsData) *NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData {
	return &NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedRawDataInsiderTransactionsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
