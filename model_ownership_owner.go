/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OwnershipOwner struct for OwnershipOwner
type OwnershipOwner struct {
	Name        *string `json:"name,omitempty"`
	Type        *string `json:"type,omitempty"`
	CompanyType *int32  `json:"company_type,omitempty"`
	ObjectId    *int64  `json:"object_id,omitempty"`
}

// NewOwnershipOwner instantiates a new OwnershipOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwnershipOwner() *OwnershipOwner {
	this := OwnershipOwner{}
	return &this
}

// NewOwnershipOwnerWithDefaults instantiates a new OwnershipOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnershipOwnerWithDefaults() *OwnershipOwner {
	this := OwnershipOwner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OwnershipOwner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnershipOwner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OwnershipOwner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OwnershipOwner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OwnershipOwner) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnershipOwner) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OwnershipOwner) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OwnershipOwner) SetType(v string) {
	o.Type = &v
}

// GetCompanyType returns the CompanyType field value if set, zero value otherwise.
func (o *OwnershipOwner) GetCompanyType() int32 {
	if o == nil || o.CompanyType == nil {
		var ret int32
		return ret
	}
	return *o.CompanyType
}

// GetCompanyTypeOk returns a tuple with the CompanyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnershipOwner) GetCompanyTypeOk() (*int32, bool) {
	if o == nil || o.CompanyType == nil {
		return nil, false
	}
	return o.CompanyType, true
}

// HasCompanyType returns a boolean if a field has been set.
func (o *OwnershipOwner) HasCompanyType() bool {
	if o != nil && o.CompanyType != nil {
		return true
	}

	return false
}

// SetCompanyType gets a reference to the given int32 and assigns it to the CompanyType field.
func (o *OwnershipOwner) SetCompanyType(v int32) {
	o.CompanyType = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *OwnershipOwner) GetObjectId() int64 {
	if o == nil || o.ObjectId == nil {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnershipOwner) GetObjectIdOk() (*int64, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *OwnershipOwner) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *OwnershipOwner) SetObjectId(v int64) {
	o.ObjectId = &v
}

func (o OwnershipOwner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CompanyType != nil {
		toSerialize["company_type"] = o.CompanyType
	}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	return json.Marshal(toSerialize)
}

type NullableOwnershipOwner struct {
	value *OwnershipOwner
	isSet bool
}

func (v NullableOwnershipOwner) Get() *OwnershipOwner {
	return v.value
}

func (v *NullableOwnershipOwner) Set(val *OwnershipOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnershipOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnershipOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnershipOwner(val *OwnershipOwner) *NullableOwnershipOwner {
	return &NullableOwnershipOwner{value: val, isSet: true}
}

func (v NullableOwnershipOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnershipOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
