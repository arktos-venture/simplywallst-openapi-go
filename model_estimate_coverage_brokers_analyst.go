/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EstimateCoverageBrokersAnalyst struct for EstimateCoverageBrokersAnalyst
type EstimateCoverageBrokersAnalyst struct {
	EstimateAnalystId *int64  `json:"estimate_analyst_id,omitempty"`
	Prefix            *string `json:"prefix,omitempty"`
	FirstName         *string `json:"first_name,omitempty"`
	MiddleName        *string `json:"middle_name,omitempty"`
	LastName          *string `json:"last_name,omitempty"`
	Suffix            *string `json:"suffix,omitempty"`
	OriginalDate      *int64  `json:"original_date,omitempty"`
	ExpirationDate    *int64  `json:"expiration_date,omitempty"`
}

// NewEstimateCoverageBrokersAnalyst instantiates a new EstimateCoverageBrokersAnalyst object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateCoverageBrokersAnalyst() *EstimateCoverageBrokersAnalyst {
	this := EstimateCoverageBrokersAnalyst{}
	return &this
}

// NewEstimateCoverageBrokersAnalystWithDefaults instantiates a new EstimateCoverageBrokersAnalyst object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateCoverageBrokersAnalystWithDefaults() *EstimateCoverageBrokersAnalyst {
	this := EstimateCoverageBrokersAnalyst{}
	return &this
}

// GetEstimateAnalystId returns the EstimateAnalystId field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetEstimateAnalystId() int64 {
	if o == nil || o.EstimateAnalystId == nil {
		var ret int64
		return ret
	}
	return *o.EstimateAnalystId
}

// GetEstimateAnalystIdOk returns a tuple with the EstimateAnalystId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetEstimateAnalystIdOk() (*int64, bool) {
	if o == nil || o.EstimateAnalystId == nil {
		return nil, false
	}
	return o.EstimateAnalystId, true
}

// HasEstimateAnalystId returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasEstimateAnalystId() bool {
	if o != nil && o.EstimateAnalystId != nil {
		return true
	}

	return false
}

// SetEstimateAnalystId gets a reference to the given int64 and assigns it to the EstimateAnalystId field.
func (o *EstimateCoverageBrokersAnalyst) SetEstimateAnalystId(v int64) {
	o.EstimateAnalystId = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *EstimateCoverageBrokersAnalyst) SetPrefix(v string) {
	o.Prefix = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *EstimateCoverageBrokersAnalyst) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *EstimateCoverageBrokersAnalyst) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *EstimateCoverageBrokersAnalyst) SetLastName(v string) {
	o.LastName = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetSuffix() string {
	if o == nil || o.Suffix == nil {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetSuffixOk() (*string, bool) {
	if o == nil || o.Suffix == nil {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasSuffix() bool {
	if o != nil && o.Suffix != nil {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *EstimateCoverageBrokersAnalyst) SetSuffix(v string) {
	o.Suffix = &v
}

// GetOriginalDate returns the OriginalDate field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetOriginalDate() int64 {
	if o == nil || o.OriginalDate == nil {
		var ret int64
		return ret
	}
	return *o.OriginalDate
}

// GetOriginalDateOk returns a tuple with the OriginalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetOriginalDateOk() (*int64, bool) {
	if o == nil || o.OriginalDate == nil {
		return nil, false
	}
	return o.OriginalDate, true
}

// HasOriginalDate returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasOriginalDate() bool {
	if o != nil && o.OriginalDate != nil {
		return true
	}

	return false
}

// SetOriginalDate gets a reference to the given int64 and assigns it to the OriginalDate field.
func (o *EstimateCoverageBrokersAnalyst) SetOriginalDate(v int64) {
	o.OriginalDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *EstimateCoverageBrokersAnalyst) GetExpirationDate() int64 {
	if o == nil || o.ExpirationDate == nil {
		var ret int64
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateCoverageBrokersAnalyst) GetExpirationDateOk() (*int64, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *EstimateCoverageBrokersAnalyst) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given int64 and assigns it to the ExpirationDate field.
func (o *EstimateCoverageBrokersAnalyst) SetExpirationDate(v int64) {
	o.ExpirationDate = &v
}

func (o EstimateCoverageBrokersAnalyst) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EstimateAnalystId != nil {
		toSerialize["estimate_analyst_id"] = o.EstimateAnalystId
	}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.MiddleName != nil {
		toSerialize["middle_name"] = o.MiddleName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Suffix != nil {
		toSerialize["suffix"] = o.Suffix
	}
	if o.OriginalDate != nil {
		toSerialize["original_date"] = o.OriginalDate
	}
	if o.ExpirationDate != nil {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	return json.Marshal(toSerialize)
}

type NullableEstimateCoverageBrokersAnalyst struct {
	value *EstimateCoverageBrokersAnalyst
	isSet bool
}

func (v NullableEstimateCoverageBrokersAnalyst) Get() *EstimateCoverageBrokersAnalyst {
	return v.value
}

func (v *NullableEstimateCoverageBrokersAnalyst) Set(val *EstimateCoverageBrokersAnalyst) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateCoverageBrokersAnalyst) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateCoverageBrokersAnalyst) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateCoverageBrokersAnalyst(val *EstimateCoverageBrokersAnalyst) *NullableEstimateCoverageBrokersAnalyst {
	return &NullableEstimateCoverageBrokersAnalyst{value: val, isSet: true}
}

func (v NullableEstimateCoverageBrokersAnalyst) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateCoverageBrokersAnalyst) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
