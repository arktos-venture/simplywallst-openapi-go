/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedAnalysisDividend struct for CompanyAnalysisExtendedAnalysisDividend
type CompanyAnalysisExtendedAnalysisDividend struct {
	DividendYield                  *float64 `json:"dividend_yield,omitempty"`
	DividendYieldFuture            *float64 `json:"dividend_yield_future,omitempty"`
	DividendVolatility             *bool    `json:"dividend_volatility,omitempty"`
	DividendPayingYears            *float64 `json:"dividend_paying_years,omitempty"`
	PayoutRatio                    *float64 `json:"payout_ratio,omitempty"`
	PayoutRatio3y                  *float64 `json:"payout_ratio_3y,omitempty"`
	DividendYieldGrowthAnnual      *float64 `json:"dividend_yield_growth_annual,omitempty"`
	FirstPayment                   *float64 `json:"first_payment,omitempty"`
	LastPayment                    *float64 `json:"last_payment,omitempty"`
	BuybackYield                   *float64 `json:"buyback_yield,omitempty"`
	TotalShareholderYield          *float64 `json:"total_shareholder_yield,omitempty"`
	PayoutRatioMedian3yr           *float64 `json:"payout_ratio_median_3yr,omitempty"`
	DividendPaymentsGrowthAnnual   *float64 `json:"dividend_payments_growth_annual,omitempty"`
	DividendPaymentsSingleGrowth1y *float64 `json:"dividend_payments_single_growth_1y,omitempty"`
	DividendPaymentsSingleGrowth3y *float64 `json:"dividend_payments_single_growth_3y,omitempty"`
	DividendPaymentsSingleGrowth5y *float64 `json:"dividend_payments_single_growth_5y,omitempty"`
}

// NewCompanyAnalysisExtendedAnalysisDividend instantiates a new CompanyAnalysisExtendedAnalysisDividend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedAnalysisDividend() *CompanyAnalysisExtendedAnalysisDividend {
	this := CompanyAnalysisExtendedAnalysisDividend{}
	return &this
}

// NewCompanyAnalysisExtendedAnalysisDividendWithDefaults instantiates a new CompanyAnalysisExtendedAnalysisDividend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedAnalysisDividendWithDefaults() *CompanyAnalysisExtendedAnalysisDividend {
	this := CompanyAnalysisExtendedAnalysisDividend{}
	return &this
}

// GetDividendYield returns the DividendYield field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYield() float64 {
	if o == nil || o.DividendYield == nil {
		var ret float64
		return ret
	}
	return *o.DividendYield
}

// GetDividendYieldOk returns a tuple with the DividendYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYieldOk() (*float64, bool) {
	if o == nil || o.DividendYield == nil {
		return nil, false
	}
	return o.DividendYield, true
}

// HasDividendYield returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendYield() bool {
	if o != nil && o.DividendYield != nil {
		return true
	}

	return false
}

// SetDividendYield gets a reference to the given float64 and assigns it to the DividendYield field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendYield(v float64) {
	o.DividendYield = &v
}

// GetDividendYieldFuture returns the DividendYieldFuture field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYieldFuture() float64 {
	if o == nil || o.DividendYieldFuture == nil {
		var ret float64
		return ret
	}
	return *o.DividendYieldFuture
}

// GetDividendYieldFutureOk returns a tuple with the DividendYieldFuture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYieldFutureOk() (*float64, bool) {
	if o == nil || o.DividendYieldFuture == nil {
		return nil, false
	}
	return o.DividendYieldFuture, true
}

// HasDividendYieldFuture returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendYieldFuture() bool {
	if o != nil && o.DividendYieldFuture != nil {
		return true
	}

	return false
}

// SetDividendYieldFuture gets a reference to the given float64 and assigns it to the DividendYieldFuture field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendYieldFuture(v float64) {
	o.DividendYieldFuture = &v
}

// GetDividendVolatility returns the DividendVolatility field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendVolatility() bool {
	if o == nil || o.DividendVolatility == nil {
		var ret bool
		return ret
	}
	return *o.DividendVolatility
}

// GetDividendVolatilityOk returns a tuple with the DividendVolatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendVolatilityOk() (*bool, bool) {
	if o == nil || o.DividendVolatility == nil {
		return nil, false
	}
	return o.DividendVolatility, true
}

// HasDividendVolatility returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendVolatility() bool {
	if o != nil && o.DividendVolatility != nil {
		return true
	}

	return false
}

// SetDividendVolatility gets a reference to the given bool and assigns it to the DividendVolatility field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendVolatility(v bool) {
	o.DividendVolatility = &v
}

// GetDividendPayingYears returns the DividendPayingYears field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPayingYears() float64 {
	if o == nil || o.DividendPayingYears == nil {
		var ret float64
		return ret
	}
	return *o.DividendPayingYears
}

// GetDividendPayingYearsOk returns a tuple with the DividendPayingYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPayingYearsOk() (*float64, bool) {
	if o == nil || o.DividendPayingYears == nil {
		return nil, false
	}
	return o.DividendPayingYears, true
}

// HasDividendPayingYears returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendPayingYears() bool {
	if o != nil && o.DividendPayingYears != nil {
		return true
	}

	return false
}

// SetDividendPayingYears gets a reference to the given float64 and assigns it to the DividendPayingYears field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendPayingYears(v float64) {
	o.DividendPayingYears = &v
}

// GetPayoutRatio returns the PayoutRatio field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatio() float64 {
	if o == nil || o.PayoutRatio == nil {
		var ret float64
		return ret
	}
	return *o.PayoutRatio
}

// GetPayoutRatioOk returns a tuple with the PayoutRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatioOk() (*float64, bool) {
	if o == nil || o.PayoutRatio == nil {
		return nil, false
	}
	return o.PayoutRatio, true
}

// HasPayoutRatio returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasPayoutRatio() bool {
	if o != nil && o.PayoutRatio != nil {
		return true
	}

	return false
}

// SetPayoutRatio gets a reference to the given float64 and assigns it to the PayoutRatio field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetPayoutRatio(v float64) {
	o.PayoutRatio = &v
}

// GetPayoutRatio3y returns the PayoutRatio3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatio3y() float64 {
	if o == nil || o.PayoutRatio3y == nil {
		var ret float64
		return ret
	}
	return *o.PayoutRatio3y
}

// GetPayoutRatio3yOk returns a tuple with the PayoutRatio3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatio3yOk() (*float64, bool) {
	if o == nil || o.PayoutRatio3y == nil {
		return nil, false
	}
	return o.PayoutRatio3y, true
}

// HasPayoutRatio3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasPayoutRatio3y() bool {
	if o != nil && o.PayoutRatio3y != nil {
		return true
	}

	return false
}

// SetPayoutRatio3y gets a reference to the given float64 and assigns it to the PayoutRatio3y field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetPayoutRatio3y(v float64) {
	o.PayoutRatio3y = &v
}

// GetDividendYieldGrowthAnnual returns the DividendYieldGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYieldGrowthAnnual() float64 {
	if o == nil || o.DividendYieldGrowthAnnual == nil {
		var ret float64
		return ret
	}
	return *o.DividendYieldGrowthAnnual
}

// GetDividendYieldGrowthAnnualOk returns a tuple with the DividendYieldGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendYieldGrowthAnnualOk() (*float64, bool) {
	if o == nil || o.DividendYieldGrowthAnnual == nil {
		return nil, false
	}
	return o.DividendYieldGrowthAnnual, true
}

// HasDividendYieldGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendYieldGrowthAnnual() bool {
	if o != nil && o.DividendYieldGrowthAnnual != nil {
		return true
	}

	return false
}

// SetDividendYieldGrowthAnnual gets a reference to the given float64 and assigns it to the DividendYieldGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendYieldGrowthAnnual(v float64) {
	o.DividendYieldGrowthAnnual = &v
}

// GetFirstPayment returns the FirstPayment field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetFirstPayment() float64 {
	if o == nil || o.FirstPayment == nil {
		var ret float64
		return ret
	}
	return *o.FirstPayment
}

// GetFirstPaymentOk returns a tuple with the FirstPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetFirstPaymentOk() (*float64, bool) {
	if o == nil || o.FirstPayment == nil {
		return nil, false
	}
	return o.FirstPayment, true
}

// HasFirstPayment returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasFirstPayment() bool {
	if o != nil && o.FirstPayment != nil {
		return true
	}

	return false
}

// SetFirstPayment gets a reference to the given float64 and assigns it to the FirstPayment field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetFirstPayment(v float64) {
	o.FirstPayment = &v
}

// GetLastPayment returns the LastPayment field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetLastPayment() float64 {
	if o == nil || o.LastPayment == nil {
		var ret float64
		return ret
	}
	return *o.LastPayment
}

// GetLastPaymentOk returns a tuple with the LastPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetLastPaymentOk() (*float64, bool) {
	if o == nil || o.LastPayment == nil {
		return nil, false
	}
	return o.LastPayment, true
}

// HasLastPayment returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasLastPayment() bool {
	if o != nil && o.LastPayment != nil {
		return true
	}

	return false
}

// SetLastPayment gets a reference to the given float64 and assigns it to the LastPayment field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetLastPayment(v float64) {
	o.LastPayment = &v
}

// GetBuybackYield returns the BuybackYield field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetBuybackYield() float64 {
	if o == nil || o.BuybackYield == nil {
		var ret float64
		return ret
	}
	return *o.BuybackYield
}

// GetBuybackYieldOk returns a tuple with the BuybackYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetBuybackYieldOk() (*float64, bool) {
	if o == nil || o.BuybackYield == nil {
		return nil, false
	}
	return o.BuybackYield, true
}

// HasBuybackYield returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasBuybackYield() bool {
	if o != nil && o.BuybackYield != nil {
		return true
	}

	return false
}

// SetBuybackYield gets a reference to the given float64 and assigns it to the BuybackYield field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetBuybackYield(v float64) {
	o.BuybackYield = &v
}

// GetTotalShareholderYield returns the TotalShareholderYield field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetTotalShareholderYield() float64 {
	if o == nil || o.TotalShareholderYield == nil {
		var ret float64
		return ret
	}
	return *o.TotalShareholderYield
}

// GetTotalShareholderYieldOk returns a tuple with the TotalShareholderYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetTotalShareholderYieldOk() (*float64, bool) {
	if o == nil || o.TotalShareholderYield == nil {
		return nil, false
	}
	return o.TotalShareholderYield, true
}

// HasTotalShareholderYield returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasTotalShareholderYield() bool {
	if o != nil && o.TotalShareholderYield != nil {
		return true
	}

	return false
}

// SetTotalShareholderYield gets a reference to the given float64 and assigns it to the TotalShareholderYield field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetTotalShareholderYield(v float64) {
	o.TotalShareholderYield = &v
}

// GetPayoutRatioMedian3yr returns the PayoutRatioMedian3yr field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatioMedian3yr() float64 {
	if o == nil || o.PayoutRatioMedian3yr == nil {
		var ret float64
		return ret
	}
	return *o.PayoutRatioMedian3yr
}

// GetPayoutRatioMedian3yrOk returns a tuple with the PayoutRatioMedian3yr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetPayoutRatioMedian3yrOk() (*float64, bool) {
	if o == nil || o.PayoutRatioMedian3yr == nil {
		return nil, false
	}
	return o.PayoutRatioMedian3yr, true
}

// HasPayoutRatioMedian3yr returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasPayoutRatioMedian3yr() bool {
	if o != nil && o.PayoutRatioMedian3yr != nil {
		return true
	}

	return false
}

// SetPayoutRatioMedian3yr gets a reference to the given float64 and assigns it to the PayoutRatioMedian3yr field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetPayoutRatioMedian3yr(v float64) {
	o.PayoutRatioMedian3yr = &v
}

// GetDividendPaymentsGrowthAnnual returns the DividendPaymentsGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsGrowthAnnual() float64 {
	if o == nil || o.DividendPaymentsGrowthAnnual == nil {
		var ret float64
		return ret
	}
	return *o.DividendPaymentsGrowthAnnual
}

// GetDividendPaymentsGrowthAnnualOk returns a tuple with the DividendPaymentsGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsGrowthAnnualOk() (*float64, bool) {
	if o == nil || o.DividendPaymentsGrowthAnnual == nil {
		return nil, false
	}
	return o.DividendPaymentsGrowthAnnual, true
}

// HasDividendPaymentsGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendPaymentsGrowthAnnual() bool {
	if o != nil && o.DividendPaymentsGrowthAnnual != nil {
		return true
	}

	return false
}

// SetDividendPaymentsGrowthAnnual gets a reference to the given float64 and assigns it to the DividendPaymentsGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendPaymentsGrowthAnnual(v float64) {
	o.DividendPaymentsGrowthAnnual = &v
}

// GetDividendPaymentsSingleGrowth1y returns the DividendPaymentsSingleGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth1y() float64 {
	if o == nil || o.DividendPaymentsSingleGrowth1y == nil {
		var ret float64
		return ret
	}
	return *o.DividendPaymentsSingleGrowth1y
}

// GetDividendPaymentsSingleGrowth1yOk returns a tuple with the DividendPaymentsSingleGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth1yOk() (*float64, bool) {
	if o == nil || o.DividendPaymentsSingleGrowth1y == nil {
		return nil, false
	}
	return o.DividendPaymentsSingleGrowth1y, true
}

// HasDividendPaymentsSingleGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendPaymentsSingleGrowth1y() bool {
	if o != nil && o.DividendPaymentsSingleGrowth1y != nil {
		return true
	}

	return false
}

// SetDividendPaymentsSingleGrowth1y gets a reference to the given float64 and assigns it to the DividendPaymentsSingleGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendPaymentsSingleGrowth1y(v float64) {
	o.DividendPaymentsSingleGrowth1y = &v
}

// GetDividendPaymentsSingleGrowth3y returns the DividendPaymentsSingleGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth3y() float64 {
	if o == nil || o.DividendPaymentsSingleGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.DividendPaymentsSingleGrowth3y
}

// GetDividendPaymentsSingleGrowth3yOk returns a tuple with the DividendPaymentsSingleGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth3yOk() (*float64, bool) {
	if o == nil || o.DividendPaymentsSingleGrowth3y == nil {
		return nil, false
	}
	return o.DividendPaymentsSingleGrowth3y, true
}

// HasDividendPaymentsSingleGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendPaymentsSingleGrowth3y() bool {
	if o != nil && o.DividendPaymentsSingleGrowth3y != nil {
		return true
	}

	return false
}

// SetDividendPaymentsSingleGrowth3y gets a reference to the given float64 and assigns it to the DividendPaymentsSingleGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendPaymentsSingleGrowth3y(v float64) {
	o.DividendPaymentsSingleGrowth3y = &v
}

// GetDividendPaymentsSingleGrowth5y returns the DividendPaymentsSingleGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth5y() float64 {
	if o == nil || o.DividendPaymentsSingleGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.DividendPaymentsSingleGrowth5y
}

// GetDividendPaymentsSingleGrowth5yOk returns a tuple with the DividendPaymentsSingleGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) GetDividendPaymentsSingleGrowth5yOk() (*float64, bool) {
	if o == nil || o.DividendPaymentsSingleGrowth5y == nil {
		return nil, false
	}
	return o.DividendPaymentsSingleGrowth5y, true
}

// HasDividendPaymentsSingleGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisDividend) HasDividendPaymentsSingleGrowth5y() bool {
	if o != nil && o.DividendPaymentsSingleGrowth5y != nil {
		return true
	}

	return false
}

// SetDividendPaymentsSingleGrowth5y gets a reference to the given float64 and assigns it to the DividendPaymentsSingleGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisDividend) SetDividendPaymentsSingleGrowth5y(v float64) {
	o.DividendPaymentsSingleGrowth5y = &v
}

func (o CompanyAnalysisExtendedAnalysisDividend) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DividendYield != nil {
		toSerialize["dividend_yield"] = o.DividendYield
	}
	if o.DividendYieldFuture != nil {
		toSerialize["dividend_yield_future"] = o.DividendYieldFuture
	}
	if o.DividendVolatility != nil {
		toSerialize["dividend_volatility"] = o.DividendVolatility
	}
	if o.DividendPayingYears != nil {
		toSerialize["dividend_paying_years"] = o.DividendPayingYears
	}
	if o.PayoutRatio != nil {
		toSerialize["payout_ratio"] = o.PayoutRatio
	}
	if o.PayoutRatio3y != nil {
		toSerialize["payout_ratio_3y"] = o.PayoutRatio3y
	}
	if o.DividendYieldGrowthAnnual != nil {
		toSerialize["dividend_yield_growth_annual"] = o.DividendYieldGrowthAnnual
	}
	if o.FirstPayment != nil {
		toSerialize["first_payment"] = o.FirstPayment
	}
	if o.LastPayment != nil {
		toSerialize["last_payment"] = o.LastPayment
	}
	if o.BuybackYield != nil {
		toSerialize["buyback_yield"] = o.BuybackYield
	}
	if o.TotalShareholderYield != nil {
		toSerialize["total_shareholder_yield"] = o.TotalShareholderYield
	}
	if o.PayoutRatioMedian3yr != nil {
		toSerialize["payout_ratio_median_3yr"] = o.PayoutRatioMedian3yr
	}
	if o.DividendPaymentsGrowthAnnual != nil {
		toSerialize["dividend_payments_growth_annual"] = o.DividendPaymentsGrowthAnnual
	}
	if o.DividendPaymentsSingleGrowth1y != nil {
		toSerialize["dividend_payments_single_growth_1y"] = o.DividendPaymentsSingleGrowth1y
	}
	if o.DividendPaymentsSingleGrowth3y != nil {
		toSerialize["dividend_payments_single_growth_3y"] = o.DividendPaymentsSingleGrowth3y
	}
	if o.DividendPaymentsSingleGrowth5y != nil {
		toSerialize["dividend_payments_single_growth_5y"] = o.DividendPaymentsSingleGrowth5y
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedAnalysisDividend struct {
	value *CompanyAnalysisExtendedAnalysisDividend
	isSet bool
}

func (v NullableCompanyAnalysisExtendedAnalysisDividend) Get() *CompanyAnalysisExtendedAnalysisDividend {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedAnalysisDividend) Set(val *CompanyAnalysisExtendedAnalysisDividend) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedAnalysisDividend) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedAnalysisDividend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedAnalysisDividend(val *CompanyAnalysisExtendedAnalysisDividend) *NullableCompanyAnalysisExtendedAnalysisDividend {
	return &NullableCompanyAnalysisExtendedAnalysisDividend{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedAnalysisDividend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedAnalysisDividend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
