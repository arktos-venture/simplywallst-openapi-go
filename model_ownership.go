/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Ownership struct for Ownership
type Ownership struct {
	RankSharesHeld             *int64          `json:"rank_shares_held,omitempty"`
	Owner                      *OwnershipOwner `json:"owner,omitempty"`
	HoldingDate                *string         `json:"holding_date,omitempty"`
	SharesHeld                 *int64          `json:"shares_held,omitempty"`
	PercentOfPortfolio         *float32        `json:"percent_of_portfolio,omitempty"`
	PercentOfSharesOutstanding *float32        `json:"percent_of_shares_outstanding,omitempty"`
	SharesChanged              *float32        `json:"shares_changed,omitempty"`
	PercentSharesChanged       *float32        `json:"percent_shares_changed,omitempty"`
	RankSharesBought           *int64          `json:"rank_shares_bought,omitempty"`
	RankSharesSold             *float32        `json:"rank_shares_sold,omitempty"`
	PeriodStartDate            *int64          `json:"period_start_date,omitempty"`
	PeriodEndDate              *int64          `json:"period_end_date,omitempty"`
}

// NewOwnership instantiates a new Ownership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwnership() *Ownership {
	this := Ownership{}
	return &this
}

// NewOwnershipWithDefaults instantiates a new Ownership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnershipWithDefaults() *Ownership {
	this := Ownership{}
	return &this
}

// GetRankSharesHeld returns the RankSharesHeld field value if set, zero value otherwise.
func (o *Ownership) GetRankSharesHeld() int64 {
	if o == nil || o.RankSharesHeld == nil {
		var ret int64
		return ret
	}
	return *o.RankSharesHeld
}

// GetRankSharesHeldOk returns a tuple with the RankSharesHeld field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetRankSharesHeldOk() (*int64, bool) {
	if o == nil || o.RankSharesHeld == nil {
		return nil, false
	}
	return o.RankSharesHeld, true
}

// HasRankSharesHeld returns a boolean if a field has been set.
func (o *Ownership) HasRankSharesHeld() bool {
	if o != nil && o.RankSharesHeld != nil {
		return true
	}

	return false
}

// SetRankSharesHeld gets a reference to the given int64 and assigns it to the RankSharesHeld field.
func (o *Ownership) SetRankSharesHeld(v int64) {
	o.RankSharesHeld = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Ownership) GetOwner() OwnershipOwner {
	if o == nil || o.Owner == nil {
		var ret OwnershipOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetOwnerOk() (*OwnershipOwner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Ownership) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given OwnershipOwner and assigns it to the Owner field.
func (o *Ownership) SetOwner(v OwnershipOwner) {
	o.Owner = &v
}

// GetHoldingDate returns the HoldingDate field value if set, zero value otherwise.
func (o *Ownership) GetHoldingDate() string {
	if o == nil || o.HoldingDate == nil {
		var ret string
		return ret
	}
	return *o.HoldingDate
}

// GetHoldingDateOk returns a tuple with the HoldingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetHoldingDateOk() (*string, bool) {
	if o == nil || o.HoldingDate == nil {
		return nil, false
	}
	return o.HoldingDate, true
}

// HasHoldingDate returns a boolean if a field has been set.
func (o *Ownership) HasHoldingDate() bool {
	if o != nil && o.HoldingDate != nil {
		return true
	}

	return false
}

// SetHoldingDate gets a reference to the given string and assigns it to the HoldingDate field.
func (o *Ownership) SetHoldingDate(v string) {
	o.HoldingDate = &v
}

// GetSharesHeld returns the SharesHeld field value if set, zero value otherwise.
func (o *Ownership) GetSharesHeld() int64 {
	if o == nil || o.SharesHeld == nil {
		var ret int64
		return ret
	}
	return *o.SharesHeld
}

// GetSharesHeldOk returns a tuple with the SharesHeld field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetSharesHeldOk() (*int64, bool) {
	if o == nil || o.SharesHeld == nil {
		return nil, false
	}
	return o.SharesHeld, true
}

// HasSharesHeld returns a boolean if a field has been set.
func (o *Ownership) HasSharesHeld() bool {
	if o != nil && o.SharesHeld != nil {
		return true
	}

	return false
}

// SetSharesHeld gets a reference to the given int64 and assigns it to the SharesHeld field.
func (o *Ownership) SetSharesHeld(v int64) {
	o.SharesHeld = &v
}

// GetPercentOfPortfolio returns the PercentOfPortfolio field value if set, zero value otherwise.
func (o *Ownership) GetPercentOfPortfolio() float32 {
	if o == nil || o.PercentOfPortfolio == nil {
		var ret float32
		return ret
	}
	return *o.PercentOfPortfolio
}

// GetPercentOfPortfolioOk returns a tuple with the PercentOfPortfolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetPercentOfPortfolioOk() (*float32, bool) {
	if o == nil || o.PercentOfPortfolio == nil {
		return nil, false
	}
	return o.PercentOfPortfolio, true
}

// HasPercentOfPortfolio returns a boolean if a field has been set.
func (o *Ownership) HasPercentOfPortfolio() bool {
	if o != nil && o.PercentOfPortfolio != nil {
		return true
	}

	return false
}

// SetPercentOfPortfolio gets a reference to the given float32 and assigns it to the PercentOfPortfolio field.
func (o *Ownership) SetPercentOfPortfolio(v float32) {
	o.PercentOfPortfolio = &v
}

// GetPercentOfSharesOutstanding returns the PercentOfSharesOutstanding field value if set, zero value otherwise.
func (o *Ownership) GetPercentOfSharesOutstanding() float32 {
	if o == nil || o.PercentOfSharesOutstanding == nil {
		var ret float32
		return ret
	}
	return *o.PercentOfSharesOutstanding
}

// GetPercentOfSharesOutstandingOk returns a tuple with the PercentOfSharesOutstanding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetPercentOfSharesOutstandingOk() (*float32, bool) {
	if o == nil || o.PercentOfSharesOutstanding == nil {
		return nil, false
	}
	return o.PercentOfSharesOutstanding, true
}

// HasPercentOfSharesOutstanding returns a boolean if a field has been set.
func (o *Ownership) HasPercentOfSharesOutstanding() bool {
	if o != nil && o.PercentOfSharesOutstanding != nil {
		return true
	}

	return false
}

// SetPercentOfSharesOutstanding gets a reference to the given float32 and assigns it to the PercentOfSharesOutstanding field.
func (o *Ownership) SetPercentOfSharesOutstanding(v float32) {
	o.PercentOfSharesOutstanding = &v
}

// GetSharesChanged returns the SharesChanged field value if set, zero value otherwise.
func (o *Ownership) GetSharesChanged() float32 {
	if o == nil || o.SharesChanged == nil {
		var ret float32
		return ret
	}
	return *o.SharesChanged
}

// GetSharesChangedOk returns a tuple with the SharesChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetSharesChangedOk() (*float32, bool) {
	if o == nil || o.SharesChanged == nil {
		return nil, false
	}
	return o.SharesChanged, true
}

// HasSharesChanged returns a boolean if a field has been set.
func (o *Ownership) HasSharesChanged() bool {
	if o != nil && o.SharesChanged != nil {
		return true
	}

	return false
}

// SetSharesChanged gets a reference to the given float32 and assigns it to the SharesChanged field.
func (o *Ownership) SetSharesChanged(v float32) {
	o.SharesChanged = &v
}

// GetPercentSharesChanged returns the PercentSharesChanged field value if set, zero value otherwise.
func (o *Ownership) GetPercentSharesChanged() float32 {
	if o == nil || o.PercentSharesChanged == nil {
		var ret float32
		return ret
	}
	return *o.PercentSharesChanged
}

// GetPercentSharesChangedOk returns a tuple with the PercentSharesChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetPercentSharesChangedOk() (*float32, bool) {
	if o == nil || o.PercentSharesChanged == nil {
		return nil, false
	}
	return o.PercentSharesChanged, true
}

// HasPercentSharesChanged returns a boolean if a field has been set.
func (o *Ownership) HasPercentSharesChanged() bool {
	if o != nil && o.PercentSharesChanged != nil {
		return true
	}

	return false
}

// SetPercentSharesChanged gets a reference to the given float32 and assigns it to the PercentSharesChanged field.
func (o *Ownership) SetPercentSharesChanged(v float32) {
	o.PercentSharesChanged = &v
}

// GetRankSharesBought returns the RankSharesBought field value if set, zero value otherwise.
func (o *Ownership) GetRankSharesBought() int64 {
	if o == nil || o.RankSharesBought == nil {
		var ret int64
		return ret
	}
	return *o.RankSharesBought
}

// GetRankSharesBoughtOk returns a tuple with the RankSharesBought field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetRankSharesBoughtOk() (*int64, bool) {
	if o == nil || o.RankSharesBought == nil {
		return nil, false
	}
	return o.RankSharesBought, true
}

// HasRankSharesBought returns a boolean if a field has been set.
func (o *Ownership) HasRankSharesBought() bool {
	if o != nil && o.RankSharesBought != nil {
		return true
	}

	return false
}

// SetRankSharesBought gets a reference to the given int64 and assigns it to the RankSharesBought field.
func (o *Ownership) SetRankSharesBought(v int64) {
	o.RankSharesBought = &v
}

// GetRankSharesSold returns the RankSharesSold field value if set, zero value otherwise.
func (o *Ownership) GetRankSharesSold() float32 {
	if o == nil || o.RankSharesSold == nil {
		var ret float32
		return ret
	}
	return *o.RankSharesSold
}

// GetRankSharesSoldOk returns a tuple with the RankSharesSold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetRankSharesSoldOk() (*float32, bool) {
	if o == nil || o.RankSharesSold == nil {
		return nil, false
	}
	return o.RankSharesSold, true
}

// HasRankSharesSold returns a boolean if a field has been set.
func (o *Ownership) HasRankSharesSold() bool {
	if o != nil && o.RankSharesSold != nil {
		return true
	}

	return false
}

// SetRankSharesSold gets a reference to the given float32 and assigns it to the RankSharesSold field.
func (o *Ownership) SetRankSharesSold(v float32) {
	o.RankSharesSold = &v
}

// GetPeriodStartDate returns the PeriodStartDate field value if set, zero value otherwise.
func (o *Ownership) GetPeriodStartDate() int64 {
	if o == nil || o.PeriodStartDate == nil {
		var ret int64
		return ret
	}
	return *o.PeriodStartDate
}

// GetPeriodStartDateOk returns a tuple with the PeriodStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetPeriodStartDateOk() (*int64, bool) {
	if o == nil || o.PeriodStartDate == nil {
		return nil, false
	}
	return o.PeriodStartDate, true
}

// HasPeriodStartDate returns a boolean if a field has been set.
func (o *Ownership) HasPeriodStartDate() bool {
	if o != nil && o.PeriodStartDate != nil {
		return true
	}

	return false
}

// SetPeriodStartDate gets a reference to the given int64 and assigns it to the PeriodStartDate field.
func (o *Ownership) SetPeriodStartDate(v int64) {
	o.PeriodStartDate = &v
}

// GetPeriodEndDate returns the PeriodEndDate field value if set, zero value otherwise.
func (o *Ownership) GetPeriodEndDate() int64 {
	if o == nil || o.PeriodEndDate == nil {
		var ret int64
		return ret
	}
	return *o.PeriodEndDate
}

// GetPeriodEndDateOk returns a tuple with the PeriodEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetPeriodEndDateOk() (*int64, bool) {
	if o == nil || o.PeriodEndDate == nil {
		return nil, false
	}
	return o.PeriodEndDate, true
}

// HasPeriodEndDate returns a boolean if a field has been set.
func (o *Ownership) HasPeriodEndDate() bool {
	if o != nil && o.PeriodEndDate != nil {
		return true
	}

	return false
}

// SetPeriodEndDate gets a reference to the given int64 and assigns it to the PeriodEndDate field.
func (o *Ownership) SetPeriodEndDate(v int64) {
	o.PeriodEndDate = &v
}

func (o Ownership) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RankSharesHeld != nil {
		toSerialize["rank_shares_held"] = o.RankSharesHeld
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.HoldingDate != nil {
		toSerialize["holding_date"] = o.HoldingDate
	}
	if o.SharesHeld != nil {
		toSerialize["shares_held"] = o.SharesHeld
	}
	if o.PercentOfPortfolio != nil {
		toSerialize["percent_of_portfolio"] = o.PercentOfPortfolio
	}
	if o.PercentOfSharesOutstanding != nil {
		toSerialize["percent_of_shares_outstanding"] = o.PercentOfSharesOutstanding
	}
	if o.SharesChanged != nil {
		toSerialize["shares_changed"] = o.SharesChanged
	}
	if o.PercentSharesChanged != nil {
		toSerialize["percent_shares_changed"] = o.PercentSharesChanged
	}
	if o.RankSharesBought != nil {
		toSerialize["rank_shares_bought"] = o.RankSharesBought
	}
	if o.RankSharesSold != nil {
		toSerialize["rank_shares_sold"] = o.RankSharesSold
	}
	if o.PeriodStartDate != nil {
		toSerialize["period_start_date"] = o.PeriodStartDate
	}
	if o.PeriodEndDate != nil {
		toSerialize["period_end_date"] = o.PeriodEndDate
	}
	return json.Marshal(toSerialize)
}

type NullableOwnership struct {
	value *Ownership
	isSet bool
}

func (v NullableOwnership) Get() *Ownership {
	return v.value
}

func (v *NullableOwnership) Set(val *Ownership) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnership) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnership(val *Ownership) *NullableOwnership {
	return &NullableOwnership{value: val, isSet: true}
}

func (v NullableOwnership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
