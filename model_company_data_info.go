/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyDataInfo struct for CompanyDataInfo
type CompanyDataInfo struct {
	Id            *string                  `json:"id,omitempty"`
	Description   *string                  `json:"description,omitempty"`
	WarningType   *int64                   `json:"warning_type,omitempty"`
	Industry      *CompanyDataInfoIndustry `json:"industry,omitempty"`
	Fund          *bool                    `json:"fund,omitempty"`
	Status        *string                  `json:"status,omitempty"`
	Currency      *string                  `json:"currency,omitempty"`
	Country       *string                  `json:"country,omitempty"`
	Employees     *int32                   `json:"employees,omitempty"`
	Address       *string                  `json:"address,omitempty"`
	YearFounded   *int32                   `json:"year_founded,omitempty"`
	Url           *string                  `json:"url,omitempty"`
	LogoUrl       *string                  `json:"logo_url,omitempty"`
	CoverUrl      *string                  `json:"cover_url,omitempty"`
	CoverSmallUrl *string                  `json:"cover_small_url,omitempty"`
	Ceo           *CompanyDataInfoCeo      `json:"ceo,omitempty"`
	LegalName     *string                  `json:"legal_name,omitempty"`
}

// NewCompanyDataInfo instantiates a new CompanyDataInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyDataInfo() *CompanyDataInfo {
	this := CompanyDataInfo{}
	return &this
}

// NewCompanyDataInfoWithDefaults instantiates a new CompanyDataInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyDataInfoWithDefaults() *CompanyDataInfo {
	this := CompanyDataInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CompanyDataInfo) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CompanyDataInfo) SetDescription(v string) {
	o.Description = &v
}

// GetWarningType returns the WarningType field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetWarningType() int64 {
	if o == nil || o.WarningType == nil {
		var ret int64
		return ret
	}
	return *o.WarningType
}

// GetWarningTypeOk returns a tuple with the WarningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetWarningTypeOk() (*int64, bool) {
	if o == nil || o.WarningType == nil {
		return nil, false
	}
	return o.WarningType, true
}

// HasWarningType returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasWarningType() bool {
	if o != nil && o.WarningType != nil {
		return true
	}

	return false
}

// SetWarningType gets a reference to the given int64 and assigns it to the WarningType field.
func (o *CompanyDataInfo) SetWarningType(v int64) {
	o.WarningType = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetIndustry() CompanyDataInfoIndustry {
	if o == nil || o.Industry == nil {
		var ret CompanyDataInfoIndustry
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetIndustryOk() (*CompanyDataInfoIndustry, bool) {
	if o == nil || o.Industry == nil {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasIndustry() bool {
	if o != nil && o.Industry != nil {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given CompanyDataInfoIndustry and assigns it to the Industry field.
func (o *CompanyDataInfo) SetIndustry(v CompanyDataInfoIndustry) {
	o.Industry = &v
}

// GetFund returns the Fund field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetFund() bool {
	if o == nil || o.Fund == nil {
		var ret bool
		return ret
	}
	return *o.Fund
}

// GetFundOk returns a tuple with the Fund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetFundOk() (*bool, bool) {
	if o == nil || o.Fund == nil {
		return nil, false
	}
	return o.Fund, true
}

// HasFund returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasFund() bool {
	if o != nil && o.Fund != nil {
		return true
	}

	return false
}

// SetFund gets a reference to the given bool and assigns it to the Fund field.
func (o *CompanyDataInfo) SetFund(v bool) {
	o.Fund = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CompanyDataInfo) SetStatus(v string) {
	o.Status = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CompanyDataInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CompanyDataInfo) SetCountry(v string) {
	o.Country = &v
}

// GetEmployees returns the Employees field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetEmployees() int32 {
	if o == nil || o.Employees == nil {
		var ret int32
		return ret
	}
	return *o.Employees
}

// GetEmployeesOk returns a tuple with the Employees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetEmployeesOk() (*int32, bool) {
	if o == nil || o.Employees == nil {
		return nil, false
	}
	return o.Employees, true
}

// HasEmployees returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasEmployees() bool {
	if o != nil && o.Employees != nil {
		return true
	}

	return false
}

// SetEmployees gets a reference to the given int32 and assigns it to the Employees field.
func (o *CompanyDataInfo) SetEmployees(v int32) {
	o.Employees = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CompanyDataInfo) SetAddress(v string) {
	o.Address = &v
}

// GetYearFounded returns the YearFounded field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetYearFounded() int32 {
	if o == nil || o.YearFounded == nil {
		var ret int32
		return ret
	}
	return *o.YearFounded
}

// GetYearFoundedOk returns a tuple with the YearFounded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetYearFoundedOk() (*int32, bool) {
	if o == nil || o.YearFounded == nil {
		return nil, false
	}
	return o.YearFounded, true
}

// HasYearFounded returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasYearFounded() bool {
	if o != nil && o.YearFounded != nil {
		return true
	}

	return false
}

// SetYearFounded gets a reference to the given int32 and assigns it to the YearFounded field.
func (o *CompanyDataInfo) SetYearFounded(v int32) {
	o.YearFounded = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CompanyDataInfo) SetUrl(v string) {
	o.Url = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *CompanyDataInfo) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetCoverUrl returns the CoverUrl field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetCoverUrl() string {
	if o == nil || o.CoverUrl == nil {
		var ret string
		return ret
	}
	return *o.CoverUrl
}

// GetCoverUrlOk returns a tuple with the CoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetCoverUrlOk() (*string, bool) {
	if o == nil || o.CoverUrl == nil {
		return nil, false
	}
	return o.CoverUrl, true
}

// HasCoverUrl returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasCoverUrl() bool {
	if o != nil && o.CoverUrl != nil {
		return true
	}

	return false
}

// SetCoverUrl gets a reference to the given string and assigns it to the CoverUrl field.
func (o *CompanyDataInfo) SetCoverUrl(v string) {
	o.CoverUrl = &v
}

// GetCoverSmallUrl returns the CoverSmallUrl field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetCoverSmallUrl() string {
	if o == nil || o.CoverSmallUrl == nil {
		var ret string
		return ret
	}
	return *o.CoverSmallUrl
}

// GetCoverSmallUrlOk returns a tuple with the CoverSmallUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetCoverSmallUrlOk() (*string, bool) {
	if o == nil || o.CoverSmallUrl == nil {
		return nil, false
	}
	return o.CoverSmallUrl, true
}

// HasCoverSmallUrl returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasCoverSmallUrl() bool {
	if o != nil && o.CoverSmallUrl != nil {
		return true
	}

	return false
}

// SetCoverSmallUrl gets a reference to the given string and assigns it to the CoverSmallUrl field.
func (o *CompanyDataInfo) SetCoverSmallUrl(v string) {
	o.CoverSmallUrl = &v
}

// GetCeo returns the Ceo field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetCeo() CompanyDataInfoCeo {
	if o == nil || o.Ceo == nil {
		var ret CompanyDataInfoCeo
		return ret
	}
	return *o.Ceo
}

// GetCeoOk returns a tuple with the Ceo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetCeoOk() (*CompanyDataInfoCeo, bool) {
	if o == nil || o.Ceo == nil {
		return nil, false
	}
	return o.Ceo, true
}

// HasCeo returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasCeo() bool {
	if o != nil && o.Ceo != nil {
		return true
	}

	return false
}

// SetCeo gets a reference to the given CompanyDataInfoCeo and assigns it to the Ceo field.
func (o *CompanyDataInfo) SetCeo(v CompanyDataInfoCeo) {
	o.Ceo = &v
}

// GetLegalName returns the LegalName field value if set, zero value otherwise.
func (o *CompanyDataInfo) GetLegalName() string {
	if o == nil || o.LegalName == nil {
		var ret string
		return ret
	}
	return *o.LegalName
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataInfo) GetLegalNameOk() (*string, bool) {
	if o == nil || o.LegalName == nil {
		return nil, false
	}
	return o.LegalName, true
}

// HasLegalName returns a boolean if a field has been set.
func (o *CompanyDataInfo) HasLegalName() bool {
	if o != nil && o.LegalName != nil {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given string and assigns it to the LegalName field.
func (o *CompanyDataInfo) SetLegalName(v string) {
	o.LegalName = &v
}

func (o CompanyDataInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.WarningType != nil {
		toSerialize["warning_type"] = o.WarningType
	}
	if o.Industry != nil {
		toSerialize["industry"] = o.Industry
	}
	if o.Fund != nil {
		toSerialize["fund"] = o.Fund
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Employees != nil {
		toSerialize["employees"] = o.Employees
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.YearFounded != nil {
		toSerialize["year_founded"] = o.YearFounded
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if o.CoverUrl != nil {
		toSerialize["cover_url"] = o.CoverUrl
	}
	if o.CoverSmallUrl != nil {
		toSerialize["cover_small_url"] = o.CoverSmallUrl
	}
	if o.Ceo != nil {
		toSerialize["ceo"] = o.Ceo
	}
	if o.LegalName != nil {
		toSerialize["legal_name"] = o.LegalName
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyDataInfo struct {
	value *CompanyDataInfo
	isSet bool
}

func (v NullableCompanyDataInfo) Get() *CompanyDataInfo {
	return v.value
}

func (v *NullableCompanyDataInfo) Set(val *CompanyDataInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyDataInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyDataInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyDataInfo(val *CompanyDataInfo) *NullableCompanyDataInfo {
	return &NullableCompanyDataInfo{value: val, isSet: true}
}

func (v NullableCompanyDataInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyDataInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
