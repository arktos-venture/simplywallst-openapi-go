/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisFuture struct for CompanyAnalysisFuture
type CompanyAnalysisFuture struct {
	Growth1y *float64 `json:"growth_1y,omitempty"`
	Growth3y *float64 `json:"growth_3y,omitempty"`
	Roe1y    *float64 `json:"roe_1y,omitempty"`
	Roe3y    *float64 `json:"roe_3y,omitempty"`
}

// NewCompanyAnalysisFuture instantiates a new CompanyAnalysisFuture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisFuture() *CompanyAnalysisFuture {
	this := CompanyAnalysisFuture{}
	return &this
}

// NewCompanyAnalysisFutureWithDefaults instantiates a new CompanyAnalysisFuture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisFutureWithDefaults() *CompanyAnalysisFuture {
	this := CompanyAnalysisFuture{}
	return &this
}

// GetGrowth1y returns the Growth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisFuture) GetGrowth1y() float64 {
	if o == nil || o.Growth1y == nil {
		var ret float64
		return ret
	}
	return *o.Growth1y
}

// GetGrowth1yOk returns a tuple with the Growth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisFuture) GetGrowth1yOk() (*float64, bool) {
	if o == nil || o.Growth1y == nil {
		return nil, false
	}
	return o.Growth1y, true
}

// HasGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisFuture) HasGrowth1y() bool {
	if o != nil && o.Growth1y != nil {
		return true
	}

	return false
}

// SetGrowth1y gets a reference to the given float64 and assigns it to the Growth1y field.
func (o *CompanyAnalysisFuture) SetGrowth1y(v float64) {
	o.Growth1y = &v
}

// GetGrowth3y returns the Growth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisFuture) GetGrowth3y() float64 {
	if o == nil || o.Growth3y == nil {
		var ret float64
		return ret
	}
	return *o.Growth3y
}

// GetGrowth3yOk returns a tuple with the Growth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisFuture) GetGrowth3yOk() (*float64, bool) {
	if o == nil || o.Growth3y == nil {
		return nil, false
	}
	return o.Growth3y, true
}

// HasGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisFuture) HasGrowth3y() bool {
	if o != nil && o.Growth3y != nil {
		return true
	}

	return false
}

// SetGrowth3y gets a reference to the given float64 and assigns it to the Growth3y field.
func (o *CompanyAnalysisFuture) SetGrowth3y(v float64) {
	o.Growth3y = &v
}

// GetRoe1y returns the Roe1y field value if set, zero value otherwise.
func (o *CompanyAnalysisFuture) GetRoe1y() float64 {
	if o == nil || o.Roe1y == nil {
		var ret float64
		return ret
	}
	return *o.Roe1y
}

// GetRoe1yOk returns a tuple with the Roe1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisFuture) GetRoe1yOk() (*float64, bool) {
	if o == nil || o.Roe1y == nil {
		return nil, false
	}
	return o.Roe1y, true
}

// HasRoe1y returns a boolean if a field has been set.
func (o *CompanyAnalysisFuture) HasRoe1y() bool {
	if o != nil && o.Roe1y != nil {
		return true
	}

	return false
}

// SetRoe1y gets a reference to the given float64 and assigns it to the Roe1y field.
func (o *CompanyAnalysisFuture) SetRoe1y(v float64) {
	o.Roe1y = &v
}

// GetRoe3y returns the Roe3y field value if set, zero value otherwise.
func (o *CompanyAnalysisFuture) GetRoe3y() float64 {
	if o == nil || o.Roe3y == nil {
		var ret float64
		return ret
	}
	return *o.Roe3y
}

// GetRoe3yOk returns a tuple with the Roe3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisFuture) GetRoe3yOk() (*float64, bool) {
	if o == nil || o.Roe3y == nil {
		return nil, false
	}
	return o.Roe3y, true
}

// HasRoe3y returns a boolean if a field has been set.
func (o *CompanyAnalysisFuture) HasRoe3y() bool {
	if o != nil && o.Roe3y != nil {
		return true
	}

	return false
}

// SetRoe3y gets a reference to the given float64 and assigns it to the Roe3y field.
func (o *CompanyAnalysisFuture) SetRoe3y(v float64) {
	o.Roe3y = &v
}

func (o CompanyAnalysisFuture) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Growth1y != nil {
		toSerialize["growth_1y"] = o.Growth1y
	}
	if o.Growth3y != nil {
		toSerialize["growth_3y"] = o.Growth3y
	}
	if o.Roe1y != nil {
		toSerialize["roe_1y"] = o.Roe1y
	}
	if o.Roe3y != nil {
		toSerialize["roe_3y"] = o.Roe3y
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisFuture struct {
	value *CompanyAnalysisFuture
	isSet bool
}

func (v NullableCompanyAnalysisFuture) Get() *CompanyAnalysisFuture {
	return v.value
}

func (v *NullableCompanyAnalysisFuture) Set(val *CompanyAnalysisFuture) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisFuture) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisFuture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisFuture(val *CompanyAnalysisFuture) *NullableCompanyAnalysisFuture {
	return &NullableCompanyAnalysisFuture{value: val, isSet: true}
}

func (v NullableCompanyAnalysisFuture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisFuture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
