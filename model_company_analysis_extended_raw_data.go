/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedRawData struct for CompanyAnalysisExtendedRawData
type CompanyAnalysisExtendedRawData struct {
	MarketCap           *CompanyAnalysisExtendedRawDataMarketCap           `json:"market_cap,omitempty"`
	Members             *CompanyAnalysisExtendedRawDataMembers             `json:"members,omitempty"`
	Industries          *CompanyAnalysisExtendedRawDataIndustries          `json:"industries,omitempty"`
	InsiderTransactions *CompanyAnalysisExtendedRawDataInsiderTransactions `json:"insider_transactions,omitempty"`
	CurrencyInfo        *CompanyAnalysisExtendedRawDataCurrencyInfo        `json:"currency_info,omitempty"`
}

// NewCompanyAnalysisExtendedRawData instantiates a new CompanyAnalysisExtendedRawData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedRawData() *CompanyAnalysisExtendedRawData {
	this := CompanyAnalysisExtendedRawData{}
	return &this
}

// NewCompanyAnalysisExtendedRawDataWithDefaults instantiates a new CompanyAnalysisExtendedRawData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedRawDataWithDefaults() *CompanyAnalysisExtendedRawData {
	this := CompanyAnalysisExtendedRawData{}
	return &this
}

// GetMarketCap returns the MarketCap field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawData) GetMarketCap() CompanyAnalysisExtendedRawDataMarketCap {
	if o == nil || o.MarketCap == nil {
		var ret CompanyAnalysisExtendedRawDataMarketCap
		return ret
	}
	return *o.MarketCap
}

// GetMarketCapOk returns a tuple with the MarketCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawData) GetMarketCapOk() (*CompanyAnalysisExtendedRawDataMarketCap, bool) {
	if o == nil || o.MarketCap == nil {
		return nil, false
	}
	return o.MarketCap, true
}

// HasMarketCap returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawData) HasMarketCap() bool {
	if o != nil && o.MarketCap != nil {
		return true
	}

	return false
}

// SetMarketCap gets a reference to the given CompanyAnalysisExtendedRawDataMarketCap and assigns it to the MarketCap field.
func (o *CompanyAnalysisExtendedRawData) SetMarketCap(v CompanyAnalysisExtendedRawDataMarketCap) {
	o.MarketCap = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawData) GetMembers() CompanyAnalysisExtendedRawDataMembers {
	if o == nil || o.Members == nil {
		var ret CompanyAnalysisExtendedRawDataMembers
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawData) GetMembersOk() (*CompanyAnalysisExtendedRawDataMembers, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawData) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given CompanyAnalysisExtendedRawDataMembers and assigns it to the Members field.
func (o *CompanyAnalysisExtendedRawData) SetMembers(v CompanyAnalysisExtendedRawDataMembers) {
	o.Members = &v
}

// GetIndustries returns the Industries field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawData) GetIndustries() CompanyAnalysisExtendedRawDataIndustries {
	if o == nil || o.Industries == nil {
		var ret CompanyAnalysisExtendedRawDataIndustries
		return ret
	}
	return *o.Industries
}

// GetIndustriesOk returns a tuple with the Industries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawData) GetIndustriesOk() (*CompanyAnalysisExtendedRawDataIndustries, bool) {
	if o == nil || o.Industries == nil {
		return nil, false
	}
	return o.Industries, true
}

// HasIndustries returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawData) HasIndustries() bool {
	if o != nil && o.Industries != nil {
		return true
	}

	return false
}

// SetIndustries gets a reference to the given CompanyAnalysisExtendedRawDataIndustries and assigns it to the Industries field.
func (o *CompanyAnalysisExtendedRawData) SetIndustries(v CompanyAnalysisExtendedRawDataIndustries) {
	o.Industries = &v
}

// GetInsiderTransactions returns the InsiderTransactions field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawData) GetInsiderTransactions() CompanyAnalysisExtendedRawDataInsiderTransactions {
	if o == nil || o.InsiderTransactions == nil {
		var ret CompanyAnalysisExtendedRawDataInsiderTransactions
		return ret
	}
	return *o.InsiderTransactions
}

// GetInsiderTransactionsOk returns a tuple with the InsiderTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawData) GetInsiderTransactionsOk() (*CompanyAnalysisExtendedRawDataInsiderTransactions, bool) {
	if o == nil || o.InsiderTransactions == nil {
		return nil, false
	}
	return o.InsiderTransactions, true
}

// HasInsiderTransactions returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawData) HasInsiderTransactions() bool {
	if o != nil && o.InsiderTransactions != nil {
		return true
	}

	return false
}

// SetInsiderTransactions gets a reference to the given CompanyAnalysisExtendedRawDataInsiderTransactions and assigns it to the InsiderTransactions field.
func (o *CompanyAnalysisExtendedRawData) SetInsiderTransactions(v CompanyAnalysisExtendedRawDataInsiderTransactions) {
	o.InsiderTransactions = &v
}

// GetCurrencyInfo returns the CurrencyInfo field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawData) GetCurrencyInfo() CompanyAnalysisExtendedRawDataCurrencyInfo {
	if o == nil || o.CurrencyInfo == nil {
		var ret CompanyAnalysisExtendedRawDataCurrencyInfo
		return ret
	}
	return *o.CurrencyInfo
}

// GetCurrencyInfoOk returns a tuple with the CurrencyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawData) GetCurrencyInfoOk() (*CompanyAnalysisExtendedRawDataCurrencyInfo, bool) {
	if o == nil || o.CurrencyInfo == nil {
		return nil, false
	}
	return o.CurrencyInfo, true
}

// HasCurrencyInfo returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawData) HasCurrencyInfo() bool {
	if o != nil && o.CurrencyInfo != nil {
		return true
	}

	return false
}

// SetCurrencyInfo gets a reference to the given CompanyAnalysisExtendedRawDataCurrencyInfo and assigns it to the CurrencyInfo field.
func (o *CompanyAnalysisExtendedRawData) SetCurrencyInfo(v CompanyAnalysisExtendedRawDataCurrencyInfo) {
	o.CurrencyInfo = &v
}

func (o CompanyAnalysisExtendedRawData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketCap != nil {
		toSerialize["market_cap"] = o.MarketCap
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.Industries != nil {
		toSerialize["industries"] = o.Industries
	}
	if o.InsiderTransactions != nil {
		toSerialize["insider_transactions"] = o.InsiderTransactions
	}
	if o.CurrencyInfo != nil {
		toSerialize["currency_info"] = o.CurrencyInfo
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedRawData struct {
	value *CompanyAnalysisExtendedRawData
	isSet bool
}

func (v NullableCompanyAnalysisExtendedRawData) Get() *CompanyAnalysisExtendedRawData {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedRawData) Set(val *CompanyAnalysisExtendedRawData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedRawData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedRawData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedRawData(val *CompanyAnalysisExtendedRawData) *NullableCompanyAnalysisExtendedRawData {
	return &NullableCompanyAnalysisExtendedRawData{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedRawData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedRawData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
