/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedRawDataIndustries struct for CompanyAnalysisExtendedRawDataIndustries
type CompanyAnalysisExtendedRawDataIndustries struct {
	Primary   *CompanyAnalysisExtendedRawDataIndustriesData `json:"primary,omitempty"`
	Secondary *CompanyAnalysisExtendedRawDataIndustriesData `json:"secondary,omitempty"`
	Tertiary  *CompanyAnalysisExtendedRawDataIndustriesData `json:"tertiary,omitempty"`
}

// NewCompanyAnalysisExtendedRawDataIndustries instantiates a new CompanyAnalysisExtendedRawDataIndustries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedRawDataIndustries() *CompanyAnalysisExtendedRawDataIndustries {
	this := CompanyAnalysisExtendedRawDataIndustries{}
	return &this
}

// NewCompanyAnalysisExtendedRawDataIndustriesWithDefaults instantiates a new CompanyAnalysisExtendedRawDataIndustries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedRawDataIndustriesWithDefaults() *CompanyAnalysisExtendedRawDataIndustries {
	this := CompanyAnalysisExtendedRawDataIndustries{}
	return &this
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetPrimary() CompanyAnalysisExtendedRawDataIndustriesData {
	if o == nil || o.Primary == nil {
		var ret CompanyAnalysisExtendedRawDataIndustriesData
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetPrimaryOk() (*CompanyAnalysisExtendedRawDataIndustriesData, bool) {
	if o == nil || o.Primary == nil {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) HasPrimary() bool {
	if o != nil && o.Primary != nil {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given CompanyAnalysisExtendedRawDataIndustriesData and assigns it to the Primary field.
func (o *CompanyAnalysisExtendedRawDataIndustries) SetPrimary(v CompanyAnalysisExtendedRawDataIndustriesData) {
	o.Primary = &v
}

// GetSecondary returns the Secondary field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetSecondary() CompanyAnalysisExtendedRawDataIndustriesData {
	if o == nil || o.Secondary == nil {
		var ret CompanyAnalysisExtendedRawDataIndustriesData
		return ret
	}
	return *o.Secondary
}

// GetSecondaryOk returns a tuple with the Secondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetSecondaryOk() (*CompanyAnalysisExtendedRawDataIndustriesData, bool) {
	if o == nil || o.Secondary == nil {
		return nil, false
	}
	return o.Secondary, true
}

// HasSecondary returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) HasSecondary() bool {
	if o != nil && o.Secondary != nil {
		return true
	}

	return false
}

// SetSecondary gets a reference to the given CompanyAnalysisExtendedRawDataIndustriesData and assigns it to the Secondary field.
func (o *CompanyAnalysisExtendedRawDataIndustries) SetSecondary(v CompanyAnalysisExtendedRawDataIndustriesData) {
	o.Secondary = &v
}

// GetTertiary returns the Tertiary field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetTertiary() CompanyAnalysisExtendedRawDataIndustriesData {
	if o == nil || o.Tertiary == nil {
		var ret CompanyAnalysisExtendedRawDataIndustriesData
		return ret
	}
	return *o.Tertiary
}

// GetTertiaryOk returns a tuple with the Tertiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) GetTertiaryOk() (*CompanyAnalysisExtendedRawDataIndustriesData, bool) {
	if o == nil || o.Tertiary == nil {
		return nil, false
	}
	return o.Tertiary, true
}

// HasTertiary returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedRawDataIndustries) HasTertiary() bool {
	if o != nil && o.Tertiary != nil {
		return true
	}

	return false
}

// SetTertiary gets a reference to the given CompanyAnalysisExtendedRawDataIndustriesData and assigns it to the Tertiary field.
func (o *CompanyAnalysisExtendedRawDataIndustries) SetTertiary(v CompanyAnalysisExtendedRawDataIndustriesData) {
	o.Tertiary = &v
}

func (o CompanyAnalysisExtendedRawDataIndustries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Primary != nil {
		toSerialize["primary"] = o.Primary
	}
	if o.Secondary != nil {
		toSerialize["secondary"] = o.Secondary
	}
	if o.Tertiary != nil {
		toSerialize["tertiary"] = o.Tertiary
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedRawDataIndustries struct {
	value *CompanyAnalysisExtendedRawDataIndustries
	isSet bool
}

func (v NullableCompanyAnalysisExtendedRawDataIndustries) Get() *CompanyAnalysisExtendedRawDataIndustries {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedRawDataIndustries) Set(val *CompanyAnalysisExtendedRawDataIndustries) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedRawDataIndustries) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedRawDataIndustries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedRawDataIndustries(val *CompanyAnalysisExtendedRawDataIndustries) *NullableCompanyAnalysisExtendedRawDataIndustries {
	return &NullableCompanyAnalysisExtendedRawDataIndustries{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedRawDataIndustries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedRawDataIndustries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
