/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IndustryPerformanceDateData struct for IndustryPerformanceDateData
type IndustryPerformanceDateData struct {
	Id           *string  `json:"id,omitempty"`
	Industry     *string  `json:"industry,omitempty"`
	Country      *string  `json:"country,omitempty"`
	CurrencyIso  *string  `json:"currency_iso,omitempty"`
	Return7d     *float64 `json:"return_7d,omitempty"`
	Return30d    *float64 `json:"return_30d,omitempty"`
	Return90d    *float64 `json:"return_90d,omitempty"`
	Return1yrAbs *float64 `json:"return_1yr_abs,omitempty"`
	Return3yrAbs *float64 `json:"return_3yr_abs,omitempty"`
	Return5yrAbs *float64 `json:"return_5yr_abs,omitempty"`
}

// NewIndustryPerformanceDateData instantiates a new IndustryPerformanceDateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndustryPerformanceDateData() *IndustryPerformanceDateData {
	this := IndustryPerformanceDateData{}
	return &this
}

// NewIndustryPerformanceDateDataWithDefaults instantiates a new IndustryPerformanceDateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndustryPerformanceDateDataWithDefaults() *IndustryPerformanceDateData {
	this := IndustryPerformanceDateData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IndustryPerformanceDateData) SetId(v string) {
	o.Id = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetIndustry() string {
	if o == nil || o.Industry == nil {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetIndustryOk() (*string, bool) {
	if o == nil || o.Industry == nil {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasIndustry() bool {
	if o != nil && o.Industry != nil {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *IndustryPerformanceDateData) SetIndustry(v string) {
	o.Industry = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *IndustryPerformanceDateData) SetCountry(v string) {
	o.Country = &v
}

// GetCurrencyIso returns the CurrencyIso field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetCurrencyIso() string {
	if o == nil || o.CurrencyIso == nil {
		var ret string
		return ret
	}
	return *o.CurrencyIso
}

// GetCurrencyIsoOk returns a tuple with the CurrencyIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetCurrencyIsoOk() (*string, bool) {
	if o == nil || o.CurrencyIso == nil {
		return nil, false
	}
	return o.CurrencyIso, true
}

// HasCurrencyIso returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasCurrencyIso() bool {
	if o != nil && o.CurrencyIso != nil {
		return true
	}

	return false
}

// SetCurrencyIso gets a reference to the given string and assigns it to the CurrencyIso field.
func (o *IndustryPerformanceDateData) SetCurrencyIso(v string) {
	o.CurrencyIso = &v
}

// GetReturn7d returns the Return7d field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn7d() float64 {
	if o == nil || o.Return7d == nil {
		var ret float64
		return ret
	}
	return *o.Return7d
}

// GetReturn7dOk returns a tuple with the Return7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn7dOk() (*float64, bool) {
	if o == nil || o.Return7d == nil {
		return nil, false
	}
	return o.Return7d, true
}

// HasReturn7d returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn7d() bool {
	if o != nil && o.Return7d != nil {
		return true
	}

	return false
}

// SetReturn7d gets a reference to the given float64 and assigns it to the Return7d field.
func (o *IndustryPerformanceDateData) SetReturn7d(v float64) {
	o.Return7d = &v
}

// GetReturn30d returns the Return30d field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn30d() float64 {
	if o == nil || o.Return30d == nil {
		var ret float64
		return ret
	}
	return *o.Return30d
}

// GetReturn30dOk returns a tuple with the Return30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn30dOk() (*float64, bool) {
	if o == nil || o.Return30d == nil {
		return nil, false
	}
	return o.Return30d, true
}

// HasReturn30d returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn30d() bool {
	if o != nil && o.Return30d != nil {
		return true
	}

	return false
}

// SetReturn30d gets a reference to the given float64 and assigns it to the Return30d field.
func (o *IndustryPerformanceDateData) SetReturn30d(v float64) {
	o.Return30d = &v
}

// GetReturn90d returns the Return90d field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn90d() float64 {
	if o == nil || o.Return90d == nil {
		var ret float64
		return ret
	}
	return *o.Return90d
}

// GetReturn90dOk returns a tuple with the Return90d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn90dOk() (*float64, bool) {
	if o == nil || o.Return90d == nil {
		return nil, false
	}
	return o.Return90d, true
}

// HasReturn90d returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn90d() bool {
	if o != nil && o.Return90d != nil {
		return true
	}

	return false
}

// SetReturn90d gets a reference to the given float64 and assigns it to the Return90d field.
func (o *IndustryPerformanceDateData) SetReturn90d(v float64) {
	o.Return90d = &v
}

// GetReturn1yrAbs returns the Return1yrAbs field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn1yrAbs() float64 {
	if o == nil || o.Return1yrAbs == nil {
		var ret float64
		return ret
	}
	return *o.Return1yrAbs
}

// GetReturn1yrAbsOk returns a tuple with the Return1yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn1yrAbsOk() (*float64, bool) {
	if o == nil || o.Return1yrAbs == nil {
		return nil, false
	}
	return o.Return1yrAbs, true
}

// HasReturn1yrAbs returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn1yrAbs() bool {
	if o != nil && o.Return1yrAbs != nil {
		return true
	}

	return false
}

// SetReturn1yrAbs gets a reference to the given float64 and assigns it to the Return1yrAbs field.
func (o *IndustryPerformanceDateData) SetReturn1yrAbs(v float64) {
	o.Return1yrAbs = &v
}

// GetReturn3yrAbs returns the Return3yrAbs field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn3yrAbs() float64 {
	if o == nil || o.Return3yrAbs == nil {
		var ret float64
		return ret
	}
	return *o.Return3yrAbs
}

// GetReturn3yrAbsOk returns a tuple with the Return3yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn3yrAbsOk() (*float64, bool) {
	if o == nil || o.Return3yrAbs == nil {
		return nil, false
	}
	return o.Return3yrAbs, true
}

// HasReturn3yrAbs returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn3yrAbs() bool {
	if o != nil && o.Return3yrAbs != nil {
		return true
	}

	return false
}

// SetReturn3yrAbs gets a reference to the given float64 and assigns it to the Return3yrAbs field.
func (o *IndustryPerformanceDateData) SetReturn3yrAbs(v float64) {
	o.Return3yrAbs = &v
}

// GetReturn5yrAbs returns the Return5yrAbs field value if set, zero value otherwise.
func (o *IndustryPerformanceDateData) GetReturn5yrAbs() float64 {
	if o == nil || o.Return5yrAbs == nil {
		var ret float64
		return ret
	}
	return *o.Return5yrAbs
}

// GetReturn5yrAbsOk returns a tuple with the Return5yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndustryPerformanceDateData) GetReturn5yrAbsOk() (*float64, bool) {
	if o == nil || o.Return5yrAbs == nil {
		return nil, false
	}
	return o.Return5yrAbs, true
}

// HasReturn5yrAbs returns a boolean if a field has been set.
func (o *IndustryPerformanceDateData) HasReturn5yrAbs() bool {
	if o != nil && o.Return5yrAbs != nil {
		return true
	}

	return false
}

// SetReturn5yrAbs gets a reference to the given float64 and assigns it to the Return5yrAbs field.
func (o *IndustryPerformanceDateData) SetReturn5yrAbs(v float64) {
	o.Return5yrAbs = &v
}

func (o IndustryPerformanceDateData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Industry != nil {
		toSerialize["industry"] = o.Industry
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CurrencyIso != nil {
		toSerialize["currency_iso"] = o.CurrencyIso
	}
	if o.Return7d != nil {
		toSerialize["return_7d"] = o.Return7d
	}
	if o.Return30d != nil {
		toSerialize["return_30d"] = o.Return30d
	}
	if o.Return90d != nil {
		toSerialize["return_90d"] = o.Return90d
	}
	if o.Return1yrAbs != nil {
		toSerialize["return_1yr_abs"] = o.Return1yrAbs
	}
	if o.Return3yrAbs != nil {
		toSerialize["return_3yr_abs"] = o.Return3yrAbs
	}
	if o.Return5yrAbs != nil {
		toSerialize["return_5yr_abs"] = o.Return5yrAbs
	}
	return json.Marshal(toSerialize)
}

type NullableIndustryPerformanceDateData struct {
	value *IndustryPerformanceDateData
	isSet bool
}

func (v NullableIndustryPerformanceDateData) Get() *IndustryPerformanceDateData {
	return v.value
}

func (v *NullableIndustryPerformanceDateData) Set(val *IndustryPerformanceDateData) {
	v.value = val
	v.isSet = true
}

func (v NullableIndustryPerformanceDateData) IsSet() bool {
	return v.isSet
}

func (v *NullableIndustryPerformanceDateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndustryPerformanceDateData(val *IndustryPerformanceDateData) *NullableIndustryPerformanceDateData {
	return &NullableIndustryPerformanceDateData{value: val, isSet: true}
}

func (v NullableIndustryPerformanceDateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndustryPerformanceDateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
