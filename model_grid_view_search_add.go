/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GridViewSearchAdd struct for GridViewSearchAdd
type GridViewSearchAdd struct {
	Id              *int64  `json:"id,omitempty"`
	NoResultIfLimit *bool   `json:"no_result_if_limit,omitempty"`
	Offset          *int64  `json:"offset,omitempty"`
	Size            *int64  `json:"size,omitempty"`
	State           *string `json:"state,omitempty"`
	Rules           *string `json:"rules,omitempty"`
}

// NewGridViewSearchAdd instantiates a new GridViewSearchAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridViewSearchAdd() *GridViewSearchAdd {
	this := GridViewSearchAdd{}
	return &this
}

// NewGridViewSearchAddWithDefaults instantiates a new GridViewSearchAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridViewSearchAddWithDefaults() *GridViewSearchAdd {
	this := GridViewSearchAdd{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GridViewSearchAdd) SetId(v int64) {
	o.Id = &v
}

// GetNoResultIfLimit returns the NoResultIfLimit field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetNoResultIfLimit() bool {
	if o == nil || o.NoResultIfLimit == nil {
		var ret bool
		return ret
	}
	return *o.NoResultIfLimit
}

// GetNoResultIfLimitOk returns a tuple with the NoResultIfLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetNoResultIfLimitOk() (*bool, bool) {
	if o == nil || o.NoResultIfLimit == nil {
		return nil, false
	}
	return o.NoResultIfLimit, true
}

// HasNoResultIfLimit returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasNoResultIfLimit() bool {
	if o != nil && o.NoResultIfLimit != nil {
		return true
	}

	return false
}

// SetNoResultIfLimit gets a reference to the given bool and assigns it to the NoResultIfLimit field.
func (o *GridViewSearchAdd) SetNoResultIfLimit(v bool) {
	o.NoResultIfLimit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetOffset() int64 {
	if o == nil || o.Offset == nil {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetOffsetOk() (*int64, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *GridViewSearchAdd) SetOffset(v int64) {
	o.Offset = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *GridViewSearchAdd) SetSize(v int64) {
	o.Size = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GridViewSearchAdd) SetState(v string) {
	o.State = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *GridViewSearchAdd) GetRules() string {
	if o == nil || o.Rules == nil {
		var ret string
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewSearchAdd) GetRulesOk() (*string, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *GridViewSearchAdd) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given string and assigns it to the Rules field.
func (o *GridViewSearchAdd) SetRules(v string) {
	o.Rules = &v
}

func (o GridViewSearchAdd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NoResultIfLimit != nil {
		toSerialize["no_result_if_limit"] = o.NoResultIfLimit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableGridViewSearchAdd struct {
	value *GridViewSearchAdd
	isSet bool
}

func (v NullableGridViewSearchAdd) Get() *GridViewSearchAdd {
	return v.value
}

func (v *NullableGridViewSearchAdd) Set(val *GridViewSearchAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableGridViewSearchAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableGridViewSearchAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridViewSearchAdd(val *GridViewSearchAdd) *NullableGridViewSearchAdd {
	return &NullableGridViewSearchAdd{value: val, isSet: true}
}

func (v NullableGridViewSearchAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridViewSearchAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
