/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedAnalysisValue struct for CompanyAnalysisExtendedAnalysisValue
type CompanyAnalysisExtendedAnalysisValue struct {
	Pe                      *float32 `json:"pe,omitempty"`
	Pb                      *float32 `json:"pb,omitempty"`
	Peg                     *float32 `json:"peg,omitempty"`
	Beta5y                  *float32 `json:"beta_5y,omitempty"`
	Beta5yUnlevered         *float32 `json:"beta_5y_unlevered,omitempty"`
	IntrinsicDiscount       *float32 `json:"intrinsic_discount,omitempty"`
	NpvPerShare             *float32 `json:"npv_per_share,omitempty"`
	MarketCapUsd            *float32 `json:"market_cap_usd,omitempty"`
	MarketCap               *float32 `json:"market_cap,omitempty"`
	LastSharePrice          *float32 `json:"last_share_price,omitempty"`
	PriceToSales            *float32 `json:"price_to_sales,omitempty"`
	EvToSales               *float32 `json:"ev_to_sales,omitempty"`
	EvToEbitda              *float32 `json:"ev_to_ebitda,omitempty"`
	Return7d                *float32 `json:"return_7d,omitempty"`
	Return30d               *float32 `json:"return_30d,omitempty"`
	Return90d               *float32 `json:"return_90d,omitempty"`
	Return1yrAbs            *float32 `json:"return_1yr_abs,omitempty"`
	Return3yrAbs            *float32 `json:"return_3yr_abs,omitempty"`
	Return5yrAbs            *float32 `json:"return_5yr_abs,omitempty"`
	Return1yrTotalReturn    *float32 `json:"return_1yr_total_return,omitempty"`
	Return3yrTotalReturn    *float32 `json:"return_3yr_total_return,omitempty"`
	Return5yrTotalReturn    *float32 `json:"return_5yr_total_return,omitempty"`
	PriceTarget             *float32 `json:"price_target,omitempty"`
	PriceTargetLow          *float32 `json:"price_target_low,omitempty"`
	PriceTargetHigh         *float32 `json:"price_target_high,omitempty"`
	PriceTargetAnalystCount *float32 `json:"price_target_analyst_count,omitempty"`
}

// NewCompanyAnalysisExtendedAnalysisValue instantiates a new CompanyAnalysisExtendedAnalysisValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedAnalysisValue() *CompanyAnalysisExtendedAnalysisValue {
	this := CompanyAnalysisExtendedAnalysisValue{}
	return &this
}

// NewCompanyAnalysisExtendedAnalysisValueWithDefaults instantiates a new CompanyAnalysisExtendedAnalysisValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedAnalysisValueWithDefaults() *CompanyAnalysisExtendedAnalysisValue {
	this := CompanyAnalysisExtendedAnalysisValue{}
	return &this
}

// GetPe returns the Pe field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPe() float32 {
	if o == nil || o.Pe == nil {
		var ret float32
		return ret
	}
	return *o.Pe
}

// GetPeOk returns a tuple with the Pe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPeOk() (*float32, bool) {
	if o == nil || o.Pe == nil {
		return nil, false
	}
	return o.Pe, true
}

// HasPe returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPe() bool {
	if o != nil && o.Pe != nil {
		return true
	}

	return false
}

// SetPe gets a reference to the given float32 and assigns it to the Pe field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPe(v float32) {
	o.Pe = &v
}

// GetPb returns the Pb field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPb() float32 {
	if o == nil || o.Pb == nil {
		var ret float32
		return ret
	}
	return *o.Pb
}

// GetPbOk returns a tuple with the Pb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPbOk() (*float32, bool) {
	if o == nil || o.Pb == nil {
		return nil, false
	}
	return o.Pb, true
}

// HasPb returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPb() bool {
	if o != nil && o.Pb != nil {
		return true
	}

	return false
}

// SetPb gets a reference to the given float32 and assigns it to the Pb field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPb(v float32) {
	o.Pb = &v
}

// GetPeg returns the Peg field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPeg() float32 {
	if o == nil || o.Peg == nil {
		var ret float32
		return ret
	}
	return *o.Peg
}

// GetPegOk returns a tuple with the Peg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPegOk() (*float32, bool) {
	if o == nil || o.Peg == nil {
		return nil, false
	}
	return o.Peg, true
}

// HasPeg returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPeg() bool {
	if o != nil && o.Peg != nil {
		return true
	}

	return false
}

// SetPeg gets a reference to the given float32 and assigns it to the Peg field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPeg(v float32) {
	o.Peg = &v
}

// GetBeta5y returns the Beta5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetBeta5y() float32 {
	if o == nil || o.Beta5y == nil {
		var ret float32
		return ret
	}
	return *o.Beta5y
}

// GetBeta5yOk returns a tuple with the Beta5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetBeta5yOk() (*float32, bool) {
	if o == nil || o.Beta5y == nil {
		return nil, false
	}
	return o.Beta5y, true
}

// HasBeta5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasBeta5y() bool {
	if o != nil && o.Beta5y != nil {
		return true
	}

	return false
}

// SetBeta5y gets a reference to the given float32 and assigns it to the Beta5y field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetBeta5y(v float32) {
	o.Beta5y = &v
}

// GetBeta5yUnlevered returns the Beta5yUnlevered field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetBeta5yUnlevered() float32 {
	if o == nil || o.Beta5yUnlevered == nil {
		var ret float32
		return ret
	}
	return *o.Beta5yUnlevered
}

// GetBeta5yUnleveredOk returns a tuple with the Beta5yUnlevered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetBeta5yUnleveredOk() (*float32, bool) {
	if o == nil || o.Beta5yUnlevered == nil {
		return nil, false
	}
	return o.Beta5yUnlevered, true
}

// HasBeta5yUnlevered returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasBeta5yUnlevered() bool {
	if o != nil && o.Beta5yUnlevered != nil {
		return true
	}

	return false
}

// SetBeta5yUnlevered gets a reference to the given float32 and assigns it to the Beta5yUnlevered field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetBeta5yUnlevered(v float32) {
	o.Beta5yUnlevered = &v
}

// GetIntrinsicDiscount returns the IntrinsicDiscount field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetIntrinsicDiscount() float32 {
	if o == nil || o.IntrinsicDiscount == nil {
		var ret float32
		return ret
	}
	return *o.IntrinsicDiscount
}

// GetIntrinsicDiscountOk returns a tuple with the IntrinsicDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetIntrinsicDiscountOk() (*float32, bool) {
	if o == nil || o.IntrinsicDiscount == nil {
		return nil, false
	}
	return o.IntrinsicDiscount, true
}

// HasIntrinsicDiscount returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasIntrinsicDiscount() bool {
	if o != nil && o.IntrinsicDiscount != nil {
		return true
	}

	return false
}

// SetIntrinsicDiscount gets a reference to the given float32 and assigns it to the IntrinsicDiscount field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetIntrinsicDiscount(v float32) {
	o.IntrinsicDiscount = &v
}

// GetNpvPerShare returns the NpvPerShare field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetNpvPerShare() float32 {
	if o == nil || o.NpvPerShare == nil {
		var ret float32
		return ret
	}
	return *o.NpvPerShare
}

// GetNpvPerShareOk returns a tuple with the NpvPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetNpvPerShareOk() (*float32, bool) {
	if o == nil || o.NpvPerShare == nil {
		return nil, false
	}
	return o.NpvPerShare, true
}

// HasNpvPerShare returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasNpvPerShare() bool {
	if o != nil && o.NpvPerShare != nil {
		return true
	}

	return false
}

// SetNpvPerShare gets a reference to the given float32 and assigns it to the NpvPerShare field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetNpvPerShare(v float32) {
	o.NpvPerShare = &v
}

// GetMarketCapUsd returns the MarketCapUsd field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetMarketCapUsd() float32 {
	if o == nil || o.MarketCapUsd == nil {
		var ret float32
		return ret
	}
	return *o.MarketCapUsd
}

// GetMarketCapUsdOk returns a tuple with the MarketCapUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetMarketCapUsdOk() (*float32, bool) {
	if o == nil || o.MarketCapUsd == nil {
		return nil, false
	}
	return o.MarketCapUsd, true
}

// HasMarketCapUsd returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasMarketCapUsd() bool {
	if o != nil && o.MarketCapUsd != nil {
		return true
	}

	return false
}

// SetMarketCapUsd gets a reference to the given float32 and assigns it to the MarketCapUsd field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetMarketCapUsd(v float32) {
	o.MarketCapUsd = &v
}

// GetMarketCap returns the MarketCap field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetMarketCap() float32 {
	if o == nil || o.MarketCap == nil {
		var ret float32
		return ret
	}
	return *o.MarketCap
}

// GetMarketCapOk returns a tuple with the MarketCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetMarketCapOk() (*float32, bool) {
	if o == nil || o.MarketCap == nil {
		return nil, false
	}
	return o.MarketCap, true
}

// HasMarketCap returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasMarketCap() bool {
	if o != nil && o.MarketCap != nil {
		return true
	}

	return false
}

// SetMarketCap gets a reference to the given float32 and assigns it to the MarketCap field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetMarketCap(v float32) {
	o.MarketCap = &v
}

// GetLastSharePrice returns the LastSharePrice field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetLastSharePrice() float32 {
	if o == nil || o.LastSharePrice == nil {
		var ret float32
		return ret
	}
	return *o.LastSharePrice
}

// GetLastSharePriceOk returns a tuple with the LastSharePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetLastSharePriceOk() (*float32, bool) {
	if o == nil || o.LastSharePrice == nil {
		return nil, false
	}
	return o.LastSharePrice, true
}

// HasLastSharePrice returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasLastSharePrice() bool {
	if o != nil && o.LastSharePrice != nil {
		return true
	}

	return false
}

// SetLastSharePrice gets a reference to the given float32 and assigns it to the LastSharePrice field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetLastSharePrice(v float32) {
	o.LastSharePrice = &v
}

// GetPriceToSales returns the PriceToSales field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceToSales() float32 {
	if o == nil || o.PriceToSales == nil {
		var ret float32
		return ret
	}
	return *o.PriceToSales
}

// GetPriceToSalesOk returns a tuple with the PriceToSales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceToSalesOk() (*float32, bool) {
	if o == nil || o.PriceToSales == nil {
		return nil, false
	}
	return o.PriceToSales, true
}

// HasPriceToSales returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPriceToSales() bool {
	if o != nil && o.PriceToSales != nil {
		return true
	}

	return false
}

// SetPriceToSales gets a reference to the given float32 and assigns it to the PriceToSales field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPriceToSales(v float32) {
	o.PriceToSales = &v
}

// GetEvToSales returns the EvToSales field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetEvToSales() float32 {
	if o == nil || o.EvToSales == nil {
		var ret float32
		return ret
	}
	return *o.EvToSales
}

// GetEvToSalesOk returns a tuple with the EvToSales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetEvToSalesOk() (*float32, bool) {
	if o == nil || o.EvToSales == nil {
		return nil, false
	}
	return o.EvToSales, true
}

// HasEvToSales returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasEvToSales() bool {
	if o != nil && o.EvToSales != nil {
		return true
	}

	return false
}

// SetEvToSales gets a reference to the given float32 and assigns it to the EvToSales field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetEvToSales(v float32) {
	o.EvToSales = &v
}

// GetEvToEbitda returns the EvToEbitda field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetEvToEbitda() float32 {
	if o == nil || o.EvToEbitda == nil {
		var ret float32
		return ret
	}
	return *o.EvToEbitda
}

// GetEvToEbitdaOk returns a tuple with the EvToEbitda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetEvToEbitdaOk() (*float32, bool) {
	if o == nil || o.EvToEbitda == nil {
		return nil, false
	}
	return o.EvToEbitda, true
}

// HasEvToEbitda returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasEvToEbitda() bool {
	if o != nil && o.EvToEbitda != nil {
		return true
	}

	return false
}

// SetEvToEbitda gets a reference to the given float32 and assigns it to the EvToEbitda field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetEvToEbitda(v float32) {
	o.EvToEbitda = &v
}

// GetReturn7d returns the Return7d field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn7d() float32 {
	if o == nil || o.Return7d == nil {
		var ret float32
		return ret
	}
	return *o.Return7d
}

// GetReturn7dOk returns a tuple with the Return7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn7dOk() (*float32, bool) {
	if o == nil || o.Return7d == nil {
		return nil, false
	}
	return o.Return7d, true
}

// HasReturn7d returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn7d() bool {
	if o != nil && o.Return7d != nil {
		return true
	}

	return false
}

// SetReturn7d gets a reference to the given float32 and assigns it to the Return7d field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn7d(v float32) {
	o.Return7d = &v
}

// GetReturn30d returns the Return30d field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn30d() float32 {
	if o == nil || o.Return30d == nil {
		var ret float32
		return ret
	}
	return *o.Return30d
}

// GetReturn30dOk returns a tuple with the Return30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn30dOk() (*float32, bool) {
	if o == nil || o.Return30d == nil {
		return nil, false
	}
	return o.Return30d, true
}

// HasReturn30d returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn30d() bool {
	if o != nil && o.Return30d != nil {
		return true
	}

	return false
}

// SetReturn30d gets a reference to the given float32 and assigns it to the Return30d field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn30d(v float32) {
	o.Return30d = &v
}

// GetReturn90d returns the Return90d field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn90d() float32 {
	if o == nil || o.Return90d == nil {
		var ret float32
		return ret
	}
	return *o.Return90d
}

// GetReturn90dOk returns a tuple with the Return90d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn90dOk() (*float32, bool) {
	if o == nil || o.Return90d == nil {
		return nil, false
	}
	return o.Return90d, true
}

// HasReturn90d returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn90d() bool {
	if o != nil && o.Return90d != nil {
		return true
	}

	return false
}

// SetReturn90d gets a reference to the given float32 and assigns it to the Return90d field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn90d(v float32) {
	o.Return90d = &v
}

// GetReturn1yrAbs returns the Return1yrAbs field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn1yrAbs() float32 {
	if o == nil || o.Return1yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return1yrAbs
}

// GetReturn1yrAbsOk returns a tuple with the Return1yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn1yrAbsOk() (*float32, bool) {
	if o == nil || o.Return1yrAbs == nil {
		return nil, false
	}
	return o.Return1yrAbs, true
}

// HasReturn1yrAbs returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn1yrAbs() bool {
	if o != nil && o.Return1yrAbs != nil {
		return true
	}

	return false
}

// SetReturn1yrAbs gets a reference to the given float32 and assigns it to the Return1yrAbs field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn1yrAbs(v float32) {
	o.Return1yrAbs = &v
}

// GetReturn3yrAbs returns the Return3yrAbs field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn3yrAbs() float32 {
	if o == nil || o.Return3yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return3yrAbs
}

// GetReturn3yrAbsOk returns a tuple with the Return3yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn3yrAbsOk() (*float32, bool) {
	if o == nil || o.Return3yrAbs == nil {
		return nil, false
	}
	return o.Return3yrAbs, true
}

// HasReturn3yrAbs returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn3yrAbs() bool {
	if o != nil && o.Return3yrAbs != nil {
		return true
	}

	return false
}

// SetReturn3yrAbs gets a reference to the given float32 and assigns it to the Return3yrAbs field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn3yrAbs(v float32) {
	o.Return3yrAbs = &v
}

// GetReturn5yrAbs returns the Return5yrAbs field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn5yrAbs() float32 {
	if o == nil || o.Return5yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return5yrAbs
}

// GetReturn5yrAbsOk returns a tuple with the Return5yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn5yrAbsOk() (*float32, bool) {
	if o == nil || o.Return5yrAbs == nil {
		return nil, false
	}
	return o.Return5yrAbs, true
}

// HasReturn5yrAbs returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn5yrAbs() bool {
	if o != nil && o.Return5yrAbs != nil {
		return true
	}

	return false
}

// SetReturn5yrAbs gets a reference to the given float32 and assigns it to the Return5yrAbs field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn5yrAbs(v float32) {
	o.Return5yrAbs = &v
}

// GetReturn1yrTotalReturn returns the Return1yrTotalReturn field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn1yrTotalReturn() float32 {
	if o == nil || o.Return1yrTotalReturn == nil {
		var ret float32
		return ret
	}
	return *o.Return1yrTotalReturn
}

// GetReturn1yrTotalReturnOk returns a tuple with the Return1yrTotalReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn1yrTotalReturnOk() (*float32, bool) {
	if o == nil || o.Return1yrTotalReturn == nil {
		return nil, false
	}
	return o.Return1yrTotalReturn, true
}

// HasReturn1yrTotalReturn returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn1yrTotalReturn() bool {
	if o != nil && o.Return1yrTotalReturn != nil {
		return true
	}

	return false
}

// SetReturn1yrTotalReturn gets a reference to the given float32 and assigns it to the Return1yrTotalReturn field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn1yrTotalReturn(v float32) {
	o.Return1yrTotalReturn = &v
}

// GetReturn3yrTotalReturn returns the Return3yrTotalReturn field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn3yrTotalReturn() float32 {
	if o == nil || o.Return3yrTotalReturn == nil {
		var ret float32
		return ret
	}
	return *o.Return3yrTotalReturn
}

// GetReturn3yrTotalReturnOk returns a tuple with the Return3yrTotalReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn3yrTotalReturnOk() (*float32, bool) {
	if o == nil || o.Return3yrTotalReturn == nil {
		return nil, false
	}
	return o.Return3yrTotalReturn, true
}

// HasReturn3yrTotalReturn returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn3yrTotalReturn() bool {
	if o != nil && o.Return3yrTotalReturn != nil {
		return true
	}

	return false
}

// SetReturn3yrTotalReturn gets a reference to the given float32 and assigns it to the Return3yrTotalReturn field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn3yrTotalReturn(v float32) {
	o.Return3yrTotalReturn = &v
}

// GetReturn5yrTotalReturn returns the Return5yrTotalReturn field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn5yrTotalReturn() float32 {
	if o == nil || o.Return5yrTotalReturn == nil {
		var ret float32
		return ret
	}
	return *o.Return5yrTotalReturn
}

// GetReturn5yrTotalReturnOk returns a tuple with the Return5yrTotalReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetReturn5yrTotalReturnOk() (*float32, bool) {
	if o == nil || o.Return5yrTotalReturn == nil {
		return nil, false
	}
	return o.Return5yrTotalReturn, true
}

// HasReturn5yrTotalReturn returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasReturn5yrTotalReturn() bool {
	if o != nil && o.Return5yrTotalReturn != nil {
		return true
	}

	return false
}

// SetReturn5yrTotalReturn gets a reference to the given float32 and assigns it to the Return5yrTotalReturn field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetReturn5yrTotalReturn(v float32) {
	o.Return5yrTotalReturn = &v
}

// GetPriceTarget returns the PriceTarget field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTarget() float32 {
	if o == nil || o.PriceTarget == nil {
		var ret float32
		return ret
	}
	return *o.PriceTarget
}

// GetPriceTargetOk returns a tuple with the PriceTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetOk() (*float32, bool) {
	if o == nil || o.PriceTarget == nil {
		return nil, false
	}
	return o.PriceTarget, true
}

// HasPriceTarget returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPriceTarget() bool {
	if o != nil && o.PriceTarget != nil {
		return true
	}

	return false
}

// SetPriceTarget gets a reference to the given float32 and assigns it to the PriceTarget field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPriceTarget(v float32) {
	o.PriceTarget = &v
}

// GetPriceTargetLow returns the PriceTargetLow field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetLow() float32 {
	if o == nil || o.PriceTargetLow == nil {
		var ret float32
		return ret
	}
	return *o.PriceTargetLow
}

// GetPriceTargetLowOk returns a tuple with the PriceTargetLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetLowOk() (*float32, bool) {
	if o == nil || o.PriceTargetLow == nil {
		return nil, false
	}
	return o.PriceTargetLow, true
}

// HasPriceTargetLow returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPriceTargetLow() bool {
	if o != nil && o.PriceTargetLow != nil {
		return true
	}

	return false
}

// SetPriceTargetLow gets a reference to the given float32 and assigns it to the PriceTargetLow field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPriceTargetLow(v float32) {
	o.PriceTargetLow = &v
}

// GetPriceTargetHigh returns the PriceTargetHigh field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetHigh() float32 {
	if o == nil || o.PriceTargetHigh == nil {
		var ret float32
		return ret
	}
	return *o.PriceTargetHigh
}

// GetPriceTargetHighOk returns a tuple with the PriceTargetHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetHighOk() (*float32, bool) {
	if o == nil || o.PriceTargetHigh == nil {
		return nil, false
	}
	return o.PriceTargetHigh, true
}

// HasPriceTargetHigh returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPriceTargetHigh() bool {
	if o != nil && o.PriceTargetHigh != nil {
		return true
	}

	return false
}

// SetPriceTargetHigh gets a reference to the given float32 and assigns it to the PriceTargetHigh field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPriceTargetHigh(v float32) {
	o.PriceTargetHigh = &v
}

// GetPriceTargetAnalystCount returns the PriceTargetAnalystCount field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetAnalystCount() float32 {
	if o == nil || o.PriceTargetAnalystCount == nil {
		var ret float32
		return ret
	}
	return *o.PriceTargetAnalystCount
}

// GetPriceTargetAnalystCountOk returns a tuple with the PriceTargetAnalystCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) GetPriceTargetAnalystCountOk() (*float32, bool) {
	if o == nil || o.PriceTargetAnalystCount == nil {
		return nil, false
	}
	return o.PriceTargetAnalystCount, true
}

// HasPriceTargetAnalystCount returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisValue) HasPriceTargetAnalystCount() bool {
	if o != nil && o.PriceTargetAnalystCount != nil {
		return true
	}

	return false
}

// SetPriceTargetAnalystCount gets a reference to the given float32 and assigns it to the PriceTargetAnalystCount field.
func (o *CompanyAnalysisExtendedAnalysisValue) SetPriceTargetAnalystCount(v float32) {
	o.PriceTargetAnalystCount = &v
}

func (o CompanyAnalysisExtendedAnalysisValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pe != nil {
		toSerialize["pe"] = o.Pe
	}
	if o.Pb != nil {
		toSerialize["pb"] = o.Pb
	}
	if o.Peg != nil {
		toSerialize["peg"] = o.Peg
	}
	if o.Beta5y != nil {
		toSerialize["beta_5y"] = o.Beta5y
	}
	if o.Beta5yUnlevered != nil {
		toSerialize["beta_5y_unlevered"] = o.Beta5yUnlevered
	}
	if o.IntrinsicDiscount != nil {
		toSerialize["intrinsic_discount"] = o.IntrinsicDiscount
	}
	if o.NpvPerShare != nil {
		toSerialize["npv_per_share"] = o.NpvPerShare
	}
	if o.MarketCapUsd != nil {
		toSerialize["market_cap_usd"] = o.MarketCapUsd
	}
	if o.MarketCap != nil {
		toSerialize["market_cap"] = o.MarketCap
	}
	if o.LastSharePrice != nil {
		toSerialize["last_share_price"] = o.LastSharePrice
	}
	if o.PriceToSales != nil {
		toSerialize["price_to_sales"] = o.PriceToSales
	}
	if o.EvToSales != nil {
		toSerialize["ev_to_sales"] = o.EvToSales
	}
	if o.EvToEbitda != nil {
		toSerialize["ev_to_ebitda"] = o.EvToEbitda
	}
	if o.Return7d != nil {
		toSerialize["return_7d"] = o.Return7d
	}
	if o.Return30d != nil {
		toSerialize["return_30d"] = o.Return30d
	}
	if o.Return90d != nil {
		toSerialize["return_90d"] = o.Return90d
	}
	if o.Return1yrAbs != nil {
		toSerialize["return_1yr_abs"] = o.Return1yrAbs
	}
	if o.Return3yrAbs != nil {
		toSerialize["return_3yr_abs"] = o.Return3yrAbs
	}
	if o.Return5yrAbs != nil {
		toSerialize["return_5yr_abs"] = o.Return5yrAbs
	}
	if o.Return1yrTotalReturn != nil {
		toSerialize["return_1yr_total_return"] = o.Return1yrTotalReturn
	}
	if o.Return3yrTotalReturn != nil {
		toSerialize["return_3yr_total_return"] = o.Return3yrTotalReturn
	}
	if o.Return5yrTotalReturn != nil {
		toSerialize["return_5yr_total_return"] = o.Return5yrTotalReturn
	}
	if o.PriceTarget != nil {
		toSerialize["price_target"] = o.PriceTarget
	}
	if o.PriceTargetLow != nil {
		toSerialize["price_target_low"] = o.PriceTargetLow
	}
	if o.PriceTargetHigh != nil {
		toSerialize["price_target_high"] = o.PriceTargetHigh
	}
	if o.PriceTargetAnalystCount != nil {
		toSerialize["price_target_analyst_count"] = o.PriceTargetAnalystCount
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedAnalysisValue struct {
	value *CompanyAnalysisExtendedAnalysisValue
	isSet bool
}

func (v NullableCompanyAnalysisExtendedAnalysisValue) Get() *CompanyAnalysisExtendedAnalysisValue {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedAnalysisValue) Set(val *CompanyAnalysisExtendedAnalysisValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedAnalysisValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedAnalysisValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedAnalysisValue(val *CompanyAnalysisExtendedAnalysisValue) *NullableCompanyAnalysisExtendedAnalysisValue {
	return &NullableCompanyAnalysisExtendedAnalysisValue{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedAnalysisValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedAnalysisValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
