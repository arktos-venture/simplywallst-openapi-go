/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Companies struct for Companies
type Companies struct {
	Data *Company     `json:"data,omitempty"`
	Meta *CompanyMeta `json:"meta,omitempty"`
}

// NewCompanies instantiates a new Companies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanies() *Companies {
	this := Companies{}
	return &this
}

// NewCompaniesWithDefaults instantiates a new Companies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesWithDefaults() *Companies {
	this := Companies{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *Companies) GetData() Company {
	if o == nil || o.Data == nil {
		var ret Company
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Companies) GetDataOk() (*Company, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *Companies) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Company and assigns it to the Data field.
func (o *Companies) SetData(v Company) {
	o.Data = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Companies) GetMeta() CompanyMeta {
	if o == nil || o.Meta == nil {
		var ret CompanyMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Companies) GetMetaOk() (*CompanyMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Companies) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given CompanyMeta and assigns it to the Meta field.
func (o *Companies) SetMeta(v CompanyMeta) {
	o.Meta = &v
}

func (o Companies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableCompanies struct {
	value *Companies
	isSet bool
}

func (v NullableCompanies) Get() *Companies {
	return v.value
}

func (v *NullableCompanies) Set(val *Companies) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanies) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanies(val *Companies) *NullableCompanies {
	return &NullableCompanies{value: val, isSet: true}
}

func (v NullableCompanies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
