/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedAnalysisFuture struct for CompanyAnalysisExtendedAnalysisFuture
type CompanyAnalysisExtendedAnalysisFuture struct {
	ReturnOnEquity1y             *float32 `json:"return_on_equity_1y,omitempty"`
	ReturnOnEquity3y             *float32 `json:"return_on_equity_3y,omitempty"`
	EarningsPerShareGrowth1y     *float32 `json:"earnings_per_share_growth_1y,omitempty"`
	EarningsPerShareGrowth3y     *float32 `json:"earnings_per_share_growth_3y,omitempty"`
	EarningsPerShare1y           *float32 `json:"earnings_per_share_1y,omitempty"`
	EarningsPerShare2y           *float32 `json:"earnings_per_share_2y,omitempty"`
	EarningsPerShare3y           *float32 `json:"earnings_per_share_3y,omitempty"`
	RevenueGrowth1y              *float32 `json:"revenue_growth_1y,omitempty"`
	RevenueGrowth2y              *float32 `json:"revenue_growth_2y,omitempty"`
	RevenueGrowth3y              *float32 `json:"revenue_growth_3y,omitempty"`
	Revenue1y                    *float32 `json:"revenue_1y,omitempty"`
	Revenue2y                    *float32 `json:"revenue_2y,omitempty"`
	Revenue3y                    *float32 `json:"revenue_3y,omitempty"`
	CashOpsGrowth1y              *float32 `json:"cash_ops_growth_1y,omitempty"`
	CashOpsGrowth2y              *float32 `json:"cash_ops_growth_2y,omitempty"`
	CashOpsGrowth3y              *float32 `json:"cash_ops_growth_3y,omitempty"`
	CashOps1y                    *float32 `json:"cash_ops_1y,omitempty"`
	CashOps2y                    *float32 `json:"cash_ops_2y,omitempty"`
	CashOps3y                    *float32 `json:"cash_ops_3y,omitempty"`
	NetIncomeGrowth1y            *float32 `json:"net_income_growth_1y,omitempty"`
	NetIncomeGrowth2y            *float32 `json:"net_income_growth_2y,omitempty"`
	NetIncomeGrowth3y            *float32 `json:"net_income_growth_3y,omitempty"`
	NetIncome1y                  *float32 `json:"net_income_1y,omitempty"`
	NetIncome2y                  *float32 `json:"net_income_2y,omitempty"`
	NetIncome3y                  *float32 `json:"net_income_3y,omitempty"`
	MinimumEarningsGrowth        *float32 `json:"minimum_earnings_growth,omitempty"`
	EarningsPerShareGrowthAnnual *float32 `json:"earnings_per_share_growth_annual,omitempty"`
	RevenueGrowthAnnual          *float32 `json:"revenue_growth_annual,omitempty"`
	CashOpsGrowthAnnual          *float32 `json:"cash_ops_growth_annual,omitempty"`
	NetIncomeGrowthAnnual        *float32 `json:"net_income_growth_annual,omitempty"`
	Ebitda1y                     *float32 `json:"ebitda_1y,omitempty"`
	EbitdaGrowth1y               *float32 `json:"ebitda_growth_1y,omitempty"`
	ForwardPe1y                  *float32 `json:"forward_pe_1y,omitempty"`
	ForwardPriceToSales1y        *float32 `json:"forward_price_to_sales_1y,omitempty"`
	ForwardEvToEbitda1y          *float32 `json:"forward_ev_to_ebitda_1y,omitempty"`
	ForwardEvToSales1y           *float32 `json:"forward_ev_to_sales_1y,omitempty"`
	GrossProfitMargin1y          *float32 `json:"gross_profit_margin_1y,omitempty"`
	NetIncomeMargin1y            *float32 `json:"net_income_margin_1y,omitempty"`
}

// NewCompanyAnalysisExtendedAnalysisFuture instantiates a new CompanyAnalysisExtendedAnalysisFuture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedAnalysisFuture() *CompanyAnalysisExtendedAnalysisFuture {
	this := CompanyAnalysisExtendedAnalysisFuture{}
	return &this
}

// NewCompanyAnalysisExtendedAnalysisFutureWithDefaults instantiates a new CompanyAnalysisExtendedAnalysisFuture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedAnalysisFutureWithDefaults() *CompanyAnalysisExtendedAnalysisFuture {
	this := CompanyAnalysisExtendedAnalysisFuture{}
	return &this
}

// GetReturnOnEquity1y returns the ReturnOnEquity1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetReturnOnEquity1y() float32 {
	if o == nil || o.ReturnOnEquity1y == nil {
		var ret float32
		return ret
	}
	return *o.ReturnOnEquity1y
}

// GetReturnOnEquity1yOk returns a tuple with the ReturnOnEquity1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetReturnOnEquity1yOk() (*float32, bool) {
	if o == nil || o.ReturnOnEquity1y == nil {
		return nil, false
	}
	return o.ReturnOnEquity1y, true
}

// HasReturnOnEquity1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasReturnOnEquity1y() bool {
	if o != nil && o.ReturnOnEquity1y != nil {
		return true
	}

	return false
}

// SetReturnOnEquity1y gets a reference to the given float32 and assigns it to the ReturnOnEquity1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetReturnOnEquity1y(v float32) {
	o.ReturnOnEquity1y = &v
}

// GetReturnOnEquity3y returns the ReturnOnEquity3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetReturnOnEquity3y() float32 {
	if o == nil || o.ReturnOnEquity3y == nil {
		var ret float32
		return ret
	}
	return *o.ReturnOnEquity3y
}

// GetReturnOnEquity3yOk returns a tuple with the ReturnOnEquity3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetReturnOnEquity3yOk() (*float32, bool) {
	if o == nil || o.ReturnOnEquity3y == nil {
		return nil, false
	}
	return o.ReturnOnEquity3y, true
}

// HasReturnOnEquity3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasReturnOnEquity3y() bool {
	if o != nil && o.ReturnOnEquity3y != nil {
		return true
	}

	return false
}

// SetReturnOnEquity3y gets a reference to the given float32 and assigns it to the ReturnOnEquity3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetReturnOnEquity3y(v float32) {
	o.ReturnOnEquity3y = &v
}

// GetEarningsPerShareGrowth1y returns the EarningsPerShareGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowth1y() float32 {
	if o == nil || o.EarningsPerShareGrowth1y == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShareGrowth1y
}

// GetEarningsPerShareGrowth1yOk returns a tuple with the EarningsPerShareGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowth1yOk() (*float32, bool) {
	if o == nil || o.EarningsPerShareGrowth1y == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowth1y, true
}

// HasEarningsPerShareGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShareGrowth1y() bool {
	if o != nil && o.EarningsPerShareGrowth1y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowth1y gets a reference to the given float32 and assigns it to the EarningsPerShareGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShareGrowth1y(v float32) {
	o.EarningsPerShareGrowth1y = &v
}

// GetEarningsPerShareGrowth3y returns the EarningsPerShareGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowth3y() float32 {
	if o == nil || o.EarningsPerShareGrowth3y == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShareGrowth3y
}

// GetEarningsPerShareGrowth3yOk returns a tuple with the EarningsPerShareGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowth3yOk() (*float32, bool) {
	if o == nil || o.EarningsPerShareGrowth3y == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowth3y, true
}

// HasEarningsPerShareGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShareGrowth3y() bool {
	if o != nil && o.EarningsPerShareGrowth3y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowth3y gets a reference to the given float32 and assigns it to the EarningsPerShareGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShareGrowth3y(v float32) {
	o.EarningsPerShareGrowth3y = &v
}

// GetEarningsPerShare1y returns the EarningsPerShare1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare1y() float32 {
	if o == nil || o.EarningsPerShare1y == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShare1y
}

// GetEarningsPerShare1yOk returns a tuple with the EarningsPerShare1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare1yOk() (*float32, bool) {
	if o == nil || o.EarningsPerShare1y == nil {
		return nil, false
	}
	return o.EarningsPerShare1y, true
}

// HasEarningsPerShare1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShare1y() bool {
	if o != nil && o.EarningsPerShare1y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare1y gets a reference to the given float32 and assigns it to the EarningsPerShare1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShare1y(v float32) {
	o.EarningsPerShare1y = &v
}

// GetEarningsPerShare2y returns the EarningsPerShare2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare2y() float32 {
	if o == nil || o.EarningsPerShare2y == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShare2y
}

// GetEarningsPerShare2yOk returns a tuple with the EarningsPerShare2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare2yOk() (*float32, bool) {
	if o == nil || o.EarningsPerShare2y == nil {
		return nil, false
	}
	return o.EarningsPerShare2y, true
}

// HasEarningsPerShare2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShare2y() bool {
	if o != nil && o.EarningsPerShare2y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare2y gets a reference to the given float32 and assigns it to the EarningsPerShare2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShare2y(v float32) {
	o.EarningsPerShare2y = &v
}

// GetEarningsPerShare3y returns the EarningsPerShare3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare3y() float32 {
	if o == nil || o.EarningsPerShare3y == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShare3y
}

// GetEarningsPerShare3yOk returns a tuple with the EarningsPerShare3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShare3yOk() (*float32, bool) {
	if o == nil || o.EarningsPerShare3y == nil {
		return nil, false
	}
	return o.EarningsPerShare3y, true
}

// HasEarningsPerShare3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShare3y() bool {
	if o != nil && o.EarningsPerShare3y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare3y gets a reference to the given float32 and assigns it to the EarningsPerShare3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShare3y(v float32) {
	o.EarningsPerShare3y = &v
}

// GetRevenueGrowth1y returns the RevenueGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth1y() float32 {
	if o == nil || o.RevenueGrowth1y == nil {
		var ret float32
		return ret
	}
	return *o.RevenueGrowth1y
}

// GetRevenueGrowth1yOk returns a tuple with the RevenueGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth1yOk() (*float32, bool) {
	if o == nil || o.RevenueGrowth1y == nil {
		return nil, false
	}
	return o.RevenueGrowth1y, true
}

// HasRevenueGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenueGrowth1y() bool {
	if o != nil && o.RevenueGrowth1y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth1y gets a reference to the given float32 and assigns it to the RevenueGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenueGrowth1y(v float32) {
	o.RevenueGrowth1y = &v
}

// GetRevenueGrowth2y returns the RevenueGrowth2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth2y() float32 {
	if o == nil || o.RevenueGrowth2y == nil {
		var ret float32
		return ret
	}
	return *o.RevenueGrowth2y
}

// GetRevenueGrowth2yOk returns a tuple with the RevenueGrowth2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth2yOk() (*float32, bool) {
	if o == nil || o.RevenueGrowth2y == nil {
		return nil, false
	}
	return o.RevenueGrowth2y, true
}

// HasRevenueGrowth2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenueGrowth2y() bool {
	if o != nil && o.RevenueGrowth2y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth2y gets a reference to the given float32 and assigns it to the RevenueGrowth2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenueGrowth2y(v float32) {
	o.RevenueGrowth2y = &v
}

// GetRevenueGrowth3y returns the RevenueGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth3y() float32 {
	if o == nil || o.RevenueGrowth3y == nil {
		var ret float32
		return ret
	}
	return *o.RevenueGrowth3y
}

// GetRevenueGrowth3yOk returns a tuple with the RevenueGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowth3yOk() (*float32, bool) {
	if o == nil || o.RevenueGrowth3y == nil {
		return nil, false
	}
	return o.RevenueGrowth3y, true
}

// HasRevenueGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenueGrowth3y() bool {
	if o != nil && o.RevenueGrowth3y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth3y gets a reference to the given float32 and assigns it to the RevenueGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenueGrowth3y(v float32) {
	o.RevenueGrowth3y = &v
}

// GetRevenue1y returns the Revenue1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue1y() float32 {
	if o == nil || o.Revenue1y == nil {
		var ret float32
		return ret
	}
	return *o.Revenue1y
}

// GetRevenue1yOk returns a tuple with the Revenue1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue1yOk() (*float32, bool) {
	if o == nil || o.Revenue1y == nil {
		return nil, false
	}
	return o.Revenue1y, true
}

// HasRevenue1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenue1y() bool {
	if o != nil && o.Revenue1y != nil {
		return true
	}

	return false
}

// SetRevenue1y gets a reference to the given float32 and assigns it to the Revenue1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenue1y(v float32) {
	o.Revenue1y = &v
}

// GetRevenue2y returns the Revenue2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue2y() float32 {
	if o == nil || o.Revenue2y == nil {
		var ret float32
		return ret
	}
	return *o.Revenue2y
}

// GetRevenue2yOk returns a tuple with the Revenue2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue2yOk() (*float32, bool) {
	if o == nil || o.Revenue2y == nil {
		return nil, false
	}
	return o.Revenue2y, true
}

// HasRevenue2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenue2y() bool {
	if o != nil && o.Revenue2y != nil {
		return true
	}

	return false
}

// SetRevenue2y gets a reference to the given float32 and assigns it to the Revenue2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenue2y(v float32) {
	o.Revenue2y = &v
}

// GetRevenue3y returns the Revenue3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue3y() float32 {
	if o == nil || o.Revenue3y == nil {
		var ret float32
		return ret
	}
	return *o.Revenue3y
}

// GetRevenue3yOk returns a tuple with the Revenue3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenue3yOk() (*float32, bool) {
	if o == nil || o.Revenue3y == nil {
		return nil, false
	}
	return o.Revenue3y, true
}

// HasRevenue3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenue3y() bool {
	if o != nil && o.Revenue3y != nil {
		return true
	}

	return false
}

// SetRevenue3y gets a reference to the given float32 and assigns it to the Revenue3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenue3y(v float32) {
	o.Revenue3y = &v
}

// GetCashOpsGrowth1y returns the CashOpsGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth1y() float32 {
	if o == nil || o.CashOpsGrowth1y == nil {
		var ret float32
		return ret
	}
	return *o.CashOpsGrowth1y
}

// GetCashOpsGrowth1yOk returns a tuple with the CashOpsGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth1yOk() (*float32, bool) {
	if o == nil || o.CashOpsGrowth1y == nil {
		return nil, false
	}
	return o.CashOpsGrowth1y, true
}

// HasCashOpsGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOpsGrowth1y() bool {
	if o != nil && o.CashOpsGrowth1y != nil {
		return true
	}

	return false
}

// SetCashOpsGrowth1y gets a reference to the given float32 and assigns it to the CashOpsGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOpsGrowth1y(v float32) {
	o.CashOpsGrowth1y = &v
}

// GetCashOpsGrowth2y returns the CashOpsGrowth2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth2y() float32 {
	if o == nil || o.CashOpsGrowth2y == nil {
		var ret float32
		return ret
	}
	return *o.CashOpsGrowth2y
}

// GetCashOpsGrowth2yOk returns a tuple with the CashOpsGrowth2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth2yOk() (*float32, bool) {
	if o == nil || o.CashOpsGrowth2y == nil {
		return nil, false
	}
	return o.CashOpsGrowth2y, true
}

// HasCashOpsGrowth2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOpsGrowth2y() bool {
	if o != nil && o.CashOpsGrowth2y != nil {
		return true
	}

	return false
}

// SetCashOpsGrowth2y gets a reference to the given float32 and assigns it to the CashOpsGrowth2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOpsGrowth2y(v float32) {
	o.CashOpsGrowth2y = &v
}

// GetCashOpsGrowth3y returns the CashOpsGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth3y() float32 {
	if o == nil || o.CashOpsGrowth3y == nil {
		var ret float32
		return ret
	}
	return *o.CashOpsGrowth3y
}

// GetCashOpsGrowth3yOk returns a tuple with the CashOpsGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowth3yOk() (*float32, bool) {
	if o == nil || o.CashOpsGrowth3y == nil {
		return nil, false
	}
	return o.CashOpsGrowth3y, true
}

// HasCashOpsGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOpsGrowth3y() bool {
	if o != nil && o.CashOpsGrowth3y != nil {
		return true
	}

	return false
}

// SetCashOpsGrowth3y gets a reference to the given float32 and assigns it to the CashOpsGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOpsGrowth3y(v float32) {
	o.CashOpsGrowth3y = &v
}

// GetCashOps1y returns the CashOps1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps1y() float32 {
	if o == nil || o.CashOps1y == nil {
		var ret float32
		return ret
	}
	return *o.CashOps1y
}

// GetCashOps1yOk returns a tuple with the CashOps1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps1yOk() (*float32, bool) {
	if o == nil || o.CashOps1y == nil {
		return nil, false
	}
	return o.CashOps1y, true
}

// HasCashOps1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOps1y() bool {
	if o != nil && o.CashOps1y != nil {
		return true
	}

	return false
}

// SetCashOps1y gets a reference to the given float32 and assigns it to the CashOps1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOps1y(v float32) {
	o.CashOps1y = &v
}

// GetCashOps2y returns the CashOps2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps2y() float32 {
	if o == nil || o.CashOps2y == nil {
		var ret float32
		return ret
	}
	return *o.CashOps2y
}

// GetCashOps2yOk returns a tuple with the CashOps2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps2yOk() (*float32, bool) {
	if o == nil || o.CashOps2y == nil {
		return nil, false
	}
	return o.CashOps2y, true
}

// HasCashOps2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOps2y() bool {
	if o != nil && o.CashOps2y != nil {
		return true
	}

	return false
}

// SetCashOps2y gets a reference to the given float32 and assigns it to the CashOps2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOps2y(v float32) {
	o.CashOps2y = &v
}

// GetCashOps3y returns the CashOps3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps3y() float32 {
	if o == nil || o.CashOps3y == nil {
		var ret float32
		return ret
	}
	return *o.CashOps3y
}

// GetCashOps3yOk returns a tuple with the CashOps3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOps3yOk() (*float32, bool) {
	if o == nil || o.CashOps3y == nil {
		return nil, false
	}
	return o.CashOps3y, true
}

// HasCashOps3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOps3y() bool {
	if o != nil && o.CashOps3y != nil {
		return true
	}

	return false
}

// SetCashOps3y gets a reference to the given float32 and assigns it to the CashOps3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOps3y(v float32) {
	o.CashOps3y = &v
}

// GetNetIncomeGrowth1y returns the NetIncomeGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth1y() float32 {
	if o == nil || o.NetIncomeGrowth1y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncomeGrowth1y
}

// GetNetIncomeGrowth1yOk returns a tuple with the NetIncomeGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth1yOk() (*float32, bool) {
	if o == nil || o.NetIncomeGrowth1y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth1y, true
}

// HasNetIncomeGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncomeGrowth1y() bool {
	if o != nil && o.NetIncomeGrowth1y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth1y gets a reference to the given float32 and assigns it to the NetIncomeGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncomeGrowth1y(v float32) {
	o.NetIncomeGrowth1y = &v
}

// GetNetIncomeGrowth2y returns the NetIncomeGrowth2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth2y() float32 {
	if o == nil || o.NetIncomeGrowth2y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncomeGrowth2y
}

// GetNetIncomeGrowth2yOk returns a tuple with the NetIncomeGrowth2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth2yOk() (*float32, bool) {
	if o == nil || o.NetIncomeGrowth2y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth2y, true
}

// HasNetIncomeGrowth2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncomeGrowth2y() bool {
	if o != nil && o.NetIncomeGrowth2y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth2y gets a reference to the given float32 and assigns it to the NetIncomeGrowth2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncomeGrowth2y(v float32) {
	o.NetIncomeGrowth2y = &v
}

// GetNetIncomeGrowth3y returns the NetIncomeGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth3y() float32 {
	if o == nil || o.NetIncomeGrowth3y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncomeGrowth3y
}

// GetNetIncomeGrowth3yOk returns a tuple with the NetIncomeGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowth3yOk() (*float32, bool) {
	if o == nil || o.NetIncomeGrowth3y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth3y, true
}

// HasNetIncomeGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncomeGrowth3y() bool {
	if o != nil && o.NetIncomeGrowth3y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth3y gets a reference to the given float32 and assigns it to the NetIncomeGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncomeGrowth3y(v float32) {
	o.NetIncomeGrowth3y = &v
}

// GetNetIncome1y returns the NetIncome1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome1y() float32 {
	if o == nil || o.NetIncome1y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncome1y
}

// GetNetIncome1yOk returns a tuple with the NetIncome1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome1yOk() (*float32, bool) {
	if o == nil || o.NetIncome1y == nil {
		return nil, false
	}
	return o.NetIncome1y, true
}

// HasNetIncome1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncome1y() bool {
	if o != nil && o.NetIncome1y != nil {
		return true
	}

	return false
}

// SetNetIncome1y gets a reference to the given float32 and assigns it to the NetIncome1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncome1y(v float32) {
	o.NetIncome1y = &v
}

// GetNetIncome2y returns the NetIncome2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome2y() float32 {
	if o == nil || o.NetIncome2y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncome2y
}

// GetNetIncome2yOk returns a tuple with the NetIncome2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome2yOk() (*float32, bool) {
	if o == nil || o.NetIncome2y == nil {
		return nil, false
	}
	return o.NetIncome2y, true
}

// HasNetIncome2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncome2y() bool {
	if o != nil && o.NetIncome2y != nil {
		return true
	}

	return false
}

// SetNetIncome2y gets a reference to the given float32 and assigns it to the NetIncome2y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncome2y(v float32) {
	o.NetIncome2y = &v
}

// GetNetIncome3y returns the NetIncome3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome3y() float32 {
	if o == nil || o.NetIncome3y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncome3y
}

// GetNetIncome3yOk returns a tuple with the NetIncome3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncome3yOk() (*float32, bool) {
	if o == nil || o.NetIncome3y == nil {
		return nil, false
	}
	return o.NetIncome3y, true
}

// HasNetIncome3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncome3y() bool {
	if o != nil && o.NetIncome3y != nil {
		return true
	}

	return false
}

// SetNetIncome3y gets a reference to the given float32 and assigns it to the NetIncome3y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncome3y(v float32) {
	o.NetIncome3y = &v
}

// GetMinimumEarningsGrowth returns the MinimumEarningsGrowth field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetMinimumEarningsGrowth() float32 {
	if o == nil || o.MinimumEarningsGrowth == nil {
		var ret float32
		return ret
	}
	return *o.MinimumEarningsGrowth
}

// GetMinimumEarningsGrowthOk returns a tuple with the MinimumEarningsGrowth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetMinimumEarningsGrowthOk() (*float32, bool) {
	if o == nil || o.MinimumEarningsGrowth == nil {
		return nil, false
	}
	return o.MinimumEarningsGrowth, true
}

// HasMinimumEarningsGrowth returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasMinimumEarningsGrowth() bool {
	if o != nil && o.MinimumEarningsGrowth != nil {
		return true
	}

	return false
}

// SetMinimumEarningsGrowth gets a reference to the given float32 and assigns it to the MinimumEarningsGrowth field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetMinimumEarningsGrowth(v float32) {
	o.MinimumEarningsGrowth = &v
}

// GetEarningsPerShareGrowthAnnual returns the EarningsPerShareGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowthAnnual() float32 {
	if o == nil || o.EarningsPerShareGrowthAnnual == nil {
		var ret float32
		return ret
	}
	return *o.EarningsPerShareGrowthAnnual
}

// GetEarningsPerShareGrowthAnnualOk returns a tuple with the EarningsPerShareGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEarningsPerShareGrowthAnnualOk() (*float32, bool) {
	if o == nil || o.EarningsPerShareGrowthAnnual == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowthAnnual, true
}

// HasEarningsPerShareGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEarningsPerShareGrowthAnnual() bool {
	if o != nil && o.EarningsPerShareGrowthAnnual != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowthAnnual gets a reference to the given float32 and assigns it to the EarningsPerShareGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEarningsPerShareGrowthAnnual(v float32) {
	o.EarningsPerShareGrowthAnnual = &v
}

// GetRevenueGrowthAnnual returns the RevenueGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowthAnnual() float32 {
	if o == nil || o.RevenueGrowthAnnual == nil {
		var ret float32
		return ret
	}
	return *o.RevenueGrowthAnnual
}

// GetRevenueGrowthAnnualOk returns a tuple with the RevenueGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetRevenueGrowthAnnualOk() (*float32, bool) {
	if o == nil || o.RevenueGrowthAnnual == nil {
		return nil, false
	}
	return o.RevenueGrowthAnnual, true
}

// HasRevenueGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasRevenueGrowthAnnual() bool {
	if o != nil && o.RevenueGrowthAnnual != nil {
		return true
	}

	return false
}

// SetRevenueGrowthAnnual gets a reference to the given float32 and assigns it to the RevenueGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetRevenueGrowthAnnual(v float32) {
	o.RevenueGrowthAnnual = &v
}

// GetCashOpsGrowthAnnual returns the CashOpsGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowthAnnual() float32 {
	if o == nil || o.CashOpsGrowthAnnual == nil {
		var ret float32
		return ret
	}
	return *o.CashOpsGrowthAnnual
}

// GetCashOpsGrowthAnnualOk returns a tuple with the CashOpsGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetCashOpsGrowthAnnualOk() (*float32, bool) {
	if o == nil || o.CashOpsGrowthAnnual == nil {
		return nil, false
	}
	return o.CashOpsGrowthAnnual, true
}

// HasCashOpsGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasCashOpsGrowthAnnual() bool {
	if o != nil && o.CashOpsGrowthAnnual != nil {
		return true
	}

	return false
}

// SetCashOpsGrowthAnnual gets a reference to the given float32 and assigns it to the CashOpsGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetCashOpsGrowthAnnual(v float32) {
	o.CashOpsGrowthAnnual = &v
}

// GetNetIncomeGrowthAnnual returns the NetIncomeGrowthAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowthAnnual() float32 {
	if o == nil || o.NetIncomeGrowthAnnual == nil {
		var ret float32
		return ret
	}
	return *o.NetIncomeGrowthAnnual
}

// GetNetIncomeGrowthAnnualOk returns a tuple with the NetIncomeGrowthAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeGrowthAnnualOk() (*float32, bool) {
	if o == nil || o.NetIncomeGrowthAnnual == nil {
		return nil, false
	}
	return o.NetIncomeGrowthAnnual, true
}

// HasNetIncomeGrowthAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncomeGrowthAnnual() bool {
	if o != nil && o.NetIncomeGrowthAnnual != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowthAnnual gets a reference to the given float32 and assigns it to the NetIncomeGrowthAnnual field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncomeGrowthAnnual(v float32) {
	o.NetIncomeGrowthAnnual = &v
}

// GetEbitda1y returns the Ebitda1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEbitda1y() float32 {
	if o == nil || o.Ebitda1y == nil {
		var ret float32
		return ret
	}
	return *o.Ebitda1y
}

// GetEbitda1yOk returns a tuple with the Ebitda1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEbitda1yOk() (*float32, bool) {
	if o == nil || o.Ebitda1y == nil {
		return nil, false
	}
	return o.Ebitda1y, true
}

// HasEbitda1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEbitda1y() bool {
	if o != nil && o.Ebitda1y != nil {
		return true
	}

	return false
}

// SetEbitda1y gets a reference to the given float32 and assigns it to the Ebitda1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEbitda1y(v float32) {
	o.Ebitda1y = &v
}

// GetEbitdaGrowth1y returns the EbitdaGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEbitdaGrowth1y() float32 {
	if o == nil || o.EbitdaGrowth1y == nil {
		var ret float32
		return ret
	}
	return *o.EbitdaGrowth1y
}

// GetEbitdaGrowth1yOk returns a tuple with the EbitdaGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetEbitdaGrowth1yOk() (*float32, bool) {
	if o == nil || o.EbitdaGrowth1y == nil {
		return nil, false
	}
	return o.EbitdaGrowth1y, true
}

// HasEbitdaGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasEbitdaGrowth1y() bool {
	if o != nil && o.EbitdaGrowth1y != nil {
		return true
	}

	return false
}

// SetEbitdaGrowth1y gets a reference to the given float32 and assigns it to the EbitdaGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetEbitdaGrowth1y(v float32) {
	o.EbitdaGrowth1y = &v
}

// GetForwardPe1y returns the ForwardPe1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardPe1y() float32 {
	if o == nil || o.ForwardPe1y == nil {
		var ret float32
		return ret
	}
	return *o.ForwardPe1y
}

// GetForwardPe1yOk returns a tuple with the ForwardPe1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardPe1yOk() (*float32, bool) {
	if o == nil || o.ForwardPe1y == nil {
		return nil, false
	}
	return o.ForwardPe1y, true
}

// HasForwardPe1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasForwardPe1y() bool {
	if o != nil && o.ForwardPe1y != nil {
		return true
	}

	return false
}

// SetForwardPe1y gets a reference to the given float32 and assigns it to the ForwardPe1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetForwardPe1y(v float32) {
	o.ForwardPe1y = &v
}

// GetForwardPriceToSales1y returns the ForwardPriceToSales1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardPriceToSales1y() float32 {
	if o == nil || o.ForwardPriceToSales1y == nil {
		var ret float32
		return ret
	}
	return *o.ForwardPriceToSales1y
}

// GetForwardPriceToSales1yOk returns a tuple with the ForwardPriceToSales1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardPriceToSales1yOk() (*float32, bool) {
	if o == nil || o.ForwardPriceToSales1y == nil {
		return nil, false
	}
	return o.ForwardPriceToSales1y, true
}

// HasForwardPriceToSales1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasForwardPriceToSales1y() bool {
	if o != nil && o.ForwardPriceToSales1y != nil {
		return true
	}

	return false
}

// SetForwardPriceToSales1y gets a reference to the given float32 and assigns it to the ForwardPriceToSales1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetForwardPriceToSales1y(v float32) {
	o.ForwardPriceToSales1y = &v
}

// GetForwardEvToEbitda1y returns the ForwardEvToEbitda1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardEvToEbitda1y() float32 {
	if o == nil || o.ForwardEvToEbitda1y == nil {
		var ret float32
		return ret
	}
	return *o.ForwardEvToEbitda1y
}

// GetForwardEvToEbitda1yOk returns a tuple with the ForwardEvToEbitda1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardEvToEbitda1yOk() (*float32, bool) {
	if o == nil || o.ForwardEvToEbitda1y == nil {
		return nil, false
	}
	return o.ForwardEvToEbitda1y, true
}

// HasForwardEvToEbitda1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasForwardEvToEbitda1y() bool {
	if o != nil && o.ForwardEvToEbitda1y != nil {
		return true
	}

	return false
}

// SetForwardEvToEbitda1y gets a reference to the given float32 and assigns it to the ForwardEvToEbitda1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetForwardEvToEbitda1y(v float32) {
	o.ForwardEvToEbitda1y = &v
}

// GetForwardEvToSales1y returns the ForwardEvToSales1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardEvToSales1y() float32 {
	if o == nil || o.ForwardEvToSales1y == nil {
		var ret float32
		return ret
	}
	return *o.ForwardEvToSales1y
}

// GetForwardEvToSales1yOk returns a tuple with the ForwardEvToSales1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetForwardEvToSales1yOk() (*float32, bool) {
	if o == nil || o.ForwardEvToSales1y == nil {
		return nil, false
	}
	return o.ForwardEvToSales1y, true
}

// HasForwardEvToSales1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasForwardEvToSales1y() bool {
	if o != nil && o.ForwardEvToSales1y != nil {
		return true
	}

	return false
}

// SetForwardEvToSales1y gets a reference to the given float32 and assigns it to the ForwardEvToSales1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetForwardEvToSales1y(v float32) {
	o.ForwardEvToSales1y = &v
}

// GetGrossProfitMargin1y returns the GrossProfitMargin1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetGrossProfitMargin1y() float32 {
	if o == nil || o.GrossProfitMargin1y == nil {
		var ret float32
		return ret
	}
	return *o.GrossProfitMargin1y
}

// GetGrossProfitMargin1yOk returns a tuple with the GrossProfitMargin1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetGrossProfitMargin1yOk() (*float32, bool) {
	if o == nil || o.GrossProfitMargin1y == nil {
		return nil, false
	}
	return o.GrossProfitMargin1y, true
}

// HasGrossProfitMargin1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasGrossProfitMargin1y() bool {
	if o != nil && o.GrossProfitMargin1y != nil {
		return true
	}

	return false
}

// SetGrossProfitMargin1y gets a reference to the given float32 and assigns it to the GrossProfitMargin1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetGrossProfitMargin1y(v float32) {
	o.GrossProfitMargin1y = &v
}

// GetNetIncomeMargin1y returns the NetIncomeMargin1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeMargin1y() float32 {
	if o == nil || o.NetIncomeMargin1y == nil {
		var ret float32
		return ret
	}
	return *o.NetIncomeMargin1y
}

// GetNetIncomeMargin1yOk returns a tuple with the NetIncomeMargin1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) GetNetIncomeMargin1yOk() (*float32, bool) {
	if o == nil || o.NetIncomeMargin1y == nil {
		return nil, false
	}
	return o.NetIncomeMargin1y, true
}

// HasNetIncomeMargin1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisFuture) HasNetIncomeMargin1y() bool {
	if o != nil && o.NetIncomeMargin1y != nil {
		return true
	}

	return false
}

// SetNetIncomeMargin1y gets a reference to the given float32 and assigns it to the NetIncomeMargin1y field.
func (o *CompanyAnalysisExtendedAnalysisFuture) SetNetIncomeMargin1y(v float32) {
	o.NetIncomeMargin1y = &v
}

func (o CompanyAnalysisExtendedAnalysisFuture) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReturnOnEquity1y != nil {
		toSerialize["return_on_equity_1y"] = o.ReturnOnEquity1y
	}
	if o.ReturnOnEquity3y != nil {
		toSerialize["return_on_equity_3y"] = o.ReturnOnEquity3y
	}
	if o.EarningsPerShareGrowth1y != nil {
		toSerialize["earnings_per_share_growth_1y"] = o.EarningsPerShareGrowth1y
	}
	if o.EarningsPerShareGrowth3y != nil {
		toSerialize["earnings_per_share_growth_3y"] = o.EarningsPerShareGrowth3y
	}
	if o.EarningsPerShare1y != nil {
		toSerialize["earnings_per_share_1y"] = o.EarningsPerShare1y
	}
	if o.EarningsPerShare2y != nil {
		toSerialize["earnings_per_share_2y"] = o.EarningsPerShare2y
	}
	if o.EarningsPerShare3y != nil {
		toSerialize["earnings_per_share_3y"] = o.EarningsPerShare3y
	}
	if o.RevenueGrowth1y != nil {
		toSerialize["revenue_growth_1y"] = o.RevenueGrowth1y
	}
	if o.RevenueGrowth2y != nil {
		toSerialize["revenue_growth_2y"] = o.RevenueGrowth2y
	}
	if o.RevenueGrowth3y != nil {
		toSerialize["revenue_growth_3y"] = o.RevenueGrowth3y
	}
	if o.Revenue1y != nil {
		toSerialize["revenue_1y"] = o.Revenue1y
	}
	if o.Revenue2y != nil {
		toSerialize["revenue_2y"] = o.Revenue2y
	}
	if o.Revenue3y != nil {
		toSerialize["revenue_3y"] = o.Revenue3y
	}
	if o.CashOpsGrowth1y != nil {
		toSerialize["cash_ops_growth_1y"] = o.CashOpsGrowth1y
	}
	if o.CashOpsGrowth2y != nil {
		toSerialize["cash_ops_growth_2y"] = o.CashOpsGrowth2y
	}
	if o.CashOpsGrowth3y != nil {
		toSerialize["cash_ops_growth_3y"] = o.CashOpsGrowth3y
	}
	if o.CashOps1y != nil {
		toSerialize["cash_ops_1y"] = o.CashOps1y
	}
	if o.CashOps2y != nil {
		toSerialize["cash_ops_2y"] = o.CashOps2y
	}
	if o.CashOps3y != nil {
		toSerialize["cash_ops_3y"] = o.CashOps3y
	}
	if o.NetIncomeGrowth1y != nil {
		toSerialize["net_income_growth_1y"] = o.NetIncomeGrowth1y
	}
	if o.NetIncomeGrowth2y != nil {
		toSerialize["net_income_growth_2y"] = o.NetIncomeGrowth2y
	}
	if o.NetIncomeGrowth3y != nil {
		toSerialize["net_income_growth_3y"] = o.NetIncomeGrowth3y
	}
	if o.NetIncome1y != nil {
		toSerialize["net_income_1y"] = o.NetIncome1y
	}
	if o.NetIncome2y != nil {
		toSerialize["net_income_2y"] = o.NetIncome2y
	}
	if o.NetIncome3y != nil {
		toSerialize["net_income_3y"] = o.NetIncome3y
	}
	if o.MinimumEarningsGrowth != nil {
		toSerialize["minimum_earnings_growth"] = o.MinimumEarningsGrowth
	}
	if o.EarningsPerShareGrowthAnnual != nil {
		toSerialize["earnings_per_share_growth_annual"] = o.EarningsPerShareGrowthAnnual
	}
	if o.RevenueGrowthAnnual != nil {
		toSerialize["revenue_growth_annual"] = o.RevenueGrowthAnnual
	}
	if o.CashOpsGrowthAnnual != nil {
		toSerialize["cash_ops_growth_annual"] = o.CashOpsGrowthAnnual
	}
	if o.NetIncomeGrowthAnnual != nil {
		toSerialize["net_income_growth_annual"] = o.NetIncomeGrowthAnnual
	}
	if o.Ebitda1y != nil {
		toSerialize["ebitda_1y"] = o.Ebitda1y
	}
	if o.EbitdaGrowth1y != nil {
		toSerialize["ebitda_growth_1y"] = o.EbitdaGrowth1y
	}
	if o.ForwardPe1y != nil {
		toSerialize["forward_pe_1y"] = o.ForwardPe1y
	}
	if o.ForwardPriceToSales1y != nil {
		toSerialize["forward_price_to_sales_1y"] = o.ForwardPriceToSales1y
	}
	if o.ForwardEvToEbitda1y != nil {
		toSerialize["forward_ev_to_ebitda_1y"] = o.ForwardEvToEbitda1y
	}
	if o.ForwardEvToSales1y != nil {
		toSerialize["forward_ev_to_sales_1y"] = o.ForwardEvToSales1y
	}
	if o.GrossProfitMargin1y != nil {
		toSerialize["gross_profit_margin_1y"] = o.GrossProfitMargin1y
	}
	if o.NetIncomeMargin1y != nil {
		toSerialize["net_income_margin_1y"] = o.NetIncomeMargin1y
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedAnalysisFuture struct {
	value *CompanyAnalysisExtendedAnalysisFuture
	isSet bool
}

func (v NullableCompanyAnalysisExtendedAnalysisFuture) Get() *CompanyAnalysisExtendedAnalysisFuture {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedAnalysisFuture) Set(val *CompanyAnalysisExtendedAnalysisFuture) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedAnalysisFuture) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedAnalysisFuture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedAnalysisFuture(val *CompanyAnalysisExtendedAnalysisFuture) *NullableCompanyAnalysisExtendedAnalysisFuture {
	return &NullableCompanyAnalysisExtendedAnalysisFuture{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedAnalysisFuture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedAnalysisFuture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
