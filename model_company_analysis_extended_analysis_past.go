/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyAnalysisExtendedAnalysisPast struct for CompanyAnalysisExtendedAnalysisPast
type CompanyAnalysisExtendedAnalysisPast struct {
	Revenue                        *float64 `json:"revenue,omitempty"`
	OperatingRevenue               *float64 `json:"operating_revenue,omitempty"`
	NetIncome                      *float64 `json:"net_income,omitempty"`
	EarningsPerShare               *float64 `json:"earnings_per_share,omitempty"`
	EarningsPerShare1y             *float64 `json:"earnings_per_share_1y,omitempty"`
	EarningsPerShare3y             *float64 `json:"earnings_per_share_3y,omitempty"`
	EarningsPerShare5y             *float64 `json:"earnings_per_share_5y,omitempty"`
	EarningsPerShare5yAvg          *float64 `json:"earnings_per_share_5y_avg,omitempty"`
	EbtExcluding                   *float64 `json:"ebt_excluding,omitempty"`
	EarningsContinuedOps           *float64 `json:"earnings_continued_ops,omitempty"`
	TotalAssets                    *float64 `json:"total_assets,omitempty"`
	TotalEquity                    *float64 `json:"total_equity,omitempty"`
	CurrentLiabilities             *float64 `json:"current_liabilities,omitempty"`
	ReturnOnEquity                 *float64 `json:"return_on_equity,omitempty"`
	ReturnOnAssets                 *float64 `json:"return_on_assets,omitempty"`
	ReturnOnCapitalEmployed        *float64 `json:"return_on_capital_employed,omitempty"`
	ReturnOnCapitalEmployedPast    *float64 `json:"return_on_capital_employed_past,omitempty"`
	ReturnOnCapitalGrowth          *float64 `json:"return_on_capital_growth,omitempty"`
	EarningsPerShareGrowth1y       *float64 `json:"earnings_per_share_growth_1y,omitempty"`
	EarningsPerShareGrowth2y       *float64 `json:"earnings_per_share_growth_2y,omitempty"`
	EarningsPerShareGrowth3y       *float64 `json:"earnings_per_share_growth_3y,omitempty"`
	NetIncome1y                    *float64 `json:"net_income_1y,omitempty"`
	NetIncome2y                    *float64 `json:"net_income_2y,omitempty"`
	NetIncome3y                    *float64 `json:"net_income_3y,omitempty"`
	NetIncome4y                    *float64 `json:"net_income_4y,omitempty"`
	NetIncome5y                    *float64 `json:"net_income_5y,omitempty"`
	NetIncome5yAvg                 *float64 `json:"net_income_5y_avg,omitempty"`
	NetIncomeGrowth1y              *float64 `json:"net_income_growth_1y,omitempty"`
	NetIncomeGrowth3y              *float64 `json:"net_income_growth_3y,omitempty"`
	NetIncomeGrowth5y              *float64 `json:"net_income_growth_5y,omitempty"`
	RevenueGrowth1y                *float64 `json:"revenue_growth_1y,omitempty"`
	RevenueGrowth3y                *float64 `json:"revenue_growth_3y,omitempty"`
	RevenueGrowth5y                *float64 `json:"revenue_growth_5y,omitempty"`
	DaysSinceLastUpdate            *int64   `json:"days_since_last_update,omitempty"`
	LastEarningsUpdate             *int64   `json:"last_earnings_update,omitempty"`
	LastEarningsUpdateAnnual       *int64   `json:"last_earnings_update_annual,omitempty"`
	Ebit                           *float64 `json:"ebit,omitempty"`
	Ebit3yAvg                      *float64 `json:"ebit_3y_avg,omitempty"`
	Ebit5yAvg                      *float64 `json:"ebit_5y_avg,omitempty"`
	EbitSingleGrowth1y             *float64 `json:"ebit_single_growth_1y,omitempty"`
	EbitSingleGrowth3y             *float64 `json:"ebit_single_growth_3y,omitempty"`
	EbitSingleGrowth5y             *float64 `json:"ebit_single_growth_5y,omitempty"`
	EbitMargin1y                   *float64 `json:"ebit_margin_1y,omitempty"`
	EbitMargin                     *float64 `json:"ebit_margin,omitempty"`
	Ebitda                         *float64 `json:"ebitda,omitempty"`
	EbitdaMargin                   *float64 `json:"ebitda_margin,omitempty"`
	GrossProfitMargin              *float64 `json:"gross_profit_margin,omitempty"`
	NetIncomeSingleGrowth3y        *float64 `json:"net_income_single_growth_3y,omitempty"`
	NetIncomeSingleGrowth5y        *float64 `json:"net_income_single_growth_5y,omitempty"`
	EarningsPerShareSingleGrowth3y *float64 `json:"earnings_per_share_single_growth_3y,omitempty"`
	EarningsPerShareSingleGrowth5y *float64 `json:"earnings_per_share_single_growth_5y,omitempty"`
	GrossProfitMargin1y            *float64 `json:"gross_profit_margin_1y,omitempty"`
	NetIncomeMargin                *float64 `json:"net_income_margin,omitempty"`
	NetIncomeMargin1y              *float64 `json:"net_income_margin_1y,omitempty"`
	ChangeInUnearnedRevenue        *float64 `json:"change_in_unearned_revenue,omitempty"`
	UnearnedRevenuePercentOfSales  *float64 `json:"unearned_revenue_percent_of_sales,omitempty"`
	EbtIncluding                   *float64 `json:"ebt_including,omitempty"`
	UnusualItems                   *float64 `json:"unusual_items,omitempty"`
	UnusualItemRatio               *float64 `json:"unusual_item_ratio,omitempty"`
	OperatingRevenuePercent        *float64 `json:"operating_revenue_percent,omitempty"`
	YearsProfitable                *float64 `json:"years_profitable,omitempty"`
	TradingSinceYears              *float64 `json:"trading_since_years,omitempty"`
	NonOperatingRevenue            *float64 `json:"non_operating_revenue,omitempty"`
	NonOperatingRevenueRatio       *float64 `json:"non_operating_revenue_ratio,omitempty"`
	NonOperatingRevenueRatio1y     *float64 `json:"non_operating_revenue_ratio_1y,omitempty"`
	NonOperatingRevenueRatioDelta  *float64 `json:"non_operating_revenue_ratio_delta,omitempty"`
	IncomeTaxToEbitRatio           *float64 `json:"income_tax_to_ebit_ratio,omitempty"`
	LatestFiscalYear               *int64   `json:"latest_fiscal_year,omitempty"`
	LatestFiscalQuarter            *int64   `json:"latest_fiscal_quarter,omitempty"`
}

// NewCompanyAnalysisExtendedAnalysisPast instantiates a new CompanyAnalysisExtendedAnalysisPast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAnalysisExtendedAnalysisPast() *CompanyAnalysisExtendedAnalysisPast {
	this := CompanyAnalysisExtendedAnalysisPast{}
	return &this
}

// NewCompanyAnalysisExtendedAnalysisPastWithDefaults instantiates a new CompanyAnalysisExtendedAnalysisPast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAnalysisExtendedAnalysisPastWithDefaults() *CompanyAnalysisExtendedAnalysisPast {
	this := CompanyAnalysisExtendedAnalysisPast{}
	return &this
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenue() float64 {
	if o == nil || o.Revenue == nil {
		var ret float64
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueOk() (*float64, bool) {
	if o == nil || o.Revenue == nil {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasRevenue() bool {
	if o != nil && o.Revenue != nil {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given float64 and assigns it to the Revenue field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetRevenue(v float64) {
	o.Revenue = &v
}

// GetOperatingRevenue returns the OperatingRevenue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetOperatingRevenue() float64 {
	if o == nil || o.OperatingRevenue == nil {
		var ret float64
		return ret
	}
	return *o.OperatingRevenue
}

// GetOperatingRevenueOk returns a tuple with the OperatingRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetOperatingRevenueOk() (*float64, bool) {
	if o == nil || o.OperatingRevenue == nil {
		return nil, false
	}
	return o.OperatingRevenue, true
}

// HasOperatingRevenue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasOperatingRevenue() bool {
	if o != nil && o.OperatingRevenue != nil {
		return true
	}

	return false
}

// SetOperatingRevenue gets a reference to the given float64 and assigns it to the OperatingRevenue field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetOperatingRevenue(v float64) {
	o.OperatingRevenue = &v
}

// GetNetIncome returns the NetIncome field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome() float64 {
	if o == nil || o.NetIncome == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome
}

// GetNetIncomeOk returns a tuple with the NetIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeOk() (*float64, bool) {
	if o == nil || o.NetIncome == nil {
		return nil, false
	}
	return o.NetIncome, true
}

// HasNetIncome returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome() bool {
	if o != nil && o.NetIncome != nil {
		return true
	}

	return false
}

// SetNetIncome gets a reference to the given float64 and assigns it to the NetIncome field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome(v float64) {
	o.NetIncome = &v
}

// GetEarningsPerShare returns the EarningsPerShare field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare() float64 {
	if o == nil || o.EarningsPerShare == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShare
}

// GetEarningsPerShareOk returns a tuple with the EarningsPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareOk() (*float64, bool) {
	if o == nil || o.EarningsPerShare == nil {
		return nil, false
	}
	return o.EarningsPerShare, true
}

// HasEarningsPerShare returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShare() bool {
	if o != nil && o.EarningsPerShare != nil {
		return true
	}

	return false
}

// SetEarningsPerShare gets a reference to the given float64 and assigns it to the EarningsPerShare field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShare(v float64) {
	o.EarningsPerShare = &v
}

// GetEarningsPerShare1y returns the EarningsPerShare1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare1y() float64 {
	if o == nil || o.EarningsPerShare1y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShare1y
}

// GetEarningsPerShare1yOk returns a tuple with the EarningsPerShare1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare1yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShare1y == nil {
		return nil, false
	}
	return o.EarningsPerShare1y, true
}

// HasEarningsPerShare1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShare1y() bool {
	if o != nil && o.EarningsPerShare1y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare1y gets a reference to the given float64 and assigns it to the EarningsPerShare1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShare1y(v float64) {
	o.EarningsPerShare1y = &v
}

// GetEarningsPerShare3y returns the EarningsPerShare3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare3y() float64 {
	if o == nil || o.EarningsPerShare3y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShare3y
}

// GetEarningsPerShare3yOk returns a tuple with the EarningsPerShare3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare3yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShare3y == nil {
		return nil, false
	}
	return o.EarningsPerShare3y, true
}

// HasEarningsPerShare3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShare3y() bool {
	if o != nil && o.EarningsPerShare3y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare3y gets a reference to the given float64 and assigns it to the EarningsPerShare3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShare3y(v float64) {
	o.EarningsPerShare3y = &v
}

// GetEarningsPerShare5y returns the EarningsPerShare5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare5y() float64 {
	if o == nil || o.EarningsPerShare5y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShare5y
}

// GetEarningsPerShare5yOk returns a tuple with the EarningsPerShare5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare5yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShare5y == nil {
		return nil, false
	}
	return o.EarningsPerShare5y, true
}

// HasEarningsPerShare5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShare5y() bool {
	if o != nil && o.EarningsPerShare5y != nil {
		return true
	}

	return false
}

// SetEarningsPerShare5y gets a reference to the given float64 and assigns it to the EarningsPerShare5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShare5y(v float64) {
	o.EarningsPerShare5y = &v
}

// GetEarningsPerShare5yAvg returns the EarningsPerShare5yAvg field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare5yAvg() float64 {
	if o == nil || o.EarningsPerShare5yAvg == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShare5yAvg
}

// GetEarningsPerShare5yAvgOk returns a tuple with the EarningsPerShare5yAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShare5yAvgOk() (*float64, bool) {
	if o == nil || o.EarningsPerShare5yAvg == nil {
		return nil, false
	}
	return o.EarningsPerShare5yAvg, true
}

// HasEarningsPerShare5yAvg returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShare5yAvg() bool {
	if o != nil && o.EarningsPerShare5yAvg != nil {
		return true
	}

	return false
}

// SetEarningsPerShare5yAvg gets a reference to the given float64 and assigns it to the EarningsPerShare5yAvg field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShare5yAvg(v float64) {
	o.EarningsPerShare5yAvg = &v
}

// GetEbtExcluding returns the EbtExcluding field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbtExcluding() float64 {
	if o == nil || o.EbtExcluding == nil {
		var ret float64
		return ret
	}
	return *o.EbtExcluding
}

// GetEbtExcludingOk returns a tuple with the EbtExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbtExcludingOk() (*float64, bool) {
	if o == nil || o.EbtExcluding == nil {
		return nil, false
	}
	return o.EbtExcluding, true
}

// HasEbtExcluding returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbtExcluding() bool {
	if o != nil && o.EbtExcluding != nil {
		return true
	}

	return false
}

// SetEbtExcluding gets a reference to the given float64 and assigns it to the EbtExcluding field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbtExcluding(v float64) {
	o.EbtExcluding = &v
}

// GetEarningsContinuedOps returns the EarningsContinuedOps field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsContinuedOps() float64 {
	if o == nil || o.EarningsContinuedOps == nil {
		var ret float64
		return ret
	}
	return *o.EarningsContinuedOps
}

// GetEarningsContinuedOpsOk returns a tuple with the EarningsContinuedOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsContinuedOpsOk() (*float64, bool) {
	if o == nil || o.EarningsContinuedOps == nil {
		return nil, false
	}
	return o.EarningsContinuedOps, true
}

// HasEarningsContinuedOps returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsContinuedOps() bool {
	if o != nil && o.EarningsContinuedOps != nil {
		return true
	}

	return false
}

// SetEarningsContinuedOps gets a reference to the given float64 and assigns it to the EarningsContinuedOps field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsContinuedOps(v float64) {
	o.EarningsContinuedOps = &v
}

// GetTotalAssets returns the TotalAssets field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTotalAssets() float64 {
	if o == nil || o.TotalAssets == nil {
		var ret float64
		return ret
	}
	return *o.TotalAssets
}

// GetTotalAssetsOk returns a tuple with the TotalAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTotalAssetsOk() (*float64, bool) {
	if o == nil || o.TotalAssets == nil {
		return nil, false
	}
	return o.TotalAssets, true
}

// HasTotalAssets returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasTotalAssets() bool {
	if o != nil && o.TotalAssets != nil {
		return true
	}

	return false
}

// SetTotalAssets gets a reference to the given float64 and assigns it to the TotalAssets field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetTotalAssets(v float64) {
	o.TotalAssets = &v
}

// GetTotalEquity returns the TotalEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTotalEquity() float64 {
	if o == nil || o.TotalEquity == nil {
		var ret float64
		return ret
	}
	return *o.TotalEquity
}

// GetTotalEquityOk returns a tuple with the TotalEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTotalEquityOk() (*float64, bool) {
	if o == nil || o.TotalEquity == nil {
		return nil, false
	}
	return o.TotalEquity, true
}

// HasTotalEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasTotalEquity() bool {
	if o != nil && o.TotalEquity != nil {
		return true
	}

	return false
}

// SetTotalEquity gets a reference to the given float64 and assigns it to the TotalEquity field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetTotalEquity(v float64) {
	o.TotalEquity = &v
}

// GetCurrentLiabilities returns the CurrentLiabilities field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetCurrentLiabilities() float64 {
	if o == nil || o.CurrentLiabilities == nil {
		var ret float64
		return ret
	}
	return *o.CurrentLiabilities
}

// GetCurrentLiabilitiesOk returns a tuple with the CurrentLiabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetCurrentLiabilitiesOk() (*float64, bool) {
	if o == nil || o.CurrentLiabilities == nil {
		return nil, false
	}
	return o.CurrentLiabilities, true
}

// HasCurrentLiabilities returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasCurrentLiabilities() bool {
	if o != nil && o.CurrentLiabilities != nil {
		return true
	}

	return false
}

// SetCurrentLiabilities gets a reference to the given float64 and assigns it to the CurrentLiabilities field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetCurrentLiabilities(v float64) {
	o.CurrentLiabilities = &v
}

// GetReturnOnEquity returns the ReturnOnEquity field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnEquity() float64 {
	if o == nil || o.ReturnOnEquity == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnEquity
}

// GetReturnOnEquityOk returns a tuple with the ReturnOnEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnEquityOk() (*float64, bool) {
	if o == nil || o.ReturnOnEquity == nil {
		return nil, false
	}
	return o.ReturnOnEquity, true
}

// HasReturnOnEquity returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasReturnOnEquity() bool {
	if o != nil && o.ReturnOnEquity != nil {
		return true
	}

	return false
}

// SetReturnOnEquity gets a reference to the given float64 and assigns it to the ReturnOnEquity field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetReturnOnEquity(v float64) {
	o.ReturnOnEquity = &v
}

// GetReturnOnAssets returns the ReturnOnAssets field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnAssets() float64 {
	if o == nil || o.ReturnOnAssets == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnAssets
}

// GetReturnOnAssetsOk returns a tuple with the ReturnOnAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnAssetsOk() (*float64, bool) {
	if o == nil || o.ReturnOnAssets == nil {
		return nil, false
	}
	return o.ReturnOnAssets, true
}

// HasReturnOnAssets returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasReturnOnAssets() bool {
	if o != nil && o.ReturnOnAssets != nil {
		return true
	}

	return false
}

// SetReturnOnAssets gets a reference to the given float64 and assigns it to the ReturnOnAssets field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetReturnOnAssets(v float64) {
	o.ReturnOnAssets = &v
}

// GetReturnOnCapitalEmployed returns the ReturnOnCapitalEmployed field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalEmployed() float64 {
	if o == nil || o.ReturnOnCapitalEmployed == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnCapitalEmployed
}

// GetReturnOnCapitalEmployedOk returns a tuple with the ReturnOnCapitalEmployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalEmployedOk() (*float64, bool) {
	if o == nil || o.ReturnOnCapitalEmployed == nil {
		return nil, false
	}
	return o.ReturnOnCapitalEmployed, true
}

// HasReturnOnCapitalEmployed returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasReturnOnCapitalEmployed() bool {
	if o != nil && o.ReturnOnCapitalEmployed != nil {
		return true
	}

	return false
}

// SetReturnOnCapitalEmployed gets a reference to the given float64 and assigns it to the ReturnOnCapitalEmployed field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetReturnOnCapitalEmployed(v float64) {
	o.ReturnOnCapitalEmployed = &v
}

// GetReturnOnCapitalEmployedPast returns the ReturnOnCapitalEmployedPast field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalEmployedPast() float64 {
	if o == nil || o.ReturnOnCapitalEmployedPast == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnCapitalEmployedPast
}

// GetReturnOnCapitalEmployedPastOk returns a tuple with the ReturnOnCapitalEmployedPast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalEmployedPastOk() (*float64, bool) {
	if o == nil || o.ReturnOnCapitalEmployedPast == nil {
		return nil, false
	}
	return o.ReturnOnCapitalEmployedPast, true
}

// HasReturnOnCapitalEmployedPast returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasReturnOnCapitalEmployedPast() bool {
	if o != nil && o.ReturnOnCapitalEmployedPast != nil {
		return true
	}

	return false
}

// SetReturnOnCapitalEmployedPast gets a reference to the given float64 and assigns it to the ReturnOnCapitalEmployedPast field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetReturnOnCapitalEmployedPast(v float64) {
	o.ReturnOnCapitalEmployedPast = &v
}

// GetReturnOnCapitalGrowth returns the ReturnOnCapitalGrowth field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalGrowth() float64 {
	if o == nil || o.ReturnOnCapitalGrowth == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnCapitalGrowth
}

// GetReturnOnCapitalGrowthOk returns a tuple with the ReturnOnCapitalGrowth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetReturnOnCapitalGrowthOk() (*float64, bool) {
	if o == nil || o.ReturnOnCapitalGrowth == nil {
		return nil, false
	}
	return o.ReturnOnCapitalGrowth, true
}

// HasReturnOnCapitalGrowth returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasReturnOnCapitalGrowth() bool {
	if o != nil && o.ReturnOnCapitalGrowth != nil {
		return true
	}

	return false
}

// SetReturnOnCapitalGrowth gets a reference to the given float64 and assigns it to the ReturnOnCapitalGrowth field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetReturnOnCapitalGrowth(v float64) {
	o.ReturnOnCapitalGrowth = &v
}

// GetEarningsPerShareGrowth1y returns the EarningsPerShareGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth1y() float64 {
	if o == nil || o.EarningsPerShareGrowth1y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShareGrowth1y
}

// GetEarningsPerShareGrowth1yOk returns a tuple with the EarningsPerShareGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth1yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShareGrowth1y == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowth1y, true
}

// HasEarningsPerShareGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShareGrowth1y() bool {
	if o != nil && o.EarningsPerShareGrowth1y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowth1y gets a reference to the given float64 and assigns it to the EarningsPerShareGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShareGrowth1y(v float64) {
	o.EarningsPerShareGrowth1y = &v
}

// GetEarningsPerShareGrowth2y returns the EarningsPerShareGrowth2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth2y() float64 {
	if o == nil || o.EarningsPerShareGrowth2y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShareGrowth2y
}

// GetEarningsPerShareGrowth2yOk returns a tuple with the EarningsPerShareGrowth2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth2yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShareGrowth2y == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowth2y, true
}

// HasEarningsPerShareGrowth2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShareGrowth2y() bool {
	if o != nil && o.EarningsPerShareGrowth2y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowth2y gets a reference to the given float64 and assigns it to the EarningsPerShareGrowth2y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShareGrowth2y(v float64) {
	o.EarningsPerShareGrowth2y = &v
}

// GetEarningsPerShareGrowth3y returns the EarningsPerShareGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth3y() float64 {
	if o == nil || o.EarningsPerShareGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShareGrowth3y
}

// GetEarningsPerShareGrowth3yOk returns a tuple with the EarningsPerShareGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareGrowth3yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShareGrowth3y == nil {
		return nil, false
	}
	return o.EarningsPerShareGrowth3y, true
}

// HasEarningsPerShareGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShareGrowth3y() bool {
	if o != nil && o.EarningsPerShareGrowth3y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareGrowth3y gets a reference to the given float64 and assigns it to the EarningsPerShareGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShareGrowth3y(v float64) {
	o.EarningsPerShareGrowth3y = &v
}

// GetNetIncome1y returns the NetIncome1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome1y() float64 {
	if o == nil || o.NetIncome1y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome1y
}

// GetNetIncome1yOk returns a tuple with the NetIncome1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome1yOk() (*float64, bool) {
	if o == nil || o.NetIncome1y == nil {
		return nil, false
	}
	return o.NetIncome1y, true
}

// HasNetIncome1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome1y() bool {
	if o != nil && o.NetIncome1y != nil {
		return true
	}

	return false
}

// SetNetIncome1y gets a reference to the given float64 and assigns it to the NetIncome1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome1y(v float64) {
	o.NetIncome1y = &v
}

// GetNetIncome2y returns the NetIncome2y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome2y() float64 {
	if o == nil || o.NetIncome2y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome2y
}

// GetNetIncome2yOk returns a tuple with the NetIncome2y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome2yOk() (*float64, bool) {
	if o == nil || o.NetIncome2y == nil {
		return nil, false
	}
	return o.NetIncome2y, true
}

// HasNetIncome2y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome2y() bool {
	if o != nil && o.NetIncome2y != nil {
		return true
	}

	return false
}

// SetNetIncome2y gets a reference to the given float64 and assigns it to the NetIncome2y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome2y(v float64) {
	o.NetIncome2y = &v
}

// GetNetIncome3y returns the NetIncome3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome3y() float64 {
	if o == nil || o.NetIncome3y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome3y
}

// GetNetIncome3yOk returns a tuple with the NetIncome3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome3yOk() (*float64, bool) {
	if o == nil || o.NetIncome3y == nil {
		return nil, false
	}
	return o.NetIncome3y, true
}

// HasNetIncome3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome3y() bool {
	if o != nil && o.NetIncome3y != nil {
		return true
	}

	return false
}

// SetNetIncome3y gets a reference to the given float64 and assigns it to the NetIncome3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome3y(v float64) {
	o.NetIncome3y = &v
}

// GetNetIncome4y returns the NetIncome4y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome4y() float64 {
	if o == nil || o.NetIncome4y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome4y
}

// GetNetIncome4yOk returns a tuple with the NetIncome4y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome4yOk() (*float64, bool) {
	if o == nil || o.NetIncome4y == nil {
		return nil, false
	}
	return o.NetIncome4y, true
}

// HasNetIncome4y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome4y() bool {
	if o != nil && o.NetIncome4y != nil {
		return true
	}

	return false
}

// SetNetIncome4y gets a reference to the given float64 and assigns it to the NetIncome4y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome4y(v float64) {
	o.NetIncome4y = &v
}

// GetNetIncome5y returns the NetIncome5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome5y() float64 {
	if o == nil || o.NetIncome5y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome5y
}

// GetNetIncome5yOk returns a tuple with the NetIncome5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome5yOk() (*float64, bool) {
	if o == nil || o.NetIncome5y == nil {
		return nil, false
	}
	return o.NetIncome5y, true
}

// HasNetIncome5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome5y() bool {
	if o != nil && o.NetIncome5y != nil {
		return true
	}

	return false
}

// SetNetIncome5y gets a reference to the given float64 and assigns it to the NetIncome5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome5y(v float64) {
	o.NetIncome5y = &v
}

// GetNetIncome5yAvg returns the NetIncome5yAvg field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome5yAvg() float64 {
	if o == nil || o.NetIncome5yAvg == nil {
		var ret float64
		return ret
	}
	return *o.NetIncome5yAvg
}

// GetNetIncome5yAvgOk returns a tuple with the NetIncome5yAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncome5yAvgOk() (*float64, bool) {
	if o == nil || o.NetIncome5yAvg == nil {
		return nil, false
	}
	return o.NetIncome5yAvg, true
}

// HasNetIncome5yAvg returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncome5yAvg() bool {
	if o != nil && o.NetIncome5yAvg != nil {
		return true
	}

	return false
}

// SetNetIncome5yAvg gets a reference to the given float64 and assigns it to the NetIncome5yAvg field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncome5yAvg(v float64) {
	o.NetIncome5yAvg = &v
}

// GetNetIncomeGrowth1y returns the NetIncomeGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth1y() float64 {
	if o == nil || o.NetIncomeGrowth1y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeGrowth1y
}

// GetNetIncomeGrowth1yOk returns a tuple with the NetIncomeGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth1yOk() (*float64, bool) {
	if o == nil || o.NetIncomeGrowth1y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth1y, true
}

// HasNetIncomeGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeGrowth1y() bool {
	if o != nil && o.NetIncomeGrowth1y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth1y gets a reference to the given float64 and assigns it to the NetIncomeGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeGrowth1y(v float64) {
	o.NetIncomeGrowth1y = &v
}

// GetNetIncomeGrowth3y returns the NetIncomeGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth3y() float64 {
	if o == nil || o.NetIncomeGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeGrowth3y
}

// GetNetIncomeGrowth3yOk returns a tuple with the NetIncomeGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth3yOk() (*float64, bool) {
	if o == nil || o.NetIncomeGrowth3y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth3y, true
}

// HasNetIncomeGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeGrowth3y() bool {
	if o != nil && o.NetIncomeGrowth3y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth3y gets a reference to the given float64 and assigns it to the NetIncomeGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeGrowth3y(v float64) {
	o.NetIncomeGrowth3y = &v
}

// GetNetIncomeGrowth5y returns the NetIncomeGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth5y() float64 {
	if o == nil || o.NetIncomeGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeGrowth5y
}

// GetNetIncomeGrowth5yOk returns a tuple with the NetIncomeGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeGrowth5yOk() (*float64, bool) {
	if o == nil || o.NetIncomeGrowth5y == nil {
		return nil, false
	}
	return o.NetIncomeGrowth5y, true
}

// HasNetIncomeGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeGrowth5y() bool {
	if o != nil && o.NetIncomeGrowth5y != nil {
		return true
	}

	return false
}

// SetNetIncomeGrowth5y gets a reference to the given float64 and assigns it to the NetIncomeGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeGrowth5y(v float64) {
	o.NetIncomeGrowth5y = &v
}

// GetRevenueGrowth1y returns the RevenueGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth1y() float64 {
	if o == nil || o.RevenueGrowth1y == nil {
		var ret float64
		return ret
	}
	return *o.RevenueGrowth1y
}

// GetRevenueGrowth1yOk returns a tuple with the RevenueGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth1yOk() (*float64, bool) {
	if o == nil || o.RevenueGrowth1y == nil {
		return nil, false
	}
	return o.RevenueGrowth1y, true
}

// HasRevenueGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasRevenueGrowth1y() bool {
	if o != nil && o.RevenueGrowth1y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth1y gets a reference to the given float64 and assigns it to the RevenueGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetRevenueGrowth1y(v float64) {
	o.RevenueGrowth1y = &v
}

// GetRevenueGrowth3y returns the RevenueGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth3y() float64 {
	if o == nil || o.RevenueGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.RevenueGrowth3y
}

// GetRevenueGrowth3yOk returns a tuple with the RevenueGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth3yOk() (*float64, bool) {
	if o == nil || o.RevenueGrowth3y == nil {
		return nil, false
	}
	return o.RevenueGrowth3y, true
}

// HasRevenueGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasRevenueGrowth3y() bool {
	if o != nil && o.RevenueGrowth3y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth3y gets a reference to the given float64 and assigns it to the RevenueGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetRevenueGrowth3y(v float64) {
	o.RevenueGrowth3y = &v
}

// GetRevenueGrowth5y returns the RevenueGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth5y() float64 {
	if o == nil || o.RevenueGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.RevenueGrowth5y
}

// GetRevenueGrowth5yOk returns a tuple with the RevenueGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetRevenueGrowth5yOk() (*float64, bool) {
	if o == nil || o.RevenueGrowth5y == nil {
		return nil, false
	}
	return o.RevenueGrowth5y, true
}

// HasRevenueGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasRevenueGrowth5y() bool {
	if o != nil && o.RevenueGrowth5y != nil {
		return true
	}

	return false
}

// SetRevenueGrowth5y gets a reference to the given float64 and assigns it to the RevenueGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetRevenueGrowth5y(v float64) {
	o.RevenueGrowth5y = &v
}

// GetDaysSinceLastUpdate returns the DaysSinceLastUpdate field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetDaysSinceLastUpdate() int64 {
	if o == nil || o.DaysSinceLastUpdate == nil {
		var ret int64
		return ret
	}
	return *o.DaysSinceLastUpdate
}

// GetDaysSinceLastUpdateOk returns a tuple with the DaysSinceLastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetDaysSinceLastUpdateOk() (*int64, bool) {
	if o == nil || o.DaysSinceLastUpdate == nil {
		return nil, false
	}
	return o.DaysSinceLastUpdate, true
}

// HasDaysSinceLastUpdate returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasDaysSinceLastUpdate() bool {
	if o != nil && o.DaysSinceLastUpdate != nil {
		return true
	}

	return false
}

// SetDaysSinceLastUpdate gets a reference to the given int64 and assigns it to the DaysSinceLastUpdate field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetDaysSinceLastUpdate(v int64) {
	o.DaysSinceLastUpdate = &v
}

// GetLastEarningsUpdate returns the LastEarningsUpdate field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLastEarningsUpdate() int64 {
	if o == nil || o.LastEarningsUpdate == nil {
		var ret int64
		return ret
	}
	return *o.LastEarningsUpdate
}

// GetLastEarningsUpdateOk returns a tuple with the LastEarningsUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLastEarningsUpdateOk() (*int64, bool) {
	if o == nil || o.LastEarningsUpdate == nil {
		return nil, false
	}
	return o.LastEarningsUpdate, true
}

// HasLastEarningsUpdate returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasLastEarningsUpdate() bool {
	if o != nil && o.LastEarningsUpdate != nil {
		return true
	}

	return false
}

// SetLastEarningsUpdate gets a reference to the given int64 and assigns it to the LastEarningsUpdate field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetLastEarningsUpdate(v int64) {
	o.LastEarningsUpdate = &v
}

// GetLastEarningsUpdateAnnual returns the LastEarningsUpdateAnnual field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLastEarningsUpdateAnnual() int64 {
	if o == nil || o.LastEarningsUpdateAnnual == nil {
		var ret int64
		return ret
	}
	return *o.LastEarningsUpdateAnnual
}

// GetLastEarningsUpdateAnnualOk returns a tuple with the LastEarningsUpdateAnnual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLastEarningsUpdateAnnualOk() (*int64, bool) {
	if o == nil || o.LastEarningsUpdateAnnual == nil {
		return nil, false
	}
	return o.LastEarningsUpdateAnnual, true
}

// HasLastEarningsUpdateAnnual returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasLastEarningsUpdateAnnual() bool {
	if o != nil && o.LastEarningsUpdateAnnual != nil {
		return true
	}

	return false
}

// SetLastEarningsUpdateAnnual gets a reference to the given int64 and assigns it to the LastEarningsUpdateAnnual field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetLastEarningsUpdateAnnual(v int64) {
	o.LastEarningsUpdateAnnual = &v
}

// GetEbit returns the Ebit field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbit() float64 {
	if o == nil || o.Ebit == nil {
		var ret float64
		return ret
	}
	return *o.Ebit
}

// GetEbitOk returns a tuple with the Ebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitOk() (*float64, bool) {
	if o == nil || o.Ebit == nil {
		return nil, false
	}
	return o.Ebit, true
}

// HasEbit returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbit() bool {
	if o != nil && o.Ebit != nil {
		return true
	}

	return false
}

// SetEbit gets a reference to the given float64 and assigns it to the Ebit field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbit(v float64) {
	o.Ebit = &v
}

// GetEbit3yAvg returns the Ebit3yAvg field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbit3yAvg() float64 {
	if o == nil || o.Ebit3yAvg == nil {
		var ret float64
		return ret
	}
	return *o.Ebit3yAvg
}

// GetEbit3yAvgOk returns a tuple with the Ebit3yAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbit3yAvgOk() (*float64, bool) {
	if o == nil || o.Ebit3yAvg == nil {
		return nil, false
	}
	return o.Ebit3yAvg, true
}

// HasEbit3yAvg returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbit3yAvg() bool {
	if o != nil && o.Ebit3yAvg != nil {
		return true
	}

	return false
}

// SetEbit3yAvg gets a reference to the given float64 and assigns it to the Ebit3yAvg field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbit3yAvg(v float64) {
	o.Ebit3yAvg = &v
}

// GetEbit5yAvg returns the Ebit5yAvg field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbit5yAvg() float64 {
	if o == nil || o.Ebit5yAvg == nil {
		var ret float64
		return ret
	}
	return *o.Ebit5yAvg
}

// GetEbit5yAvgOk returns a tuple with the Ebit5yAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbit5yAvgOk() (*float64, bool) {
	if o == nil || o.Ebit5yAvg == nil {
		return nil, false
	}
	return o.Ebit5yAvg, true
}

// HasEbit5yAvg returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbit5yAvg() bool {
	if o != nil && o.Ebit5yAvg != nil {
		return true
	}

	return false
}

// SetEbit5yAvg gets a reference to the given float64 and assigns it to the Ebit5yAvg field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbit5yAvg(v float64) {
	o.Ebit5yAvg = &v
}

// GetEbitSingleGrowth1y returns the EbitSingleGrowth1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth1y() float64 {
	if o == nil || o.EbitSingleGrowth1y == nil {
		var ret float64
		return ret
	}
	return *o.EbitSingleGrowth1y
}

// GetEbitSingleGrowth1yOk returns a tuple with the EbitSingleGrowth1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth1yOk() (*float64, bool) {
	if o == nil || o.EbitSingleGrowth1y == nil {
		return nil, false
	}
	return o.EbitSingleGrowth1y, true
}

// HasEbitSingleGrowth1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitSingleGrowth1y() bool {
	if o != nil && o.EbitSingleGrowth1y != nil {
		return true
	}

	return false
}

// SetEbitSingleGrowth1y gets a reference to the given float64 and assigns it to the EbitSingleGrowth1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitSingleGrowth1y(v float64) {
	o.EbitSingleGrowth1y = &v
}

// GetEbitSingleGrowth3y returns the EbitSingleGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth3y() float64 {
	if o == nil || o.EbitSingleGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.EbitSingleGrowth3y
}

// GetEbitSingleGrowth3yOk returns a tuple with the EbitSingleGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth3yOk() (*float64, bool) {
	if o == nil || o.EbitSingleGrowth3y == nil {
		return nil, false
	}
	return o.EbitSingleGrowth3y, true
}

// HasEbitSingleGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitSingleGrowth3y() bool {
	if o != nil && o.EbitSingleGrowth3y != nil {
		return true
	}

	return false
}

// SetEbitSingleGrowth3y gets a reference to the given float64 and assigns it to the EbitSingleGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitSingleGrowth3y(v float64) {
	o.EbitSingleGrowth3y = &v
}

// GetEbitSingleGrowth5y returns the EbitSingleGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth5y() float64 {
	if o == nil || o.EbitSingleGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.EbitSingleGrowth5y
}

// GetEbitSingleGrowth5yOk returns a tuple with the EbitSingleGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitSingleGrowth5yOk() (*float64, bool) {
	if o == nil || o.EbitSingleGrowth5y == nil {
		return nil, false
	}
	return o.EbitSingleGrowth5y, true
}

// HasEbitSingleGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitSingleGrowth5y() bool {
	if o != nil && o.EbitSingleGrowth5y != nil {
		return true
	}

	return false
}

// SetEbitSingleGrowth5y gets a reference to the given float64 and assigns it to the EbitSingleGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitSingleGrowth5y(v float64) {
	o.EbitSingleGrowth5y = &v
}

// GetEbitMargin1y returns the EbitMargin1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitMargin1y() float64 {
	if o == nil || o.EbitMargin1y == nil {
		var ret float64
		return ret
	}
	return *o.EbitMargin1y
}

// GetEbitMargin1yOk returns a tuple with the EbitMargin1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitMargin1yOk() (*float64, bool) {
	if o == nil || o.EbitMargin1y == nil {
		return nil, false
	}
	return o.EbitMargin1y, true
}

// HasEbitMargin1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitMargin1y() bool {
	if o != nil && o.EbitMargin1y != nil {
		return true
	}

	return false
}

// SetEbitMargin1y gets a reference to the given float64 and assigns it to the EbitMargin1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitMargin1y(v float64) {
	o.EbitMargin1y = &v
}

// GetEbitMargin returns the EbitMargin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitMargin() float64 {
	if o == nil || o.EbitMargin == nil {
		var ret float64
		return ret
	}
	return *o.EbitMargin
}

// GetEbitMarginOk returns a tuple with the EbitMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitMarginOk() (*float64, bool) {
	if o == nil || o.EbitMargin == nil {
		return nil, false
	}
	return o.EbitMargin, true
}

// HasEbitMargin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitMargin() bool {
	if o != nil && o.EbitMargin != nil {
		return true
	}

	return false
}

// SetEbitMargin gets a reference to the given float64 and assigns it to the EbitMargin field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitMargin(v float64) {
	o.EbitMargin = &v
}

// GetEbitda returns the Ebitda field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitda() float64 {
	if o == nil || o.Ebitda == nil {
		var ret float64
		return ret
	}
	return *o.Ebitda
}

// GetEbitdaOk returns a tuple with the Ebitda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitdaOk() (*float64, bool) {
	if o == nil || o.Ebitda == nil {
		return nil, false
	}
	return o.Ebitda, true
}

// HasEbitda returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitda() bool {
	if o != nil && o.Ebitda != nil {
		return true
	}

	return false
}

// SetEbitda gets a reference to the given float64 and assigns it to the Ebitda field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitda(v float64) {
	o.Ebitda = &v
}

// GetEbitdaMargin returns the EbitdaMargin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitdaMargin() float64 {
	if o == nil || o.EbitdaMargin == nil {
		var ret float64
		return ret
	}
	return *o.EbitdaMargin
}

// GetEbitdaMarginOk returns a tuple with the EbitdaMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbitdaMarginOk() (*float64, bool) {
	if o == nil || o.EbitdaMargin == nil {
		return nil, false
	}
	return o.EbitdaMargin, true
}

// HasEbitdaMargin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbitdaMargin() bool {
	if o != nil && o.EbitdaMargin != nil {
		return true
	}

	return false
}

// SetEbitdaMargin gets a reference to the given float64 and assigns it to the EbitdaMargin field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbitdaMargin(v float64) {
	o.EbitdaMargin = &v
}

// GetGrossProfitMargin returns the GrossProfitMargin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetGrossProfitMargin() float64 {
	if o == nil || o.GrossProfitMargin == nil {
		var ret float64
		return ret
	}
	return *o.GrossProfitMargin
}

// GetGrossProfitMarginOk returns a tuple with the GrossProfitMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetGrossProfitMarginOk() (*float64, bool) {
	if o == nil || o.GrossProfitMargin == nil {
		return nil, false
	}
	return o.GrossProfitMargin, true
}

// HasGrossProfitMargin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasGrossProfitMargin() bool {
	if o != nil && o.GrossProfitMargin != nil {
		return true
	}

	return false
}

// SetGrossProfitMargin gets a reference to the given float64 and assigns it to the GrossProfitMargin field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetGrossProfitMargin(v float64) {
	o.GrossProfitMargin = &v
}

// GetNetIncomeSingleGrowth3y returns the NetIncomeSingleGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeSingleGrowth3y() float64 {
	if o == nil || o.NetIncomeSingleGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeSingleGrowth3y
}

// GetNetIncomeSingleGrowth3yOk returns a tuple with the NetIncomeSingleGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeSingleGrowth3yOk() (*float64, bool) {
	if o == nil || o.NetIncomeSingleGrowth3y == nil {
		return nil, false
	}
	return o.NetIncomeSingleGrowth3y, true
}

// HasNetIncomeSingleGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeSingleGrowth3y() bool {
	if o != nil && o.NetIncomeSingleGrowth3y != nil {
		return true
	}

	return false
}

// SetNetIncomeSingleGrowth3y gets a reference to the given float64 and assigns it to the NetIncomeSingleGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeSingleGrowth3y(v float64) {
	o.NetIncomeSingleGrowth3y = &v
}

// GetNetIncomeSingleGrowth5y returns the NetIncomeSingleGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeSingleGrowth5y() float64 {
	if o == nil || o.NetIncomeSingleGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeSingleGrowth5y
}

// GetNetIncomeSingleGrowth5yOk returns a tuple with the NetIncomeSingleGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeSingleGrowth5yOk() (*float64, bool) {
	if o == nil || o.NetIncomeSingleGrowth5y == nil {
		return nil, false
	}
	return o.NetIncomeSingleGrowth5y, true
}

// HasNetIncomeSingleGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeSingleGrowth5y() bool {
	if o != nil && o.NetIncomeSingleGrowth5y != nil {
		return true
	}

	return false
}

// SetNetIncomeSingleGrowth5y gets a reference to the given float64 and assigns it to the NetIncomeSingleGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeSingleGrowth5y(v float64) {
	o.NetIncomeSingleGrowth5y = &v
}

// GetEarningsPerShareSingleGrowth3y returns the EarningsPerShareSingleGrowth3y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareSingleGrowth3y() float64 {
	if o == nil || o.EarningsPerShareSingleGrowth3y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShareSingleGrowth3y
}

// GetEarningsPerShareSingleGrowth3yOk returns a tuple with the EarningsPerShareSingleGrowth3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareSingleGrowth3yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShareSingleGrowth3y == nil {
		return nil, false
	}
	return o.EarningsPerShareSingleGrowth3y, true
}

// HasEarningsPerShareSingleGrowth3y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShareSingleGrowth3y() bool {
	if o != nil && o.EarningsPerShareSingleGrowth3y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareSingleGrowth3y gets a reference to the given float64 and assigns it to the EarningsPerShareSingleGrowth3y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShareSingleGrowth3y(v float64) {
	o.EarningsPerShareSingleGrowth3y = &v
}

// GetEarningsPerShareSingleGrowth5y returns the EarningsPerShareSingleGrowth5y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareSingleGrowth5y() float64 {
	if o == nil || o.EarningsPerShareSingleGrowth5y == nil {
		var ret float64
		return ret
	}
	return *o.EarningsPerShareSingleGrowth5y
}

// GetEarningsPerShareSingleGrowth5yOk returns a tuple with the EarningsPerShareSingleGrowth5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEarningsPerShareSingleGrowth5yOk() (*float64, bool) {
	if o == nil || o.EarningsPerShareSingleGrowth5y == nil {
		return nil, false
	}
	return o.EarningsPerShareSingleGrowth5y, true
}

// HasEarningsPerShareSingleGrowth5y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEarningsPerShareSingleGrowth5y() bool {
	if o != nil && o.EarningsPerShareSingleGrowth5y != nil {
		return true
	}

	return false
}

// SetEarningsPerShareSingleGrowth5y gets a reference to the given float64 and assigns it to the EarningsPerShareSingleGrowth5y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEarningsPerShareSingleGrowth5y(v float64) {
	o.EarningsPerShareSingleGrowth5y = &v
}

// GetGrossProfitMargin1y returns the GrossProfitMargin1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetGrossProfitMargin1y() float64 {
	if o == nil || o.GrossProfitMargin1y == nil {
		var ret float64
		return ret
	}
	return *o.GrossProfitMargin1y
}

// GetGrossProfitMargin1yOk returns a tuple with the GrossProfitMargin1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetGrossProfitMargin1yOk() (*float64, bool) {
	if o == nil || o.GrossProfitMargin1y == nil {
		return nil, false
	}
	return o.GrossProfitMargin1y, true
}

// HasGrossProfitMargin1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasGrossProfitMargin1y() bool {
	if o != nil && o.GrossProfitMargin1y != nil {
		return true
	}

	return false
}

// SetGrossProfitMargin1y gets a reference to the given float64 and assigns it to the GrossProfitMargin1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetGrossProfitMargin1y(v float64) {
	o.GrossProfitMargin1y = &v
}

// GetNetIncomeMargin returns the NetIncomeMargin field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeMargin() float64 {
	if o == nil || o.NetIncomeMargin == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeMargin
}

// GetNetIncomeMarginOk returns a tuple with the NetIncomeMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeMarginOk() (*float64, bool) {
	if o == nil || o.NetIncomeMargin == nil {
		return nil, false
	}
	return o.NetIncomeMargin, true
}

// HasNetIncomeMargin returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeMargin() bool {
	if o != nil && o.NetIncomeMargin != nil {
		return true
	}

	return false
}

// SetNetIncomeMargin gets a reference to the given float64 and assigns it to the NetIncomeMargin field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeMargin(v float64) {
	o.NetIncomeMargin = &v
}

// GetNetIncomeMargin1y returns the NetIncomeMargin1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeMargin1y() float64 {
	if o == nil || o.NetIncomeMargin1y == nil {
		var ret float64
		return ret
	}
	return *o.NetIncomeMargin1y
}

// GetNetIncomeMargin1yOk returns a tuple with the NetIncomeMargin1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNetIncomeMargin1yOk() (*float64, bool) {
	if o == nil || o.NetIncomeMargin1y == nil {
		return nil, false
	}
	return o.NetIncomeMargin1y, true
}

// HasNetIncomeMargin1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNetIncomeMargin1y() bool {
	if o != nil && o.NetIncomeMargin1y != nil {
		return true
	}

	return false
}

// SetNetIncomeMargin1y gets a reference to the given float64 and assigns it to the NetIncomeMargin1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNetIncomeMargin1y(v float64) {
	o.NetIncomeMargin1y = &v
}

// GetChangeInUnearnedRevenue returns the ChangeInUnearnedRevenue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetChangeInUnearnedRevenue() float64 {
	if o == nil || o.ChangeInUnearnedRevenue == nil {
		var ret float64
		return ret
	}
	return *o.ChangeInUnearnedRevenue
}

// GetChangeInUnearnedRevenueOk returns a tuple with the ChangeInUnearnedRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetChangeInUnearnedRevenueOk() (*float64, bool) {
	if o == nil || o.ChangeInUnearnedRevenue == nil {
		return nil, false
	}
	return o.ChangeInUnearnedRevenue, true
}

// HasChangeInUnearnedRevenue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasChangeInUnearnedRevenue() bool {
	if o != nil && o.ChangeInUnearnedRevenue != nil {
		return true
	}

	return false
}

// SetChangeInUnearnedRevenue gets a reference to the given float64 and assigns it to the ChangeInUnearnedRevenue field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetChangeInUnearnedRevenue(v float64) {
	o.ChangeInUnearnedRevenue = &v
}

// GetUnearnedRevenuePercentOfSales returns the UnearnedRevenuePercentOfSales field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnearnedRevenuePercentOfSales() float64 {
	if o == nil || o.UnearnedRevenuePercentOfSales == nil {
		var ret float64
		return ret
	}
	return *o.UnearnedRevenuePercentOfSales
}

// GetUnearnedRevenuePercentOfSalesOk returns a tuple with the UnearnedRevenuePercentOfSales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnearnedRevenuePercentOfSalesOk() (*float64, bool) {
	if o == nil || o.UnearnedRevenuePercentOfSales == nil {
		return nil, false
	}
	return o.UnearnedRevenuePercentOfSales, true
}

// HasUnearnedRevenuePercentOfSales returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasUnearnedRevenuePercentOfSales() bool {
	if o != nil && o.UnearnedRevenuePercentOfSales != nil {
		return true
	}

	return false
}

// SetUnearnedRevenuePercentOfSales gets a reference to the given float64 and assigns it to the UnearnedRevenuePercentOfSales field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetUnearnedRevenuePercentOfSales(v float64) {
	o.UnearnedRevenuePercentOfSales = &v
}

// GetEbtIncluding returns the EbtIncluding field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbtIncluding() float64 {
	if o == nil || o.EbtIncluding == nil {
		var ret float64
		return ret
	}
	return *o.EbtIncluding
}

// GetEbtIncludingOk returns a tuple with the EbtIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetEbtIncludingOk() (*float64, bool) {
	if o == nil || o.EbtIncluding == nil {
		return nil, false
	}
	return o.EbtIncluding, true
}

// HasEbtIncluding returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasEbtIncluding() bool {
	if o != nil && o.EbtIncluding != nil {
		return true
	}

	return false
}

// SetEbtIncluding gets a reference to the given float64 and assigns it to the EbtIncluding field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetEbtIncluding(v float64) {
	o.EbtIncluding = &v
}

// GetUnusualItems returns the UnusualItems field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnusualItems() float64 {
	if o == nil || o.UnusualItems == nil {
		var ret float64
		return ret
	}
	return *o.UnusualItems
}

// GetUnusualItemsOk returns a tuple with the UnusualItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnusualItemsOk() (*float64, bool) {
	if o == nil || o.UnusualItems == nil {
		return nil, false
	}
	return o.UnusualItems, true
}

// HasUnusualItems returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasUnusualItems() bool {
	if o != nil && o.UnusualItems != nil {
		return true
	}

	return false
}

// SetUnusualItems gets a reference to the given float64 and assigns it to the UnusualItems field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetUnusualItems(v float64) {
	o.UnusualItems = &v
}

// GetUnusualItemRatio returns the UnusualItemRatio field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnusualItemRatio() float64 {
	if o == nil || o.UnusualItemRatio == nil {
		var ret float64
		return ret
	}
	return *o.UnusualItemRatio
}

// GetUnusualItemRatioOk returns a tuple with the UnusualItemRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetUnusualItemRatioOk() (*float64, bool) {
	if o == nil || o.UnusualItemRatio == nil {
		return nil, false
	}
	return o.UnusualItemRatio, true
}

// HasUnusualItemRatio returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasUnusualItemRatio() bool {
	if o != nil && o.UnusualItemRatio != nil {
		return true
	}

	return false
}

// SetUnusualItemRatio gets a reference to the given float64 and assigns it to the UnusualItemRatio field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetUnusualItemRatio(v float64) {
	o.UnusualItemRatio = &v
}

// GetOperatingRevenuePercent returns the OperatingRevenuePercent field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetOperatingRevenuePercent() float64 {
	if o == nil || o.OperatingRevenuePercent == nil {
		var ret float64
		return ret
	}
	return *o.OperatingRevenuePercent
}

// GetOperatingRevenuePercentOk returns a tuple with the OperatingRevenuePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetOperatingRevenuePercentOk() (*float64, bool) {
	if o == nil || o.OperatingRevenuePercent == nil {
		return nil, false
	}
	return o.OperatingRevenuePercent, true
}

// HasOperatingRevenuePercent returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasOperatingRevenuePercent() bool {
	if o != nil && o.OperatingRevenuePercent != nil {
		return true
	}

	return false
}

// SetOperatingRevenuePercent gets a reference to the given float64 and assigns it to the OperatingRevenuePercent field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetOperatingRevenuePercent(v float64) {
	o.OperatingRevenuePercent = &v
}

// GetYearsProfitable returns the YearsProfitable field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetYearsProfitable() float64 {
	if o == nil || o.YearsProfitable == nil {
		var ret float64
		return ret
	}
	return *o.YearsProfitable
}

// GetYearsProfitableOk returns a tuple with the YearsProfitable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetYearsProfitableOk() (*float64, bool) {
	if o == nil || o.YearsProfitable == nil {
		return nil, false
	}
	return o.YearsProfitable, true
}

// HasYearsProfitable returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasYearsProfitable() bool {
	if o != nil && o.YearsProfitable != nil {
		return true
	}

	return false
}

// SetYearsProfitable gets a reference to the given float64 and assigns it to the YearsProfitable field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetYearsProfitable(v float64) {
	o.YearsProfitable = &v
}

// GetTradingSinceYears returns the TradingSinceYears field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTradingSinceYears() float64 {
	if o == nil || o.TradingSinceYears == nil {
		var ret float64
		return ret
	}
	return *o.TradingSinceYears
}

// GetTradingSinceYearsOk returns a tuple with the TradingSinceYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetTradingSinceYearsOk() (*float64, bool) {
	if o == nil || o.TradingSinceYears == nil {
		return nil, false
	}
	return o.TradingSinceYears, true
}

// HasTradingSinceYears returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasTradingSinceYears() bool {
	if o != nil && o.TradingSinceYears != nil {
		return true
	}

	return false
}

// SetTradingSinceYears gets a reference to the given float64 and assigns it to the TradingSinceYears field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetTradingSinceYears(v float64) {
	o.TradingSinceYears = &v
}

// GetNonOperatingRevenue returns the NonOperatingRevenue field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenue() float64 {
	if o == nil || o.NonOperatingRevenue == nil {
		var ret float64
		return ret
	}
	return *o.NonOperatingRevenue
}

// GetNonOperatingRevenueOk returns a tuple with the NonOperatingRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueOk() (*float64, bool) {
	if o == nil || o.NonOperatingRevenue == nil {
		return nil, false
	}
	return o.NonOperatingRevenue, true
}

// HasNonOperatingRevenue returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNonOperatingRevenue() bool {
	if o != nil && o.NonOperatingRevenue != nil {
		return true
	}

	return false
}

// SetNonOperatingRevenue gets a reference to the given float64 and assigns it to the NonOperatingRevenue field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNonOperatingRevenue(v float64) {
	o.NonOperatingRevenue = &v
}

// GetNonOperatingRevenueRatio returns the NonOperatingRevenueRatio field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatio() float64 {
	if o == nil || o.NonOperatingRevenueRatio == nil {
		var ret float64
		return ret
	}
	return *o.NonOperatingRevenueRatio
}

// GetNonOperatingRevenueRatioOk returns a tuple with the NonOperatingRevenueRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatioOk() (*float64, bool) {
	if o == nil || o.NonOperatingRevenueRatio == nil {
		return nil, false
	}
	return o.NonOperatingRevenueRatio, true
}

// HasNonOperatingRevenueRatio returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNonOperatingRevenueRatio() bool {
	if o != nil && o.NonOperatingRevenueRatio != nil {
		return true
	}

	return false
}

// SetNonOperatingRevenueRatio gets a reference to the given float64 and assigns it to the NonOperatingRevenueRatio field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNonOperatingRevenueRatio(v float64) {
	o.NonOperatingRevenueRatio = &v
}

// GetNonOperatingRevenueRatio1y returns the NonOperatingRevenueRatio1y field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatio1y() float64 {
	if o == nil || o.NonOperatingRevenueRatio1y == nil {
		var ret float64
		return ret
	}
	return *o.NonOperatingRevenueRatio1y
}

// GetNonOperatingRevenueRatio1yOk returns a tuple with the NonOperatingRevenueRatio1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatio1yOk() (*float64, bool) {
	if o == nil || o.NonOperatingRevenueRatio1y == nil {
		return nil, false
	}
	return o.NonOperatingRevenueRatio1y, true
}

// HasNonOperatingRevenueRatio1y returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNonOperatingRevenueRatio1y() bool {
	if o != nil && o.NonOperatingRevenueRatio1y != nil {
		return true
	}

	return false
}

// SetNonOperatingRevenueRatio1y gets a reference to the given float64 and assigns it to the NonOperatingRevenueRatio1y field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNonOperatingRevenueRatio1y(v float64) {
	o.NonOperatingRevenueRatio1y = &v
}

// GetNonOperatingRevenueRatioDelta returns the NonOperatingRevenueRatioDelta field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatioDelta() float64 {
	if o == nil || o.NonOperatingRevenueRatioDelta == nil {
		var ret float64
		return ret
	}
	return *o.NonOperatingRevenueRatioDelta
}

// GetNonOperatingRevenueRatioDeltaOk returns a tuple with the NonOperatingRevenueRatioDelta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetNonOperatingRevenueRatioDeltaOk() (*float64, bool) {
	if o == nil || o.NonOperatingRevenueRatioDelta == nil {
		return nil, false
	}
	return o.NonOperatingRevenueRatioDelta, true
}

// HasNonOperatingRevenueRatioDelta returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasNonOperatingRevenueRatioDelta() bool {
	if o != nil && o.NonOperatingRevenueRatioDelta != nil {
		return true
	}

	return false
}

// SetNonOperatingRevenueRatioDelta gets a reference to the given float64 and assigns it to the NonOperatingRevenueRatioDelta field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetNonOperatingRevenueRatioDelta(v float64) {
	o.NonOperatingRevenueRatioDelta = &v
}

// GetIncomeTaxToEbitRatio returns the IncomeTaxToEbitRatio field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetIncomeTaxToEbitRatio() float64 {
	if o == nil || o.IncomeTaxToEbitRatio == nil {
		var ret float64
		return ret
	}
	return *o.IncomeTaxToEbitRatio
}

// GetIncomeTaxToEbitRatioOk returns a tuple with the IncomeTaxToEbitRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetIncomeTaxToEbitRatioOk() (*float64, bool) {
	if o == nil || o.IncomeTaxToEbitRatio == nil {
		return nil, false
	}
	return o.IncomeTaxToEbitRatio, true
}

// HasIncomeTaxToEbitRatio returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasIncomeTaxToEbitRatio() bool {
	if o != nil && o.IncomeTaxToEbitRatio != nil {
		return true
	}

	return false
}

// SetIncomeTaxToEbitRatio gets a reference to the given float64 and assigns it to the IncomeTaxToEbitRatio field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetIncomeTaxToEbitRatio(v float64) {
	o.IncomeTaxToEbitRatio = &v
}

// GetLatestFiscalYear returns the LatestFiscalYear field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLatestFiscalYear() int64 {
	if o == nil || o.LatestFiscalYear == nil {
		var ret int64
		return ret
	}
	return *o.LatestFiscalYear
}

// GetLatestFiscalYearOk returns a tuple with the LatestFiscalYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLatestFiscalYearOk() (*int64, bool) {
	if o == nil || o.LatestFiscalYear == nil {
		return nil, false
	}
	return o.LatestFiscalYear, true
}

// HasLatestFiscalYear returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasLatestFiscalYear() bool {
	if o != nil && o.LatestFiscalYear != nil {
		return true
	}

	return false
}

// SetLatestFiscalYear gets a reference to the given int64 and assigns it to the LatestFiscalYear field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetLatestFiscalYear(v int64) {
	o.LatestFiscalYear = &v
}

// GetLatestFiscalQuarter returns the LatestFiscalQuarter field value if set, zero value otherwise.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLatestFiscalQuarter() int64 {
	if o == nil || o.LatestFiscalQuarter == nil {
		var ret int64
		return ret
	}
	return *o.LatestFiscalQuarter
}

// GetLatestFiscalQuarterOk returns a tuple with the LatestFiscalQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) GetLatestFiscalQuarterOk() (*int64, bool) {
	if o == nil || o.LatestFiscalQuarter == nil {
		return nil, false
	}
	return o.LatestFiscalQuarter, true
}

// HasLatestFiscalQuarter returns a boolean if a field has been set.
func (o *CompanyAnalysisExtendedAnalysisPast) HasLatestFiscalQuarter() bool {
	if o != nil && o.LatestFiscalQuarter != nil {
		return true
	}

	return false
}

// SetLatestFiscalQuarter gets a reference to the given int64 and assigns it to the LatestFiscalQuarter field.
func (o *CompanyAnalysisExtendedAnalysisPast) SetLatestFiscalQuarter(v int64) {
	o.LatestFiscalQuarter = &v
}

func (o CompanyAnalysisExtendedAnalysisPast) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revenue != nil {
		toSerialize["revenue"] = o.Revenue
	}
	if o.OperatingRevenue != nil {
		toSerialize["operating_revenue"] = o.OperatingRevenue
	}
	if o.NetIncome != nil {
		toSerialize["net_income"] = o.NetIncome
	}
	if o.EarningsPerShare != nil {
		toSerialize["earnings_per_share"] = o.EarningsPerShare
	}
	if o.EarningsPerShare1y != nil {
		toSerialize["earnings_per_share_1y"] = o.EarningsPerShare1y
	}
	if o.EarningsPerShare3y != nil {
		toSerialize["earnings_per_share_3y"] = o.EarningsPerShare3y
	}
	if o.EarningsPerShare5y != nil {
		toSerialize["earnings_per_share_5y"] = o.EarningsPerShare5y
	}
	if o.EarningsPerShare5yAvg != nil {
		toSerialize["earnings_per_share_5y_avg"] = o.EarningsPerShare5yAvg
	}
	if o.EbtExcluding != nil {
		toSerialize["ebt_excluding"] = o.EbtExcluding
	}
	if o.EarningsContinuedOps != nil {
		toSerialize["earnings_continued_ops"] = o.EarningsContinuedOps
	}
	if o.TotalAssets != nil {
		toSerialize["total_assets"] = o.TotalAssets
	}
	if o.TotalEquity != nil {
		toSerialize["total_equity"] = o.TotalEquity
	}
	if o.CurrentLiabilities != nil {
		toSerialize["current_liabilities"] = o.CurrentLiabilities
	}
	if o.ReturnOnEquity != nil {
		toSerialize["return_on_equity"] = o.ReturnOnEquity
	}
	if o.ReturnOnAssets != nil {
		toSerialize["return_on_assets"] = o.ReturnOnAssets
	}
	if o.ReturnOnCapitalEmployed != nil {
		toSerialize["return_on_capital_employed"] = o.ReturnOnCapitalEmployed
	}
	if o.ReturnOnCapitalEmployedPast != nil {
		toSerialize["return_on_capital_employed_past"] = o.ReturnOnCapitalEmployedPast
	}
	if o.ReturnOnCapitalGrowth != nil {
		toSerialize["return_on_capital_growth"] = o.ReturnOnCapitalGrowth
	}
	if o.EarningsPerShareGrowth1y != nil {
		toSerialize["earnings_per_share_growth_1y"] = o.EarningsPerShareGrowth1y
	}
	if o.EarningsPerShareGrowth2y != nil {
		toSerialize["earnings_per_share_growth_2y"] = o.EarningsPerShareGrowth2y
	}
	if o.EarningsPerShareGrowth3y != nil {
		toSerialize["earnings_per_share_growth_3y"] = o.EarningsPerShareGrowth3y
	}
	if o.NetIncome1y != nil {
		toSerialize["net_income_1y"] = o.NetIncome1y
	}
	if o.NetIncome2y != nil {
		toSerialize["net_income_2y"] = o.NetIncome2y
	}
	if o.NetIncome3y != nil {
		toSerialize["net_income_3y"] = o.NetIncome3y
	}
	if o.NetIncome4y != nil {
		toSerialize["net_income_4y"] = o.NetIncome4y
	}
	if o.NetIncome5y != nil {
		toSerialize["net_income_5y"] = o.NetIncome5y
	}
	if o.NetIncome5yAvg != nil {
		toSerialize["net_income_5y_avg"] = o.NetIncome5yAvg
	}
	if o.NetIncomeGrowth1y != nil {
		toSerialize["net_income_growth_1y"] = o.NetIncomeGrowth1y
	}
	if o.NetIncomeGrowth3y != nil {
		toSerialize["net_income_growth_3y"] = o.NetIncomeGrowth3y
	}
	if o.NetIncomeGrowth5y != nil {
		toSerialize["net_income_growth_5y"] = o.NetIncomeGrowth5y
	}
	if o.RevenueGrowth1y != nil {
		toSerialize["revenue_growth_1y"] = o.RevenueGrowth1y
	}
	if o.RevenueGrowth3y != nil {
		toSerialize["revenue_growth_3y"] = o.RevenueGrowth3y
	}
	if o.RevenueGrowth5y != nil {
		toSerialize["revenue_growth_5y"] = o.RevenueGrowth5y
	}
	if o.DaysSinceLastUpdate != nil {
		toSerialize["days_since_last_update"] = o.DaysSinceLastUpdate
	}
	if o.LastEarningsUpdate != nil {
		toSerialize["last_earnings_update"] = o.LastEarningsUpdate
	}
	if o.LastEarningsUpdateAnnual != nil {
		toSerialize["last_earnings_update_annual"] = o.LastEarningsUpdateAnnual
	}
	if o.Ebit != nil {
		toSerialize["ebit"] = o.Ebit
	}
	if o.Ebit3yAvg != nil {
		toSerialize["ebit_3y_avg"] = o.Ebit3yAvg
	}
	if o.Ebit5yAvg != nil {
		toSerialize["ebit_5y_avg"] = o.Ebit5yAvg
	}
	if o.EbitSingleGrowth1y != nil {
		toSerialize["ebit_single_growth_1y"] = o.EbitSingleGrowth1y
	}
	if o.EbitSingleGrowth3y != nil {
		toSerialize["ebit_single_growth_3y"] = o.EbitSingleGrowth3y
	}
	if o.EbitSingleGrowth5y != nil {
		toSerialize["ebit_single_growth_5y"] = o.EbitSingleGrowth5y
	}
	if o.EbitMargin1y != nil {
		toSerialize["ebit_margin_1y"] = o.EbitMargin1y
	}
	if o.EbitMargin != nil {
		toSerialize["ebit_margin"] = o.EbitMargin
	}
	if o.Ebitda != nil {
		toSerialize["ebitda"] = o.Ebitda
	}
	if o.EbitdaMargin != nil {
		toSerialize["ebitda_margin"] = o.EbitdaMargin
	}
	if o.GrossProfitMargin != nil {
		toSerialize["gross_profit_margin"] = o.GrossProfitMargin
	}
	if o.NetIncomeSingleGrowth3y != nil {
		toSerialize["net_income_single_growth_3y"] = o.NetIncomeSingleGrowth3y
	}
	if o.NetIncomeSingleGrowth5y != nil {
		toSerialize["net_income_single_growth_5y"] = o.NetIncomeSingleGrowth5y
	}
	if o.EarningsPerShareSingleGrowth3y != nil {
		toSerialize["earnings_per_share_single_growth_3y"] = o.EarningsPerShareSingleGrowth3y
	}
	if o.EarningsPerShareSingleGrowth5y != nil {
		toSerialize["earnings_per_share_single_growth_5y"] = o.EarningsPerShareSingleGrowth5y
	}
	if o.GrossProfitMargin1y != nil {
		toSerialize["gross_profit_margin_1y"] = o.GrossProfitMargin1y
	}
	if o.NetIncomeMargin != nil {
		toSerialize["net_income_margin"] = o.NetIncomeMargin
	}
	if o.NetIncomeMargin1y != nil {
		toSerialize["net_income_margin_1y"] = o.NetIncomeMargin1y
	}
	if o.ChangeInUnearnedRevenue != nil {
		toSerialize["change_in_unearned_revenue"] = o.ChangeInUnearnedRevenue
	}
	if o.UnearnedRevenuePercentOfSales != nil {
		toSerialize["unearned_revenue_percent_of_sales"] = o.UnearnedRevenuePercentOfSales
	}
	if o.EbtIncluding != nil {
		toSerialize["ebt_including"] = o.EbtIncluding
	}
	if o.UnusualItems != nil {
		toSerialize["unusual_items"] = o.UnusualItems
	}
	if o.UnusualItemRatio != nil {
		toSerialize["unusual_item_ratio"] = o.UnusualItemRatio
	}
	if o.OperatingRevenuePercent != nil {
		toSerialize["operating_revenue_percent"] = o.OperatingRevenuePercent
	}
	if o.YearsProfitable != nil {
		toSerialize["years_profitable"] = o.YearsProfitable
	}
	if o.TradingSinceYears != nil {
		toSerialize["trading_since_years"] = o.TradingSinceYears
	}
	if o.NonOperatingRevenue != nil {
		toSerialize["non_operating_revenue"] = o.NonOperatingRevenue
	}
	if o.NonOperatingRevenueRatio != nil {
		toSerialize["non_operating_revenue_ratio"] = o.NonOperatingRevenueRatio
	}
	if o.NonOperatingRevenueRatio1y != nil {
		toSerialize["non_operating_revenue_ratio_1y"] = o.NonOperatingRevenueRatio1y
	}
	if o.NonOperatingRevenueRatioDelta != nil {
		toSerialize["non_operating_revenue_ratio_delta"] = o.NonOperatingRevenueRatioDelta
	}
	if o.IncomeTaxToEbitRatio != nil {
		toSerialize["income_tax_to_ebit_ratio"] = o.IncomeTaxToEbitRatio
	}
	if o.LatestFiscalYear != nil {
		toSerialize["latest_fiscal_year"] = o.LatestFiscalYear
	}
	if o.LatestFiscalQuarter != nil {
		toSerialize["latest_fiscal_quarter"] = o.LatestFiscalQuarter
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyAnalysisExtendedAnalysisPast struct {
	value *CompanyAnalysisExtendedAnalysisPast
	isSet bool
}

func (v NullableCompanyAnalysisExtendedAnalysisPast) Get() *CompanyAnalysisExtendedAnalysisPast {
	return v.value
}

func (v *NullableCompanyAnalysisExtendedAnalysisPast) Set(val *CompanyAnalysisExtendedAnalysisPast) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAnalysisExtendedAnalysisPast) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAnalysisExtendedAnalysisPast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAnalysisExtendedAnalysisPast(val *CompanyAnalysisExtendedAnalysisPast) *NullableCompanyAnalysisExtendedAnalysisPast {
	return &NullableCompanyAnalysisExtendedAnalysisPast{value: val, isSet: true}
}

func (v NullableCompanyAnalysisExtendedAnalysisPast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAnalysisExtendedAnalysisPast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
