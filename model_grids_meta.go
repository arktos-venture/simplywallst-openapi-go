/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GridsMeta struct for GridsMeta
type GridsMeta struct {
	TotalRecords     *int64  `json:"total_records,omitempty"`
	RealTotalRecords *int64  `json:"real_total_records,omitempty"`
	State            *string `json:"state,omitempty"`
	NoResultIfLimit  *bool   `json:"noResultIfLimit,omitempty"`
}

// NewGridsMeta instantiates a new GridsMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridsMeta() *GridsMeta {
	this := GridsMeta{}
	return &this
}

// NewGridsMetaWithDefaults instantiates a new GridsMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridsMetaWithDefaults() *GridsMeta {
	this := GridsMeta{}
	return &this
}

// GetTotalRecords returns the TotalRecords field value if set, zero value otherwise.
func (o *GridsMeta) GetTotalRecords() int64 {
	if o == nil || o.TotalRecords == nil {
		var ret int64
		return ret
	}
	return *o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridsMeta) GetTotalRecordsOk() (*int64, bool) {
	if o == nil || o.TotalRecords == nil {
		return nil, false
	}
	return o.TotalRecords, true
}

// HasTotalRecords returns a boolean if a field has been set.
func (o *GridsMeta) HasTotalRecords() bool {
	if o != nil && o.TotalRecords != nil {
		return true
	}

	return false
}

// SetTotalRecords gets a reference to the given int64 and assigns it to the TotalRecords field.
func (o *GridsMeta) SetTotalRecords(v int64) {
	o.TotalRecords = &v
}

// GetRealTotalRecords returns the RealTotalRecords field value if set, zero value otherwise.
func (o *GridsMeta) GetRealTotalRecords() int64 {
	if o == nil || o.RealTotalRecords == nil {
		var ret int64
		return ret
	}
	return *o.RealTotalRecords
}

// GetRealTotalRecordsOk returns a tuple with the RealTotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridsMeta) GetRealTotalRecordsOk() (*int64, bool) {
	if o == nil || o.RealTotalRecords == nil {
		return nil, false
	}
	return o.RealTotalRecords, true
}

// HasRealTotalRecords returns a boolean if a field has been set.
func (o *GridsMeta) HasRealTotalRecords() bool {
	if o != nil && o.RealTotalRecords != nil {
		return true
	}

	return false
}

// SetRealTotalRecords gets a reference to the given int64 and assigns it to the RealTotalRecords field.
func (o *GridsMeta) SetRealTotalRecords(v int64) {
	o.RealTotalRecords = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GridsMeta) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridsMeta) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GridsMeta) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GridsMeta) SetState(v string) {
	o.State = &v
}

// GetNoResultIfLimit returns the NoResultIfLimit field value if set, zero value otherwise.
func (o *GridsMeta) GetNoResultIfLimit() bool {
	if o == nil || o.NoResultIfLimit == nil {
		var ret bool
		return ret
	}
	return *o.NoResultIfLimit
}

// GetNoResultIfLimitOk returns a tuple with the NoResultIfLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridsMeta) GetNoResultIfLimitOk() (*bool, bool) {
	if o == nil || o.NoResultIfLimit == nil {
		return nil, false
	}
	return o.NoResultIfLimit, true
}

// HasNoResultIfLimit returns a boolean if a field has been set.
func (o *GridsMeta) HasNoResultIfLimit() bool {
	if o != nil && o.NoResultIfLimit != nil {
		return true
	}

	return false
}

// SetNoResultIfLimit gets a reference to the given bool and assigns it to the NoResultIfLimit field.
func (o *GridsMeta) SetNoResultIfLimit(v bool) {
	o.NoResultIfLimit = &v
}

func (o GridsMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalRecords != nil {
		toSerialize["total_records"] = o.TotalRecords
	}
	if o.RealTotalRecords != nil {
		toSerialize["real_total_records"] = o.RealTotalRecords
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.NoResultIfLimit != nil {
		toSerialize["noResultIfLimit"] = o.NoResultIfLimit
	}
	return json.Marshal(toSerialize)
}

type NullableGridsMeta struct {
	value *GridsMeta
	isSet bool
}

func (v NullableGridsMeta) Get() *GridsMeta {
	return v.value
}

func (v *NullableGridsMeta) Set(val *GridsMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableGridsMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableGridsMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridsMeta(val *GridsMeta) *NullableGridsMeta {
	return &NullableGridsMeta{value: val, isSet: true}
}

func (v NullableGridsMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridsMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
