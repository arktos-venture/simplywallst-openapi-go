/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarketPerformanceDate struct for MarketPerformanceDate
type MarketPerformanceDate struct {
	Return7d     *[]MarketPerformanceDateData `json:"return_7d,omitempty"`
	Return30d    *[]MarketPerformanceDateData `json:"return_30d,omitempty"`
	Return90d    *[]MarketPerformanceDateData `json:"return_90d,omitempty"`
	Return1yrAbs *[]MarketPerformanceDateData `json:"return_1yr_abs,omitempty"`
	Return3yrAbs *[]MarketPerformanceDateData `json:"return_3yr_abs,omitempty"`
	Return5yrAbs *[]MarketPerformanceDateData `json:"return_5yr_abs,omitempty"`
}

// NewMarketPerformanceDate instantiates a new MarketPerformanceDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketPerformanceDate() *MarketPerformanceDate {
	this := MarketPerformanceDate{}
	return &this
}

// NewMarketPerformanceDateWithDefaults instantiates a new MarketPerformanceDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketPerformanceDateWithDefaults() *MarketPerformanceDate {
	this := MarketPerformanceDate{}
	return &this
}

// GetReturn7d returns the Return7d field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn7d() []MarketPerformanceDateData {
	if o == nil || o.Return7d == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return7d
}

// GetReturn7dOk returns a tuple with the Return7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn7dOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return7d == nil {
		return nil, false
	}
	return o.Return7d, true
}

// HasReturn7d returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn7d() bool {
	if o != nil && o.Return7d != nil {
		return true
	}

	return false
}

// SetReturn7d gets a reference to the given []MarketPerformanceDateData and assigns it to the Return7d field.
func (o *MarketPerformanceDate) SetReturn7d(v []MarketPerformanceDateData) {
	o.Return7d = &v
}

// GetReturn30d returns the Return30d field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn30d() []MarketPerformanceDateData {
	if o == nil || o.Return30d == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return30d
}

// GetReturn30dOk returns a tuple with the Return30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn30dOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return30d == nil {
		return nil, false
	}
	return o.Return30d, true
}

// HasReturn30d returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn30d() bool {
	if o != nil && o.Return30d != nil {
		return true
	}

	return false
}

// SetReturn30d gets a reference to the given []MarketPerformanceDateData and assigns it to the Return30d field.
func (o *MarketPerformanceDate) SetReturn30d(v []MarketPerformanceDateData) {
	o.Return30d = &v
}

// GetReturn90d returns the Return90d field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn90d() []MarketPerformanceDateData {
	if o == nil || o.Return90d == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return90d
}

// GetReturn90dOk returns a tuple with the Return90d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn90dOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return90d == nil {
		return nil, false
	}
	return o.Return90d, true
}

// HasReturn90d returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn90d() bool {
	if o != nil && o.Return90d != nil {
		return true
	}

	return false
}

// SetReturn90d gets a reference to the given []MarketPerformanceDateData and assigns it to the Return90d field.
func (o *MarketPerformanceDate) SetReturn90d(v []MarketPerformanceDateData) {
	o.Return90d = &v
}

// GetReturn1yrAbs returns the Return1yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn1yrAbs() []MarketPerformanceDateData {
	if o == nil || o.Return1yrAbs == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return1yrAbs
}

// GetReturn1yrAbsOk returns a tuple with the Return1yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn1yrAbsOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return1yrAbs == nil {
		return nil, false
	}
	return o.Return1yrAbs, true
}

// HasReturn1yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn1yrAbs() bool {
	if o != nil && o.Return1yrAbs != nil {
		return true
	}

	return false
}

// SetReturn1yrAbs gets a reference to the given []MarketPerformanceDateData and assigns it to the Return1yrAbs field.
func (o *MarketPerformanceDate) SetReturn1yrAbs(v []MarketPerformanceDateData) {
	o.Return1yrAbs = &v
}

// GetReturn3yrAbs returns the Return3yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn3yrAbs() []MarketPerformanceDateData {
	if o == nil || o.Return3yrAbs == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return3yrAbs
}

// GetReturn3yrAbsOk returns a tuple with the Return3yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn3yrAbsOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return3yrAbs == nil {
		return nil, false
	}
	return o.Return3yrAbs, true
}

// HasReturn3yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn3yrAbs() bool {
	if o != nil && o.Return3yrAbs != nil {
		return true
	}

	return false
}

// SetReturn3yrAbs gets a reference to the given []MarketPerformanceDateData and assigns it to the Return3yrAbs field.
func (o *MarketPerformanceDate) SetReturn3yrAbs(v []MarketPerformanceDateData) {
	o.Return3yrAbs = &v
}

// GetReturn5yrAbs returns the Return5yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDate) GetReturn5yrAbs() []MarketPerformanceDateData {
	if o == nil || o.Return5yrAbs == nil {
		var ret []MarketPerformanceDateData
		return ret
	}
	return *o.Return5yrAbs
}

// GetReturn5yrAbsOk returns a tuple with the Return5yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDate) GetReturn5yrAbsOk() (*[]MarketPerformanceDateData, bool) {
	if o == nil || o.Return5yrAbs == nil {
		return nil, false
	}
	return o.Return5yrAbs, true
}

// HasReturn5yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDate) HasReturn5yrAbs() bool {
	if o != nil && o.Return5yrAbs != nil {
		return true
	}

	return false
}

// SetReturn5yrAbs gets a reference to the given []MarketPerformanceDateData and assigns it to the Return5yrAbs field.
func (o *MarketPerformanceDate) SetReturn5yrAbs(v []MarketPerformanceDateData) {
	o.Return5yrAbs = &v
}

func (o MarketPerformanceDate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Return7d != nil {
		toSerialize["return_7d"] = o.Return7d
	}
	if o.Return30d != nil {
		toSerialize["return_30d"] = o.Return30d
	}
	if o.Return90d != nil {
		toSerialize["return_90d"] = o.Return90d
	}
	if o.Return1yrAbs != nil {
		toSerialize["return_1yr_abs"] = o.Return1yrAbs
	}
	if o.Return3yrAbs != nil {
		toSerialize["return_3yr_abs"] = o.Return3yrAbs
	}
	if o.Return5yrAbs != nil {
		toSerialize["return_5yr_abs"] = o.Return5yrAbs
	}
	return json.Marshal(toSerialize)
}

type NullableMarketPerformanceDate struct {
	value *MarketPerformanceDate
	isSet bool
}

func (v NullableMarketPerformanceDate) Get() *MarketPerformanceDate {
	return v.value
}

func (v *NullableMarketPerformanceDate) Set(val *MarketPerformanceDate) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketPerformanceDate) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketPerformanceDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketPerformanceDate(val *MarketPerformanceDate) *NullableMarketPerformanceDate {
	return &NullableMarketPerformanceDate{value: val, isSet: true}
}

func (v NullableMarketPerformanceDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketPerformanceDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
