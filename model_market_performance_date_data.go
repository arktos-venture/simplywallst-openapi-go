/*
 * simply-wallst
 *
 * simply-wallst API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarketPerformanceDateData struct for MarketPerformanceDateData
type MarketPerformanceDateData struct {
	Id             *string  `json:"id,omitempty"`
	Name           *string  `json:"name,omitempty"`
	TickerSymbol   *string  `json:"ticker_symbol,omitempty"`
	UniqueSymbol   *string  `json:"unique_symbol,omitempty"`
	CurrencyIso    *string  `json:"currency_iso,omitempty"`
	LastSharePrice *float32 `json:"last_share_price,omitempty"`
	Return7d       *float32 `json:"return_7d,omitempty"`
	Return30d      *float32 `json:"return_30d,omitempty"`
	Return90d      *float32 `json:"return_90d,omitempty"`
	Return1yrAbs   *float32 `json:"return_1yr_abs,omitempty"`
	Return3yrAbs   *float32 `json:"return_3yr_abs,omitempty"`
	Return5yrAbs   *float32 `json:"return_5yr_abs,omitempty"`
	CanonicalUrl   *string  `json:"canonical_url,omitempty"`
}

// NewMarketPerformanceDateData instantiates a new MarketPerformanceDateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketPerformanceDateData() *MarketPerformanceDateData {
	this := MarketPerformanceDateData{}
	return &this
}

// NewMarketPerformanceDateDataWithDefaults instantiates a new MarketPerformanceDateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketPerformanceDateDataWithDefaults() *MarketPerformanceDateData {
	this := MarketPerformanceDateData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MarketPerformanceDateData) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MarketPerformanceDateData) SetName(v string) {
	o.Name = &v
}

// GetTickerSymbol returns the TickerSymbol field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetTickerSymbol() string {
	if o == nil || o.TickerSymbol == nil {
		var ret string
		return ret
	}
	return *o.TickerSymbol
}

// GetTickerSymbolOk returns a tuple with the TickerSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetTickerSymbolOk() (*string, bool) {
	if o == nil || o.TickerSymbol == nil {
		return nil, false
	}
	return o.TickerSymbol, true
}

// HasTickerSymbol returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasTickerSymbol() bool {
	if o != nil && o.TickerSymbol != nil {
		return true
	}

	return false
}

// SetTickerSymbol gets a reference to the given string and assigns it to the TickerSymbol field.
func (o *MarketPerformanceDateData) SetTickerSymbol(v string) {
	o.TickerSymbol = &v
}

// GetUniqueSymbol returns the UniqueSymbol field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetUniqueSymbol() string {
	if o == nil || o.UniqueSymbol == nil {
		var ret string
		return ret
	}
	return *o.UniqueSymbol
}

// GetUniqueSymbolOk returns a tuple with the UniqueSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetUniqueSymbolOk() (*string, bool) {
	if o == nil || o.UniqueSymbol == nil {
		return nil, false
	}
	return o.UniqueSymbol, true
}

// HasUniqueSymbol returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasUniqueSymbol() bool {
	if o != nil && o.UniqueSymbol != nil {
		return true
	}

	return false
}

// SetUniqueSymbol gets a reference to the given string and assigns it to the UniqueSymbol field.
func (o *MarketPerformanceDateData) SetUniqueSymbol(v string) {
	o.UniqueSymbol = &v
}

// GetCurrencyIso returns the CurrencyIso field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetCurrencyIso() string {
	if o == nil || o.CurrencyIso == nil {
		var ret string
		return ret
	}
	return *o.CurrencyIso
}

// GetCurrencyIsoOk returns a tuple with the CurrencyIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetCurrencyIsoOk() (*string, bool) {
	if o == nil || o.CurrencyIso == nil {
		return nil, false
	}
	return o.CurrencyIso, true
}

// HasCurrencyIso returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasCurrencyIso() bool {
	if o != nil && o.CurrencyIso != nil {
		return true
	}

	return false
}

// SetCurrencyIso gets a reference to the given string and assigns it to the CurrencyIso field.
func (o *MarketPerformanceDateData) SetCurrencyIso(v string) {
	o.CurrencyIso = &v
}

// GetLastSharePrice returns the LastSharePrice field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetLastSharePrice() float32 {
	if o == nil || o.LastSharePrice == nil {
		var ret float32
		return ret
	}
	return *o.LastSharePrice
}

// GetLastSharePriceOk returns a tuple with the LastSharePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetLastSharePriceOk() (*float32, bool) {
	if o == nil || o.LastSharePrice == nil {
		return nil, false
	}
	return o.LastSharePrice, true
}

// HasLastSharePrice returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasLastSharePrice() bool {
	if o != nil && o.LastSharePrice != nil {
		return true
	}

	return false
}

// SetLastSharePrice gets a reference to the given float32 and assigns it to the LastSharePrice field.
func (o *MarketPerformanceDateData) SetLastSharePrice(v float32) {
	o.LastSharePrice = &v
}

// GetReturn7d returns the Return7d field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn7d() float32 {
	if o == nil || o.Return7d == nil {
		var ret float32
		return ret
	}
	return *o.Return7d
}

// GetReturn7dOk returns a tuple with the Return7d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn7dOk() (*float32, bool) {
	if o == nil || o.Return7d == nil {
		return nil, false
	}
	return o.Return7d, true
}

// HasReturn7d returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn7d() bool {
	if o != nil && o.Return7d != nil {
		return true
	}

	return false
}

// SetReturn7d gets a reference to the given float32 and assigns it to the Return7d field.
func (o *MarketPerformanceDateData) SetReturn7d(v float32) {
	o.Return7d = &v
}

// GetReturn30d returns the Return30d field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn30d() float32 {
	if o == nil || o.Return30d == nil {
		var ret float32
		return ret
	}
	return *o.Return30d
}

// GetReturn30dOk returns a tuple with the Return30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn30dOk() (*float32, bool) {
	if o == nil || o.Return30d == nil {
		return nil, false
	}
	return o.Return30d, true
}

// HasReturn30d returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn30d() bool {
	if o != nil && o.Return30d != nil {
		return true
	}

	return false
}

// SetReturn30d gets a reference to the given float32 and assigns it to the Return30d field.
func (o *MarketPerformanceDateData) SetReturn30d(v float32) {
	o.Return30d = &v
}

// GetReturn90d returns the Return90d field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn90d() float32 {
	if o == nil || o.Return90d == nil {
		var ret float32
		return ret
	}
	return *o.Return90d
}

// GetReturn90dOk returns a tuple with the Return90d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn90dOk() (*float32, bool) {
	if o == nil || o.Return90d == nil {
		return nil, false
	}
	return o.Return90d, true
}

// HasReturn90d returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn90d() bool {
	if o != nil && o.Return90d != nil {
		return true
	}

	return false
}

// SetReturn90d gets a reference to the given float32 and assigns it to the Return90d field.
func (o *MarketPerformanceDateData) SetReturn90d(v float32) {
	o.Return90d = &v
}

// GetReturn1yrAbs returns the Return1yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn1yrAbs() float32 {
	if o == nil || o.Return1yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return1yrAbs
}

// GetReturn1yrAbsOk returns a tuple with the Return1yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn1yrAbsOk() (*float32, bool) {
	if o == nil || o.Return1yrAbs == nil {
		return nil, false
	}
	return o.Return1yrAbs, true
}

// HasReturn1yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn1yrAbs() bool {
	if o != nil && o.Return1yrAbs != nil {
		return true
	}

	return false
}

// SetReturn1yrAbs gets a reference to the given float32 and assigns it to the Return1yrAbs field.
func (o *MarketPerformanceDateData) SetReturn1yrAbs(v float32) {
	o.Return1yrAbs = &v
}

// GetReturn3yrAbs returns the Return3yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn3yrAbs() float32 {
	if o == nil || o.Return3yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return3yrAbs
}

// GetReturn3yrAbsOk returns a tuple with the Return3yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn3yrAbsOk() (*float32, bool) {
	if o == nil || o.Return3yrAbs == nil {
		return nil, false
	}
	return o.Return3yrAbs, true
}

// HasReturn3yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn3yrAbs() bool {
	if o != nil && o.Return3yrAbs != nil {
		return true
	}

	return false
}

// SetReturn3yrAbs gets a reference to the given float32 and assigns it to the Return3yrAbs field.
func (o *MarketPerformanceDateData) SetReturn3yrAbs(v float32) {
	o.Return3yrAbs = &v
}

// GetReturn5yrAbs returns the Return5yrAbs field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetReturn5yrAbs() float32 {
	if o == nil || o.Return5yrAbs == nil {
		var ret float32
		return ret
	}
	return *o.Return5yrAbs
}

// GetReturn5yrAbsOk returns a tuple with the Return5yrAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetReturn5yrAbsOk() (*float32, bool) {
	if o == nil || o.Return5yrAbs == nil {
		return nil, false
	}
	return o.Return5yrAbs, true
}

// HasReturn5yrAbs returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasReturn5yrAbs() bool {
	if o != nil && o.Return5yrAbs != nil {
		return true
	}

	return false
}

// SetReturn5yrAbs gets a reference to the given float32 and assigns it to the Return5yrAbs field.
func (o *MarketPerformanceDateData) SetReturn5yrAbs(v float32) {
	o.Return5yrAbs = &v
}

// GetCanonicalUrl returns the CanonicalUrl field value if set, zero value otherwise.
func (o *MarketPerformanceDateData) GetCanonicalUrl() string {
	if o == nil || o.CanonicalUrl == nil {
		var ret string
		return ret
	}
	return *o.CanonicalUrl
}

// GetCanonicalUrlOk returns a tuple with the CanonicalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPerformanceDateData) GetCanonicalUrlOk() (*string, bool) {
	if o == nil || o.CanonicalUrl == nil {
		return nil, false
	}
	return o.CanonicalUrl, true
}

// HasCanonicalUrl returns a boolean if a field has been set.
func (o *MarketPerformanceDateData) HasCanonicalUrl() bool {
	if o != nil && o.CanonicalUrl != nil {
		return true
	}

	return false
}

// SetCanonicalUrl gets a reference to the given string and assigns it to the CanonicalUrl field.
func (o *MarketPerformanceDateData) SetCanonicalUrl(v string) {
	o.CanonicalUrl = &v
}

func (o MarketPerformanceDateData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TickerSymbol != nil {
		toSerialize["ticker_symbol"] = o.TickerSymbol
	}
	if o.UniqueSymbol != nil {
		toSerialize["unique_symbol"] = o.UniqueSymbol
	}
	if o.CurrencyIso != nil {
		toSerialize["currency_iso"] = o.CurrencyIso
	}
	if o.LastSharePrice != nil {
		toSerialize["last_share_price"] = o.LastSharePrice
	}
	if o.Return7d != nil {
		toSerialize["return_7d"] = o.Return7d
	}
	if o.Return30d != nil {
		toSerialize["return_30d"] = o.Return30d
	}
	if o.Return90d != nil {
		toSerialize["return_90d"] = o.Return90d
	}
	if o.Return1yrAbs != nil {
		toSerialize["return_1yr_abs"] = o.Return1yrAbs
	}
	if o.Return3yrAbs != nil {
		toSerialize["return_3yr_abs"] = o.Return3yrAbs
	}
	if o.Return5yrAbs != nil {
		toSerialize["return_5yr_abs"] = o.Return5yrAbs
	}
	if o.CanonicalUrl != nil {
		toSerialize["canonical_url"] = o.CanonicalUrl
	}
	return json.Marshal(toSerialize)
}

type NullableMarketPerformanceDateData struct {
	value *MarketPerformanceDateData
	isSet bool
}

func (v NullableMarketPerformanceDateData) Get() *MarketPerformanceDateData {
	return v.value
}

func (v *NullableMarketPerformanceDateData) Set(val *MarketPerformanceDateData) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketPerformanceDateData) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketPerformanceDateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketPerformanceDateData(val *MarketPerformanceDateData) *NullableMarketPerformanceDateData {
	return &NullableMarketPerformanceDateData{value: val, isSet: true}
}

func (v NullableMarketPerformanceDateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketPerformanceDateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
